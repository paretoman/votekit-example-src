{"mappings":"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","sources":["src/command/ComMessenger.js","src/ui/Changes.js","src/ui/EventHandlers.js","src/ui/Screen.js","lib/canvas2svg.esm.js","src/ui/addSVGOutput.js","src/menu/Button.js","src/menu/ButtonGroup.js","src/menu/MenuItem.js","src/menu/Menu.js","src/castVotes/AreaSummer.js","src/utilities/jsHelpers.js","src/castVotes/LineSummer.js","src/castVotes/castVotes.js","src/castVotes/pluralityBallot.js","src/electionMethods/electionMethods.js","src/electionMethods/plurality.js","src/electionMethods/randomWinner.js","src/electionMethods/huntingtonHill.js","src/election/ElectionMethod.js","src/election/Election.js","lib/d3-delaunay.esm.js","src/voters/VoronoiGroup.js","src/voters/SimVoter.js","src/voters/OneVoterCircle.js","src/candidates/SimCandidate.js","src/candidates/SimCandidateList.js","src/voters/SimVoterList.js","src/sim/DraggableManager.js","src/sim/states/SimBase.js","src/sim/states/SimOne.js","src/election/CandidateDistributionSampler.js","src/candidates/SimCandidateDistributionList.js","src/candidates/SimCandidateDistribution.js","src/voters/SampleVoterCircle.js","src/sim/states/SimSample.js","src/voters/GeoVoterBasis.js","lib/simplex-noise/simplex-noise.ts","src/voters/geoNoise.js","src/voters/NoiseImage.js","lib/d3-polygon/src/area.js","lib/d3-polygon/src/centroid.js","src/voters/lloydVoronoi.js","src/utilities/graphicsUtilities.js","lib/polygonClip.js","src/voters/geoCensus.js","src/voters/DistrictMaker.js","src/voters/GeoVoters.js","src/sim/states/SimGeoOne.js","src/sim/Registrar.js","../node_modules/process/browser.js","lib/tween.esm.js","src/voters/CircleGraphic.js","src/sim/tooltipForEntity.js","src/sim/hideOnClickOutside.js","src/voters/VoterCircle.js","src/voters/VoterCircleCommander.js","src/sim/SimAddVoters.js","src/sim/createAddVoter.js","src/candidates/SquareGraphic.js","src/candidates/Candidate.js","src/candidates/CandidateCommander.js","src/sim/CreateAddCandidate.js","src/sim/SimAddCandidates.js","src/candidates/CandidateDistribution.js","src/candidates/CandidateDnCommander.js","src/sim/CreateAddCandidateDistribution.js","src/sim/SimAddCandidateDns.js","src/voters/OneDVoronoi.js","src/voters/OneDVoterBlock.js","src/sim/states/SimOneDOne.js","src/sim/Sim.js","src/sim/addSimControlsLabel.js","src/election/SampleElections.js","lib/colorBlendScript.js","src/election/colorBlend.js","src/election/GeoElection.js","src/ui/Layout.js","src/election/OneElection.js","src/command/CommandStore.js","src/command/ConfigKeeper.js","src/command/History.js","src/command/Commander.js","src/command/addSaveConfigToText.js","src/command/addSaveConfigToLink.js","src/ui/sandbox.js","src/command/addUndo.js","src/command/loadConfigText.js","src/ui/addSandboxes.js","src/command/checkURL.js"],"sourcesContent":["/** @module */\r\n\r\n/** Connect two sandboxes by passing messages between their commanders.\r\n * This is kind of like a mediator pattern, but also maybe an observer pattern. */\r\nexport default class ComMessenger {\r\n    /** Make sure broadcasted commands don't trigger broadcasts */\r\n    #protect\r\n\r\n    #commanders\r\n\r\n    #linked\r\n\r\n    constructor() {\r\n        this.#linked = true\r\n        this.#commanders = []\r\n        this.#protect = false\r\n    }\r\n\r\n    setLinked(value) {\r\n        this.#linked = value\r\n    }\r\n\r\n    addCommander(commander) {\r\n        this.#commanders.push(commander)\r\n    }\r\n\r\n    broadcastDo(command, originCommander) {\r\n        if (this.#linked && this.#protect === false) {\r\n            this.#protect = true\r\n            this.#commanders.forEach((com) => com.passDo(command))\r\n            this.#protect = false\r\n        } else {\r\n            originCommander.passDo(command)\r\n        }\r\n    }\r\n\r\n    broadcastDoCommands(commands, originCommander) {\r\n        if (this.#linked && this.#protect === false) {\r\n            this.#protect = true\r\n            this.#commanders.forEach(\r\n                (com) => com.passDoCommands(commands),\r\n            )\r\n            this.#protect = false\r\n        } else {\r\n            originCommander.passDoCommands(commands)\r\n        }\r\n    }\r\n\r\n    broadcastLoadConfig(newConfig, originCommander) {\r\n        if (this.#linked && this.#protect === false) {\r\n            this.#protect = true\r\n            this.#commanders.forEach(\r\n                (com) => com.passLoadConfig(newConfig),\r\n            )\r\n            this.#protect = false\r\n        } else {\r\n            originCommander.passLoadConfig(newConfig)\r\n        }\r\n    }\r\n\r\n    broadCastLoadCommands(commands, originCommander) {\r\n        if (this.#linked && this.#protect === false) {\r\n            this.#protect = true\r\n            this.#commanders.forEach(\r\n                (com) => com.passLoadCommands(commands),\r\n            )\r\n            this.#protect = false\r\n        } else {\r\n            originCommander.passLoadCommands(commands)\r\n        }\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * keep track of changes that occur to a simulation's configuration.\r\n * @constructor\r\n */\r\nexport default function Changes() {\r\n    const self = this\r\n\r\n    const changes = ['init']\r\n\r\n    self.add = (changeList) => {\r\n        changeList.forEach(\r\n            (c) => changes.push(c),\r\n        )\r\n    }\r\n    self.check = (changeList) => {\r\n        let n = 0\r\n        changeList.forEach(\r\n            (c) => { n += changes.includes(c) ? 1 : 0 },\r\n        )\r\n        return n > 0\r\n    }\r\n    self.checkNone = () => (changes.length === 0)\r\n    self.clear = () => {\r\n        changes.splice(0, changes.length)\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Set event handlers for a screen.foreground.\r\n * We want to set the handlers once for the canvas,\r\n * and use this class to change the functions that the handlers call.\r\n * Then allow sims to set the functions called by the handlers.\r\n * @constructor\r\n */\r\nexport default function EventHandlers() {\r\n    const self = this\r\n\r\n    // Event Handlers - well, at least they handle the event handlers//\r\n    self.handlers = {\r\n        start: () => {},\r\n        move: () => {},\r\n        end: () => {},\r\n        touchmove: () => {},\r\n        touchstart: () => {},\r\n        touchend: () => {},\r\n    }\r\n\r\n    // overwrite event handlers\r\n    self.set = (eHandlers) => {\r\n        Object.assign(self.handlers, eHandlers)\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport EventHandlers from './EventHandlers.js'\r\n\r\n/**\r\n * Set up a screen to view some objects.\r\n * A detail here is that we have browser pixels and device pixels.\r\n * Broswer pixels feel about the same size on any device (visual arc length).\r\n * Device pixels can be much smaller for high-dpi devices.\r\n * @param {Number} w - width in browser pixels of the canvas.\r\n * @param {Number} h - height in browser pixels of the canvas.\r\n * @param {Layout} layout\r\n * @constructor\r\n */\r\nexport default function Screen(w, h, layout) {\r\n    const self = this\r\n\r\n    self.width = w // measured in browser pixels\r\n    self.height = h\r\n\r\n    // canvas\r\n    self.canvas = document.createElement('canvas')\r\n    self.canvas.setAttribute('class', 'background')\r\n    self.ctx = self.canvas.getContext('2d')\r\n\r\n    // tooltips\r\n    self.tooltips = document.createElement('div')\r\n    self.tooltips.setAttribute('class', 'tooltips')\r\n\r\n    // foreground\r\n    self.foreground = document.createElement('canvas')\r\n    self.foreground.setAttribute('class', 'foreground')\r\n    self.fctx = self.foreground.getContext('2d')\r\n\r\n    // geoMaps\r\n    self.geoMaps = document.createElement('canvas')\r\n    self.geoMaps.setAttribute('class', 'geoMaps')\r\n    self.gctx = self.geoMaps.getContext('2d')\r\n\r\n    const clearDiv = document.createElement('div')\r\n    layout.newElement('clearDiv', clearDiv)\r\n    layout.newElement('screen', self.canvas)\r\n    layout.newElement('tooltips', self.tooltips)\r\n    layout.newElement('foreground', self.foreground)\r\n    layout.newElement('geoMaps', self.geoMaps)\r\n\r\n    self.noBuffers = false\r\n\r\n    // use scaling for high DPI devices instead of multiplying every time inside draw calls\r\n    // https://www.html5rocks.com/en/tutorials/canvas/hidpi/\r\n    self.pixelRatio = getPixelRatio(self.ctx)\r\n\r\n    self.canvas.width = w * self.pixelRatio // measured in device pixels\r\n    self.canvas.height = h * self.pixelRatio\r\n\r\n    self.canvas.style.width = `${w}px`\r\n    self.canvas.style.height = `${h}px`\r\n\r\n    self.tooltips.style.width = `${w}px`\r\n    self.tooltips.style.height = '0px'\r\n\r\n    self.foreground.width = w * self.pixelRatio // measured in device pixels\r\n    self.foreground.height = h * self.pixelRatio\r\n\r\n    self.foreground.style.width = `${w}px`\r\n    self.foreground.style.height = `${h}px`\r\n\r\n    const h3 = Math.round(h / 3)\r\n    self.geoMaps.width = w * self.pixelRatio // measured in device pixels\r\n    self.geoMaps.height = h3 * self.pixelRatio\r\n\r\n    self.geoMaps.style.width = `${w}px`\r\n    self.geoMaps.style.height = `${h3}px`\r\n\r\n    self.ctx.scale(self.pixelRatio, self.pixelRatio)\r\n    self.fctx.scale(self.pixelRatio, self.pixelRatio)\r\n    self.gctx.scale(self.pixelRatio, self.pixelRatio)\r\n\r\n    self.clear = function () {\r\n        self.ctx.clearRect(0, 0, self.canvas.width, self.canvas.height)\r\n    }\r\n    self.clearForeground = function () {\r\n        self.fctx.clearRect(0, 0, self.canvas.width, self.canvas.height)\r\n    }\r\n    self.setCtx = function (c) {\r\n        self.ctx = c\r\n    }\r\n    self.setFCtx = function (c) {\r\n        self.fctx = c\r\n    }\r\n    self.setGCtx = function (c) {\r\n        self.gctx = c\r\n    }\r\n    self.setNoBuffers = function (noBuffers) {\r\n        self.noBuffers = noBuffers\r\n    }\r\n    self.showGeoMaps = () => {\r\n        self.geoMaps.style.display = 'block'\r\n    }\r\n    self.hideGeoMaps = () => {\r\n        self.geoMaps.style.display = 'none'\r\n    }\r\n\r\n    self.eventHandlers = new EventHandlers()\r\n    const { handlers } = self.eventHandlers\r\n\r\n    self.foreground.onmousedown = (e) => handlers.start(e)\r\n    self.foreground.onmousemove = (e) => handlers.move(e)\r\n    self.foreground.onmouseup = (e) => handlers.end(e)\r\n    self.foreground.addEventListener('touchmove', (e) => handlers.touchmove(e))\r\n    self.foreground.addEventListener('touchstart', (e) => handlers.touchstart(e))\r\n    self.foreground.addEventListener('touchend', (e) => handlers.touchend(e))\r\n\r\n    // mouse up outside of canvas\r\n    const current = document.onmouseup\r\n    document.onmouseup = (e) => {\r\n        if (current) current(e)\r\n        self.foreground.onmouseup(e)\r\n    }\r\n}\r\n\r\nfunction getPixelRatio(context) {\r\n    const backingStore = context.backingStorePixelRatio\r\n          || context.webkitBackingStorePixelRatio\r\n          || context.mozBackingStorePixelRatio\r\n          || context.msBackingStorePixelRatio\r\n          || context.oBackingStorePixelRatio\r\n          || context.backingStorePixelRatio || 1\r\n\r\n    return (window.devicePixelRatio || 1) / backingStore\r\n}\r\n","/*!!\r\n *  Canvas 2 Svg v1.0.19\r\n *  A low level canvas to SVG converter. Uses a mock canvas context to build an SVG document.\r\n *\r\n *  Licensed under the MIT license:\r\n *  http://www.opensource.org/licenses/mit-license.php\r\n *\r\n *  Author:\r\n *  Kerry Liu\r\n *\r\n *  Copyright (c) 2014 Gliffy Inc.\r\n */\r\n\r\n// Altered to make into an ES2015 module.\r\n\r\nvar STYLES, ctx, CanvasGradient, CanvasPattern, namedEntities;\r\n\r\n//helper function to format a string\r\nfunction format(str, args) {\r\n    var keys = Object.keys(args), i;\r\n    for (i=0; i<keys.length; i++) {\r\n        str = str.replace(new RegExp(\"\\\\{\" + keys[i] + \"\\\\}\", \"gi\"), args[keys[i]]);\r\n    }\r\n    return str;\r\n}\r\n\r\n//helper function that generates a random string\r\nfunction randomString(holder) {\r\n    var chars, randomstring, i;\r\n    if (!holder) {\r\n        throw new Error(\"cannot create a random attribute name for an undefined object\");\r\n    }\r\n    chars = \"ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\r\n    randomstring = \"\";\r\n    do {\r\n        randomstring = \"\";\r\n        for (i = 0; i < 12; i++) {\r\n            randomstring += chars[Math.floor(Math.random() * chars.length)];\r\n        }\r\n    } while (holder[randomstring]);\r\n    return randomstring;\r\n}\r\n\r\n//helper function to map named to numbered entities\r\nfunction createNamedToNumberedLookup(items, radix) {\r\n    var i, entity, lookup = {}, base10, base16;\r\n    items = items.split(',');\r\n    radix = radix || 10;\r\n    // Map from named to numbered entities.\r\n    for (i = 0; i < items.length; i += 2) {\r\n        entity = '&' + items[i + 1] + ';';\r\n        base10 = parseInt(items[i], radix);\r\n        lookup[entity] = '&#'+base10+';';\r\n    }\r\n    //FF and IE need to create a regex from hex values ie &nbsp; == \\xa0\r\n    lookup[\"\\\\xa0\"] = '&#160;';\r\n    return lookup;\r\n}\r\n\r\n//helper function to map canvas-textAlign to svg-textAnchor\r\nfunction getTextAnchor(textAlign) {\r\n    //TODO: support rtl languages\r\n    var mapping = {\"left\":\"start\", \"right\":\"end\", \"center\":\"middle\", \"start\":\"start\", \"end\":\"end\"};\r\n    return mapping[textAlign] || mapping.start;\r\n}\r\n\r\n//helper function to map canvas-textBaseline to svg-dominantBaseline\r\nfunction getDominantBaseline(textBaseline) {\r\n    //INFO: not supported in all browsers\r\n    var mapping = {\"alphabetic\": \"alphabetic\", \"hanging\": \"hanging\", \"top\":\"text-before-edge\", \"bottom\":\"text-after-edge\", \"middle\":\"central\"};\r\n    return mapping[textBaseline] || mapping.alphabetic;\r\n}\r\n\r\n// Unpack entities lookup where the numbers are in radix 32 to reduce the size\r\n// entity mapping courtesy of tinymce\r\nnamedEntities = createNamedToNumberedLookup(\r\n    '50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,' +\r\n        '5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,' +\r\n        '5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,' +\r\n        '5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,' +\r\n        '68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,' +\r\n        '6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,' +\r\n        '6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,' +\r\n        '75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,' +\r\n        '7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,' +\r\n        '7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,' +\r\n        'sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,' +\r\n        'st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,' +\r\n        't9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,' +\r\n        'tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,' +\r\n        'u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,' +\r\n        '81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,' +\r\n        '8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,' +\r\n        '8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,' +\r\n        '8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,' +\r\n        '8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,' +\r\n        'nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,' +\r\n        'rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,' +\r\n        'Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,' +\r\n        '80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,' +\r\n        '811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro', 32);\r\n\r\n\r\n//Some basic mappings for attributes and default values.\r\nSTYLES = {\r\n    \"strokeStyle\":{\r\n        svgAttr : \"stroke\", //corresponding svg attribute\r\n        canvas : \"#000000\", //canvas default\r\n        svg : \"none\",       //svg default\r\n        apply : \"stroke\"    //apply on stroke() or fill()\r\n    },\r\n    \"fillStyle\":{\r\n        svgAttr : \"fill\",\r\n        canvas : \"#000000\",\r\n        svg : null, //svg default is black, but we need to special case this to handle canvas stroke without fill\r\n        apply : \"fill\"\r\n    },\r\n    \"lineCap\":{\r\n        svgAttr : \"stroke-linecap\",\r\n        canvas : \"butt\",\r\n        svg : \"butt\",\r\n        apply : \"stroke\"\r\n    },\r\n    \"lineJoin\":{\r\n        svgAttr : \"stroke-linejoin\",\r\n        canvas : \"miter\",\r\n        svg : \"miter\",\r\n        apply : \"stroke\"\r\n    },\r\n    \"miterLimit\":{\r\n        svgAttr : \"stroke-miterlimit\",\r\n        canvas : 10,\r\n        svg : 4,\r\n        apply : \"stroke\"\r\n    },\r\n    \"lineWidth\":{\r\n        svgAttr : \"stroke-width\",\r\n        canvas : 1,\r\n        svg : 1,\r\n        apply : \"stroke\"\r\n    },\r\n    \"globalAlpha\": {\r\n        svgAttr : \"opacity\",\r\n        canvas : 1,\r\n        svg : 1,\r\n        apply :  \"fill stroke\"\r\n    },\r\n    \"font\":{\r\n        //font converts to multiple svg attributes, there is custom logic for this\r\n        canvas : \"10px sans-serif\"\r\n    },\r\n    \"shadowColor\":{\r\n        canvas : \"#000000\"\r\n    },\r\n    \"shadowOffsetX\":{\r\n        canvas : 0\r\n    },\r\n    \"shadowOffsetY\":{\r\n        canvas : 0\r\n    },\r\n    \"shadowBlur\":{\r\n        canvas : 0\r\n    },\r\n    \"textAlign\":{\r\n        canvas : \"start\"\r\n    },\r\n    \"textBaseline\":{\r\n        canvas : \"alphabetic\"\r\n    },\r\n    \"lineDash\" : {\r\n        svgAttr : \"stroke-dasharray\",\r\n        canvas : [],\r\n        svg : null,\r\n        apply : \"stroke\"\r\n    }\r\n};\r\n\r\n/**\r\n *\r\n * @param gradientNode - reference to the gradient\r\n * @constructor\r\n */\r\nCanvasGradient = function (gradientNode, ctx) {\r\n    this.__root = gradientNode;\r\n    this.__ctx = ctx;\r\n};\r\n\r\n/**\r\n * Adds a color stop to the gradient root\r\n */\r\nCanvasGradient.prototype.addColorStop = function (offset, color) {\r\n    var stop = this.__ctx.__createElement(\"stop\"), regex, matches;\r\n    stop.setAttribute(\"offset\", offset);\r\n    if (color.indexOf(\"rgba\") !== -1) {\r\n        //separate alpha value, since webkit can't handle it\r\n        regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\r\n        matches = regex.exec(color);\r\n        stop.setAttribute(\"stop-color\", format(\"rgb({r},{g},{b})\", {r:matches[1], g:matches[2], b:matches[3]}));\r\n        stop.setAttribute(\"stop-opacity\", matches[4]);\r\n    } else {\r\n        stop.setAttribute(\"stop-color\", color);\r\n    }\r\n    this.__root.appendChild(stop);\r\n};\r\n\r\nCanvasPattern = function (pattern, ctx) {\r\n    this.__root = pattern;\r\n    this.__ctx = ctx;\r\n};\r\n\r\n/**\r\n * The mock canvas context\r\n * @param o - options include:\r\n * ctx - existing Context2D to wrap around\r\n * width - width of your canvas (defaults to 500)\r\n * height - height of your canvas (defaults to 500)\r\n * enableMirroring - enables canvas mirroring (get image data) (defaults to false)\r\n * document - the document object (defaults to the current document)\r\n */\r\nctx = function (o) {\r\n    var defaultOptions = { width:500, height:500, enableMirroring : false}, options;\r\n\r\n    //keep support for this way of calling C2S: new C2S(width,height)\r\n    if (arguments.length > 1) {\r\n        options = defaultOptions;\r\n        options.width = arguments[0];\r\n        options.height = arguments[1];\r\n    } else if ( !o ) {\r\n        options = defaultOptions;\r\n    } else {\r\n        options = o;\r\n    }\r\n\r\n    if (!(this instanceof ctx)) {\r\n        //did someone call this without new?\r\n        return new ctx(options);\r\n    }\r\n\r\n    //setup options\r\n    this.width = options.width || defaultOptions.width;\r\n    this.height = options.height || defaultOptions.height;\r\n    this.enableMirroring = options.enableMirroring !== undefined ? options.enableMirroring : defaultOptions.enableMirroring;\r\n\r\n    this.canvas = this;   ///point back to this instance!\r\n    this.__document = options.document || document;\r\n\r\n    // allow passing in an existing context to wrap around\r\n    // if a context is passed in, we know a canvas already exist\r\n    if (options.ctx) {\r\n        this.__ctx = options.ctx;\r\n    } else {\r\n        this.__canvas = this.__document.createElement(\"canvas\");\r\n        this.__ctx = this.__canvas.getContext(\"2d\");\r\n    }\r\n\r\n    this.__setDefaultStyles();\r\n    this.__stack = [this.__getStyleState()];\r\n    this.__groupStack = [];\r\n\r\n    //the root svg element\r\n    this.__root = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    this.__root.setAttribute(\"version\", 1.1);\r\n    this.__root.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\r\n    this.__root.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\r\n    this.__root.setAttribute(\"width\", this.width);\r\n    this.__root.setAttribute(\"height\", this.height);\r\n\r\n    //make sure we don't generate the same ids in defs\r\n    this.__ids = {};\r\n\r\n    //defs tag\r\n    this.__defs = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\r\n    this.__root.appendChild(this.__defs);\r\n\r\n    //also add a group child. the svg element can't use the transform attribute\r\n    this.__currentElement = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n    this.__root.appendChild(this.__currentElement);\r\n};\r\n\r\n\r\n/**\r\n * Creates the specified svg element\r\n * @private\r\n */\r\nctx.prototype.__createElement = function (elementName, properties, resetFill) {\r\n    if (typeof properties === \"undefined\") {\r\n        properties = {};\r\n    }\r\n\r\n    var element = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", elementName),\r\n        keys = Object.keys(properties), i, key;\r\n    if (resetFill) {\r\n        //if fill or stroke is not specified, the svg element should not display. By default SVG's fill is black.\r\n        element.setAttribute(\"fill\", \"none\");\r\n        element.setAttribute(\"stroke\", \"none\");\r\n    }\r\n    for (i=0; i<keys.length; i++) {\r\n        key = keys[i];\r\n        element.setAttribute(key, properties[key]);\r\n    }\r\n    return element;\r\n};\r\n\r\n/**\r\n * Applies default canvas styles to the context\r\n * @private\r\n */\r\nctx.prototype.__setDefaultStyles = function () {\r\n    //default 2d canvas context properties see:http://www.w3.org/TR/2dcontext/\r\n    var keys = Object.keys(STYLES), i, key;\r\n    for (i=0; i<keys.length; i++) {\r\n        key = keys[i];\r\n        this[key] = STYLES[key].canvas;\r\n    }\r\n};\r\n\r\n/**\r\n * Applies styles on restore\r\n * @param styleState\r\n * @private\r\n */\r\nctx.prototype.__applyStyleState = function (styleState) {\r\n    var keys = Object.keys(styleState), i, key;\r\n    for (i=0; i<keys.length; i++) {\r\n        key = keys[i];\r\n        this[key] = styleState[key];\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the current style state\r\n * @return {Object}\r\n * @private\r\n */\r\nctx.prototype.__getStyleState = function () {\r\n    var i, styleState = {}, keys = Object.keys(STYLES), key;\r\n    for (i=0; i<keys.length; i++) {\r\n        key = keys[i];\r\n        styleState[key] = this[key];\r\n    }\r\n    return styleState;\r\n};\r\n\r\n/**\r\n * Apples the current styles to the current SVG element. On \"ctx.fill\" or \"ctx.stroke\"\r\n * @param type\r\n * @private\r\n */\r\nctx.prototype.__applyStyleToCurrentElement = function (type) {\r\n    var currentElement = this.__currentElement;\r\n    var currentStyleGroup = this.__currentElementsToStyle;\r\n    if (currentStyleGroup) {\r\n        currentElement.setAttribute(type, \"\");\r\n        currentElement = currentStyleGroup.element;\r\n        currentStyleGroup.children.forEach(function (node) {\r\n            node.setAttribute(type, \"\");\r\n        })\r\n    }\r\n\r\n    var keys = Object.keys(STYLES), i, style, value, id, regex, matches;\r\n    for (i = 0; i < keys.length; i++) {\r\n        style = STYLES[keys[i]];\r\n        value = this[keys[i]];\r\n        if (style.apply) {\r\n            //is this a gradient or pattern?\r\n            if (value instanceof CanvasPattern) {\r\n                //pattern\r\n                if (value.__ctx) {\r\n                    //copy over defs\r\n                    while(value.__ctx.__defs.childNodes.length) {\r\n                        id = value.__ctx.__defs.childNodes[0].getAttribute(\"id\");\r\n                        this.__ids[id] = id;\r\n                        this.__defs.appendChild(value.__ctx.__defs.childNodes[0]);\r\n                    }\r\n                }\r\n                currentElement.setAttribute(style.apply, format(\"url(#{id})\", {id:value.__root.getAttribute(\"id\")}));\r\n            }\r\n            else if (value instanceof CanvasGradient) {\r\n                //gradient\r\n                currentElement.setAttribute(style.apply, format(\"url(#{id})\", {id:value.__root.getAttribute(\"id\")}));\r\n            } else if (style.apply.indexOf(type)!==-1 && style.svg !== value) {\r\n                if ((style.svgAttr === \"stroke\" || style.svgAttr === \"fill\") && value.indexOf(\"rgba\") !== -1) {\r\n                    //separate alpha value, since illustrator can't handle it\r\n                    regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\r\n                    matches = regex.exec(value);\r\n                    currentElement.setAttribute(style.svgAttr, format(\"rgb({r},{g},{b})\", {r:matches[1], g:matches[2], b:matches[3]}));\r\n                    //should take globalAlpha here\r\n                    var opacity = matches[4];\r\n                    var globalAlpha = this.globalAlpha;\r\n                    if (globalAlpha != null) {\r\n                        opacity *= globalAlpha;\r\n                    }\r\n                    currentElement.setAttribute(style.svgAttr+\"-opacity\", opacity);\r\n                } else {\r\n                    var attr = style.svgAttr;\r\n                    if (keys[i] === 'globalAlpha') {\r\n                        attr = type+'-'+style.svgAttr;\r\n                        if (currentElement.getAttribute(attr)) {\r\n                                //fill-opacity or stroke-opacity has already been set by stroke or fill.\r\n                            continue;\r\n                        }\r\n                    }\r\n                    //otherwise only update attribute if right type, and not svg default\r\n                    currentElement.setAttribute(attr, value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Will return the closest group or svg node. May return the current element.\r\n * @private\r\n */\r\nctx.prototype.__closestGroupOrSvg = function (node) {\r\n    node = node || this.__currentElement;\r\n    if (node.nodeName === \"g\" || node.nodeName === \"svg\") {\r\n        return node;\r\n    } else {\r\n        return this.__closestGroupOrSvg(node.parentNode);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the serialized value of the svg so far\r\n * @param fixNamedEntities - Standalone SVG doesn't support named entities, which document.createTextNode encodes.\r\n *                           If true, we attempt to find all named entities and encode it as a numeric entity.\r\n * @return serialized svg\r\n */\r\nctx.prototype.getSerializedSvg = function (fixNamedEntities) {\r\n    var serialized = new XMLSerializer().serializeToString(this.__root),\r\n        keys, i, key, value, regexp, xmlns;\r\n\r\n    //IE search for a duplicate xmnls because they didn't implement setAttributeNS correctly\r\n    xmlns = /xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\".+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg/gi;\r\n    if (xmlns.test(serialized)) {\r\n        serialized = serialized.replace('xmlns=\"http://www.w3.org/2000/svg','xmlns:xlink=\"http://www.w3.org/1999/xlink');\r\n    }\r\n\r\n    if (fixNamedEntities) {\r\n        keys = Object.keys(namedEntities);\r\n        //loop over each named entity and replace with the proper equivalent.\r\n        for (i=0; i<keys.length; i++) {\r\n            key = keys[i];\r\n            value = namedEntities[key];\r\n            regexp = new RegExp(key, \"gi\");\r\n            if (regexp.test(serialized)) {\r\n                serialized = serialized.replace(regexp, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    return serialized;\r\n};\r\n\r\n\r\n/**\r\n * Returns the root svg\r\n * @return\r\n */\r\nctx.prototype.getSvg = function () {\r\n    return this.__root;\r\n};\r\n/**\r\n * Will generate a group tag.\r\n */\r\nctx.prototype.save = function () {\r\n    var group = this.__createElement(\"g\");\r\n    var parent = this.__closestGroupOrSvg();\r\n    this.__groupStack.push(parent);\r\n    parent.appendChild(group);\r\n    this.__currentElement = group;\r\n    this.__stack.push(this.__getStyleState());\r\n};\r\n/**\r\n * Sets current element to parent, or just root if already root\r\n */\r\nctx.prototype.restore = function () {\r\n    this.__currentElement = this.__groupStack.pop();\r\n    this.__currentElementsToStyle = null;\r\n    //Clearing canvas will make the poped group invalid, currentElement is set to the root group node.\r\n    if (!this.__currentElement) {\r\n        this.__currentElement = this.__root.childNodes[1];\r\n    }\r\n    var state = this.__stack.pop();\r\n    this.__applyStyleState(state);\r\n};\r\n\r\n/**\r\n * Helper method to add transform\r\n * @private\r\n */\r\nctx.prototype.__addTransform = function (t) {\r\n    //if the current element has siblings, add another group\r\n    var parent = this.__closestGroupOrSvg();\r\n    if (parent.childNodes.length > 0) {\r\n        if (this.__currentElement.nodeName === \"path\") {\r\n            if (!this.__currentElementsToStyle) this.__currentElementsToStyle = {element: parent, children: []};\r\n            this.__currentElementsToStyle.children.push(this.__currentElement)\r\n            this.__applyCurrentDefaultPath();\r\n        }\r\n\r\n        var group = this.__createElement(\"g\");\r\n        parent.appendChild(group);\r\n        this.__currentElement = group;\r\n    }\r\n\r\n    var transform = this.__currentElement.getAttribute(\"transform\");\r\n    if (transform) {\r\n        transform += \" \";\r\n    } else {\r\n        transform = \"\";\r\n    }\r\n    transform += t;\r\n    this.__currentElement.setAttribute(\"transform\", transform);\r\n};\r\n\r\n/**\r\n *  scales the current element\r\n */\r\nctx.prototype.scale = function (x, y) {\r\n    if (y === undefined) {\r\n        y = x;\r\n    }\r\n    this.__addTransform(format(\"scale({x},{y})\", {x:x, y:y}));\r\n};\r\n\r\n/**\r\n * rotates the current element\r\n */\r\nctx.prototype.rotate = function (angle) {\r\n    var degrees = (angle * 180 / Math.PI);\r\n    this.__addTransform(format(\"rotate({angle},{cx},{cy})\", {angle:degrees, cx:0, cy:0}));\r\n};\r\n\r\n/**\r\n * translates the current element\r\n */\r\nctx.prototype.translate = function (x, y) {\r\n    this.__addTransform(format(\"translate({x},{y})\", {x:x,y:y}));\r\n};\r\n\r\n/**\r\n * applies a transform to the current element\r\n */\r\nctx.prototype.transform = function (a, b, c, d, e, f) {\r\n    this.__addTransform(format(\"matrix({a},{b},{c},{d},{e},{f})\", {a:a, b:b, c:c, d:d, e:e, f:f}));\r\n};\r\n\r\n/**\r\n * Create a new Path Element\r\n */\r\nctx.prototype.beginPath = function () {\r\n    var path, parent;\r\n\r\n    // Note that there is only one current default path, it is not part of the drawing state.\r\n    // See also: https://html.spec.whatwg.org/multipage/scripting.html#current-default-path\r\n    this.__currentDefaultPath = \"\";\r\n    this.__currentPosition = {};\r\n\r\n    path = this.__createElement(\"path\", {}, true);\r\n    parent = this.__closestGroupOrSvg();\r\n    parent.appendChild(path);\r\n    this.__currentElement = path;\r\n};\r\n\r\n/**\r\n * Helper function to apply currentDefaultPath to current path element\r\n * @private\r\n */\r\nctx.prototype.__applyCurrentDefaultPath = function () {\r\n    var currentElement = this.__currentElement;\r\n    if (currentElement.nodeName === \"path\") {\r\n        currentElement.setAttribute(\"d\", this.__currentDefaultPath);\r\n    } else {\r\n        console.error(\"Attempted to apply path command to node\", currentElement.nodeName);\r\n    }\r\n};\r\n\r\n/**\r\n * Helper function to add path command\r\n * @private\r\n */\r\nctx.prototype.__addPathCommand = function (command) {\r\n    this.__currentDefaultPath += \" \";\r\n    this.__currentDefaultPath += command;\r\n};\r\n\r\n/**\r\n * Adds the move command to the current path element,\r\n * if the currentPathElement is not empty create a new path element\r\n */\r\nctx.prototype.moveTo = function (x,y) {\r\n    if (this.__currentElement.nodeName !== \"path\") {\r\n        this.beginPath();\r\n    }\r\n\r\n    // creates a new subpath with the given point\r\n    this.__currentPosition = {x: x, y: y};\r\n    this.__addPathCommand(format(\"M {x} {y}\", {x:x, y:y}));\r\n};\r\n\r\n/**\r\n * Closes the current path\r\n */\r\nctx.prototype.closePath = function () {\r\n    if (this.__currentDefaultPath) {\r\n        this.__addPathCommand(\"Z\");\r\n    }\r\n};\r\n\r\n/**\r\n * Adds a line to command\r\n */\r\nctx.prototype.lineTo = function (x, y) {\r\n    this.__currentPosition = {x: x, y: y};\r\n    if (this.__currentDefaultPath.indexOf('M') > -1) {\r\n        this.__addPathCommand(format(\"L {x} {y}\", {x:x, y:y}));\r\n    } else {\r\n        this.__addPathCommand(format(\"M {x} {y}\", {x:x, y:y}));\r\n    }\r\n};\r\n\r\n/**\r\n * Add a bezier command\r\n */\r\nctx.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\r\n    this.__currentPosition = {x: x, y: y};\r\n    this.__addPathCommand(format(\"C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}\",\r\n        {cp1x:cp1x, cp1y:cp1y, cp2x:cp2x, cp2y:cp2y, x:x, y:y}));\r\n};\r\n\r\n/**\r\n * Adds a quadratic curve to command\r\n */\r\nctx.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {\r\n    this.__currentPosition = {x: x, y: y};\r\n    this.__addPathCommand(format(\"Q {cpx} {cpy} {x} {y}\", {cpx:cpx, cpy:cpy, x:x, y:y}));\r\n};\r\n\r\n\r\n/**\r\n * Return a new normalized vector of given vector\r\n */\r\nvar normalize = function (vector) {\r\n    var len = Math.sqrt(vector[0] * vector[0] + vector[1] * vector[1]);\r\n    return [vector[0] / len, vector[1] / len];\r\n};\r\n\r\n/**\r\n * Adds the arcTo to the current path\r\n *\r\n * @see http://www.w3.org/TR/2015/WD-2dcontext-20150514/#dom-context-2d-arcto\r\n */\r\nctx.prototype.arcTo = function (x1, y1, x2, y2, radius) {\r\n    // Let the point (x0, y0) be the last point in the subpath.\r\n    var x0 = this.__currentPosition && this.__currentPosition.x;\r\n    var y0 = this.__currentPosition && this.__currentPosition.y;\r\n\r\n    // First ensure there is a subpath for (x1, y1).\r\n    if (typeof x0 == \"undefined\" || typeof y0 == \"undefined\") {\r\n        return;\r\n    }\r\n\r\n    // Negative values for radius must cause the implementation to throw an IndexSizeError exception.\r\n    if (radius < 0) {\r\n        throw new Error(\"IndexSizeError: The radius provided (\" + radius + \") is negative.\");\r\n    }\r\n\r\n    // If the point (x0, y0) is equal to the point (x1, y1),\r\n    // or if the point (x1, y1) is equal to the point (x2, y2),\r\n    // or if the radius radius is zero,\r\n    // then the method must add the point (x1, y1) to the subpath,\r\n    // and connect that point to the previous point (x0, y0) by a straight line.\r\n    if (((x0 === x1) && (y0 === y1))\r\n        || ((x1 === x2) && (y1 === y2))\r\n        || (radius === 0)) {\r\n        this.lineTo(x1, y1);\r\n        return;\r\n    }\r\n\r\n    // Otherwise, if the points (x0, y0), (x1, y1), and (x2, y2) all lie on a single straight line,\r\n    // then the method must add the point (x1, y1) to the subpath,\r\n    // and connect that point to the previous point (x0, y0) by a straight line.\r\n    var unit_vec_p1_p0 = normalize([x0 - x1, y0 - y1]);\r\n    var unit_vec_p1_p2 = normalize([x2 - x1, y2 - y1]);\r\n    if (unit_vec_p1_p0[0] * unit_vec_p1_p2[1] === unit_vec_p1_p0[1] * unit_vec_p1_p2[0]) {\r\n        this.lineTo(x1, y1);\r\n        return;\r\n    }\r\n\r\n    // Otherwise, let The Arc be the shortest arc given by circumference of the circle that has radius radius,\r\n    // and that has one point tangent to the half-infinite line that crosses the point (x0, y0) and ends at the point (x1, y1),\r\n    // and that has a different point tangent to the half-infinite line that ends at the point (x1, y1), and crosses the point (x2, y2).\r\n    // The points at which this circle touches these two lines are called the start and end tangent points respectively.\r\n\r\n    // note that both vectors are unit vectors, so the length is 1\r\n    var cos = (unit_vec_p1_p0[0] * unit_vec_p1_p2[0] + unit_vec_p1_p0[1] * unit_vec_p1_p2[1]);\r\n    var theta = Math.acos(Math.abs(cos));\r\n\r\n    // Calculate origin\r\n    var unit_vec_p1_origin = normalize([\r\n        unit_vec_p1_p0[0] + unit_vec_p1_p2[0],\r\n        unit_vec_p1_p0[1] + unit_vec_p1_p2[1]\r\n    ]);\r\n    var len_p1_origin = radius / Math.sin(theta / 2);\r\n    var x = x1 + len_p1_origin * unit_vec_p1_origin[0];\r\n    var y = y1 + len_p1_origin * unit_vec_p1_origin[1];\r\n\r\n    // Calculate start angle and end angle\r\n    // rotate 90deg clockwise (note that y axis points to its down)\r\n    var unit_vec_origin_start_tangent = [\r\n        -unit_vec_p1_p0[1],\r\n        unit_vec_p1_p0[0]\r\n    ];\r\n    // rotate 90deg counter clockwise (note that y axis points to its down)\r\n    var unit_vec_origin_end_tangent = [\r\n        unit_vec_p1_p2[1],\r\n        -unit_vec_p1_p2[0]\r\n    ];\r\n    var getAngle = function (vector) {\r\n        // get angle (clockwise) between vector and (1, 0)\r\n        var x = vector[0];\r\n        var y = vector[1];\r\n        if (y >= 0) { // note that y axis points to its down\r\n            return Math.acos(x);\r\n        } else {\r\n            return -Math.acos(x);\r\n        }\r\n    };\r\n    var startAngle = getAngle(unit_vec_origin_start_tangent);\r\n    var endAngle = getAngle(unit_vec_origin_end_tangent);\r\n\r\n    // Connect the point (x0, y0) to the start tangent point by a straight line\r\n    this.lineTo(x + unit_vec_origin_start_tangent[0] * radius,\r\n                y + unit_vec_origin_start_tangent[1] * radius);\r\n\r\n    // Connect the start tangent point to the end tangent point by arc\r\n    // and adding the end tangent point to the subpath.\r\n    this.arc(x, y, radius, startAngle, endAngle);\r\n};\r\n\r\n/**\r\n * Sets the stroke property on the current element\r\n */\r\nctx.prototype.stroke = function () {\r\n    if (this.__currentElement.nodeName === \"path\") {\r\n        this.__currentElement.setAttribute(\"paint-order\", \"fill stroke markers\");\r\n    }\r\n    this.__applyCurrentDefaultPath();\r\n    this.__applyStyleToCurrentElement(\"stroke\");\r\n};\r\n\r\n/**\r\n * Sets fill properties on the current element\r\n */\r\nctx.prototype.fill = function () {\r\n    if (this.__currentElement.nodeName === \"path\") {\r\n        this.__currentElement.setAttribute(\"paint-order\", \"stroke fill markers\");\r\n    }\r\n    this.__applyCurrentDefaultPath();\r\n    this.__applyStyleToCurrentElement(\"fill\");\r\n};\r\n\r\n/**\r\n *  Adds a rectangle to the path.\r\n */\r\nctx.prototype.rect = function (x, y, width, height) {\r\n    if (this.__currentElement.nodeName !== \"path\") {\r\n        this.beginPath();\r\n    }\r\n    this.moveTo(x, y);\r\n    this.lineTo(x+width, y);\r\n    this.lineTo(x+width, y+height);\r\n    this.lineTo(x, y+height);\r\n    this.lineTo(x, y);\r\n    this.closePath();\r\n};\r\n\r\n\r\n/**\r\n * adds a rectangle element\r\n */\r\nctx.prototype.fillRect = function (x, y, width, height) {\r\n    var rect, parent;\r\n    rect = this.__createElement(\"rect\", {\r\n        x : x,\r\n        y : y,\r\n        width : width,\r\n        height : height\r\n    }, true);\r\n    parent = this.__closestGroupOrSvg();\r\n    parent.appendChild(rect);\r\n    this.__currentElement = rect;\r\n    this.__applyStyleToCurrentElement(\"fill\");\r\n};\r\n\r\n/**\r\n * Draws a rectangle with no fill\r\n * @param x\r\n * @param y\r\n * @param width\r\n * @param height\r\n */\r\nctx.prototype.strokeRect = function (x, y, width, height) {\r\n    var rect, parent;\r\n    rect = this.__createElement(\"rect\", {\r\n        x : x,\r\n        y : y,\r\n        width : width,\r\n        height : height\r\n    }, true);\r\n    parent = this.__closestGroupOrSvg();\r\n    parent.appendChild(rect);\r\n    this.__currentElement = rect;\r\n    this.__applyStyleToCurrentElement(\"stroke\");\r\n};\r\n\r\n\r\n/**\r\n * Clear entire canvas:\r\n * 1. save current transforms\r\n * 2. remove all the childNodes of the root g element\r\n */\r\nctx.prototype.__clearCanvas = function () {\r\n    var current = this.__closestGroupOrSvg(),\r\n        transform = current.getAttribute(\"transform\");\r\n    var rootGroup = this.__root.childNodes[1];\r\n    var childNodes = rootGroup.childNodes;\r\n    for (var i = childNodes.length - 1; i >= 0; i--) {\r\n        if (childNodes[i]) {\r\n            rootGroup.removeChild(childNodes[i]);\r\n        }\r\n    }\r\n    this.__currentElement = rootGroup;\r\n    //reset __groupStack as all the child group nodes are all removed.\r\n    this.__groupStack = [];\r\n    if (transform) {\r\n        this.__addTransform(transform);\r\n    }\r\n};\r\n\r\n/**\r\n * \"Clears\" a canvas by just drawing a white rectangle in the current group.\r\n */\r\nctx.prototype.clearRect = function (x, y, width, height) {\r\n    //clear entire canvas\r\n    if (x === 0 && y === 0 && width === this.width && height === this.height) {\r\n        this.__clearCanvas();\r\n        return;\r\n    }\r\n    var rect, parent = this.__closestGroupOrSvg();\r\n    rect = this.__createElement(\"rect\", {\r\n        x : x,\r\n        y : y,\r\n        width : width,\r\n        height : height,\r\n        fill : \"#FFFFFF\"\r\n    }, true);\r\n    parent.appendChild(rect);\r\n};\r\n\r\n/**\r\n * Adds a linear gradient to a defs tag.\r\n * Returns a canvas gradient object that has a reference to it's parent def\r\n */\r\nctx.prototype.createLinearGradient = function (x1, y1, x2, y2) {\r\n    var grad = this.__createElement(\"linearGradient\", {\r\n        id : randomString(this.__ids),\r\n        x1 : x1+\"px\",\r\n        x2 : x2+\"px\",\r\n        y1 : y1+\"px\",\r\n        y2 : y2+\"px\",\r\n        \"gradientUnits\" : \"userSpaceOnUse\"\r\n    }, false);\r\n    this.__defs.appendChild(grad);\r\n    return new CanvasGradient(grad, this);\r\n};\r\n\r\n/**\r\n * Adds a radial gradient to a defs tag.\r\n * Returns a canvas gradient object that has a reference to it's parent def\r\n */\r\nctx.prototype.createRadialGradient = function (x0, y0, r0, x1, y1, r1) {\r\n    var grad = this.__createElement(\"radialGradient\", {\r\n        id : randomString(this.__ids),\r\n        cx : x1+\"px\",\r\n        cy : y1+\"px\",\r\n        r  : r1+\"px\",\r\n        fx : x0+\"px\",\r\n        fy : y0+\"px\",\r\n        \"gradientUnits\" : \"userSpaceOnUse\"\r\n    }, false);\r\n    this.__defs.appendChild(grad);\r\n    return new CanvasGradient(grad, this);\r\n\r\n};\r\n\r\n/**\r\n * Parses the font string and returns svg mapping\r\n * @private\r\n */\r\nctx.prototype.__parseFont = function () {\r\n    var regex = /^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-,\\'\\\"\\sa-z0-9]+?)\\s*$/i;\r\n    var fontPart = regex.exec( this.font );\r\n    var data = {\r\n        style : fontPart[1] || 'normal',\r\n        size : fontPart[4] || '10px',\r\n        family : fontPart[6] || 'sans-serif',\r\n        weight: fontPart[3] || 'normal',\r\n        decoration : fontPart[2] || 'normal',\r\n        href : null\r\n    };\r\n\r\n    //canvas doesn't support underline natively, but we can pass this attribute\r\n    if (this.__fontUnderline === \"underline\") {\r\n        data.decoration = \"underline\";\r\n    }\r\n\r\n    //canvas also doesn't support linking, but we can pass this as well\r\n    if (this.__fontHref) {\r\n        data.href = this.__fontHref;\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\n/**\r\n * Helper to link text fragments\r\n * @param font\r\n * @param element\r\n * @return {*}\r\n * @private\r\n */\r\nctx.prototype.__wrapTextLink = function (font, element) {\r\n    if (font.href) {\r\n        var a = this.__createElement(\"a\");\r\n        a.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", font.href);\r\n        a.appendChild(element);\r\n        return a;\r\n    }\r\n    return element;\r\n};\r\n\r\n/**\r\n * Fills or strokes text\r\n * @param text\r\n * @param x\r\n * @param y\r\n * @param action - stroke or fill\r\n * @private\r\n */\r\nctx.prototype.__applyText = function (text, x, y, action) {\r\n    var font = this.__parseFont(),\r\n        parent = this.__closestGroupOrSvg(),\r\n        textElement = this.__createElement(\"text\", {\r\n            \"font-family\" : font.family,\r\n            \"font-size\" : font.size,\r\n            \"font-style\" : font.style,\r\n            \"font-weight\" : font.weight,\r\n            \"text-decoration\" : font.decoration,\r\n            \"x\" : x,\r\n            \"y\" : y,\r\n            \"text-anchor\": getTextAnchor(this.textAlign),\r\n            \"dominant-baseline\": getDominantBaseline(this.textBaseline)\r\n        }, true);\r\n\r\n    textElement.appendChild(this.__document.createTextNode(text));\r\n    this.__currentElement = textElement;\r\n    this.__applyStyleToCurrentElement(action);\r\n    parent.appendChild(this.__wrapTextLink(font,textElement));\r\n};\r\n\r\n/**\r\n * Creates a text element\r\n * @param text\r\n * @param x\r\n * @param y\r\n */\r\nctx.prototype.fillText = function (text, x, y) {\r\n    this.__applyText(text, x, y, \"fill\");\r\n};\r\n\r\n/**\r\n * Strokes text\r\n * @param text\r\n * @param x\r\n * @param y\r\n */\r\nctx.prototype.strokeText = function (text, x, y) {\r\n    this.__applyText(text, x, y, \"stroke\");\r\n};\r\n\r\n/**\r\n * No need to implement this for svg.\r\n * @param text\r\n * @return {TextMetrics}\r\n */\r\nctx.prototype.measureText = function (text) {\r\n    this.__ctx.font = this.font;\r\n    return this.__ctx.measureText(text);\r\n};\r\n\r\n/**\r\n *  Arc command!\r\n */\r\nctx.prototype.arc = function (x, y, radius, startAngle, endAngle, counterClockwise) {\r\n    // in canvas no circle is drawn if no angle is provided.\r\n    if (startAngle === endAngle) {\r\n        return;\r\n    }\r\n    startAngle = startAngle % (2*Math.PI);\r\n    endAngle = endAngle % (2*Math.PI);\r\n    if (startAngle === endAngle) {\r\n        //circle time! subtract some of the angle so svg is happy (svg elliptical arc can't draw a full circle)\r\n        endAngle = ((endAngle + (2*Math.PI)) - 0.001 * (counterClockwise ? -1 : 1)) % (2*Math.PI);\r\n    }\r\n    var endX = x+radius*Math.cos(endAngle),\r\n        endY = y+radius*Math.sin(endAngle),\r\n        startX = x+radius*Math.cos(startAngle),\r\n        startY = y+radius*Math.sin(startAngle),\r\n        sweepFlag = counterClockwise ? 0 : 1,\r\n        largeArcFlag = 0,\r\n        diff = endAngle - startAngle;\r\n\r\n    // https://github.com/gliffy/canvas2svg/issues/4\r\n    if (diff < 0) {\r\n        diff += 2*Math.PI;\r\n    }\r\n\r\n    if (counterClockwise) {\r\n        largeArcFlag = diff > Math.PI ? 0 : 1;\r\n    } else {\r\n        largeArcFlag = diff > Math.PI ? 1 : 0;\r\n    }\r\n\r\n    this.lineTo(startX, startY);\r\n    this.__addPathCommand(format(\"A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}\",\r\n        {rx:radius, ry:radius, xAxisRotation:0, largeArcFlag:largeArcFlag, sweepFlag:sweepFlag, endX:endX, endY:endY}));\r\n\r\n    this.__currentPosition = {x: endX, y: endY};\r\n};\r\n\r\n/**\r\n * Generates a ClipPath from the clip command.\r\n */\r\nctx.prototype.clip = function () {\r\n    var group = this.__closestGroupOrSvg(),\r\n        clipPath = this.__createElement(\"clipPath\"),\r\n        id =  randomString(this.__ids),\r\n        newGroup = this.__createElement(\"g\");\r\n\r\n    this.__applyCurrentDefaultPath();\r\n    group.removeChild(this.__currentElement);\r\n    clipPath.setAttribute(\"id\", id);\r\n    clipPath.appendChild(this.__currentElement);\r\n\r\n    this.__defs.appendChild(clipPath);\r\n\r\n    //set the clip path to this group\r\n    group.setAttribute(\"clip-path\", format(\"url(#{id})\", {id:id}));\r\n\r\n    //clip paths can be scaled and transformed, we need to add another wrapper group to avoid later transformations\r\n    // to this path\r\n    group.appendChild(newGroup);\r\n\r\n    this.__currentElement = newGroup;\r\n\r\n};\r\n\r\n/**\r\n * Draws a canvas, image or mock context to this canvas.\r\n * Note that all svg dom manipulation uses node.childNodes rather than node.children for IE support.\r\n * http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-drawimage\r\n */\r\nctx.prototype.drawImage = function () {\r\n    //convert arguments to a real array\r\n    var args = Array.prototype.slice.call(arguments),\r\n        image=args[0],\r\n        dx, dy, dw, dh, sx=0, sy=0, sw, sh, parent, svg, defs, group,\r\n        currentElement, svgImage, canvas, context, id;\r\n\r\n    if (args.length === 3) {\r\n        dx = args[1];\r\n        dy = args[2];\r\n        sw = image.width;\r\n        sh = image.height;\r\n        dw = sw;\r\n        dh = sh;\r\n    } else if (args.length === 5) {\r\n        dx = args[1];\r\n        dy = args[2];\r\n        dw = args[3];\r\n        dh = args[4];\r\n        sw = image.width;\r\n        sh = image.height;\r\n    } else if (args.length === 9) {\r\n        sx = args[1];\r\n        sy = args[2];\r\n        sw = args[3];\r\n        sh = args[4];\r\n        dx = args[5];\r\n        dy = args[6];\r\n        dw = args[7];\r\n        dh = args[8];\r\n    } else {\r\n        throw new Error(\"Invalid number of arguments passed to drawImage: \" + arguments.length);\r\n    }\r\n\r\n    parent = this.__closestGroupOrSvg();\r\n    currentElement = this.__currentElement;\r\n    var translateDirective = \"translate(\" + dx + \", \" + dy + \")\";\r\n    if (image instanceof ctx) {\r\n        //canvas2svg mock canvas context. In the future we may want to clone nodes instead.\r\n        //also I'm currently ignoring dw, dh, sw, sh, sx, sy for a mock context.\r\n        svg = image.getSvg().cloneNode(true);\r\n        if (svg.childNodes && svg.childNodes.length > 1) {\r\n            defs = svg.childNodes[0];\r\n            while(defs.childNodes.length) {\r\n                id = defs.childNodes[0].getAttribute(\"id\");\r\n                this.__ids[id] = id;\r\n                this.__defs.appendChild(defs.childNodes[0]);\r\n            }\r\n            group = svg.childNodes[1];\r\n            if (group) {\r\n                //save original transform\r\n                var originTransform = group.getAttribute(\"transform\");\r\n                var transformDirective;\r\n                if (originTransform) {\r\n                    transformDirective = originTransform+\" \"+translateDirective;\r\n                } else {\r\n                    transformDirective = translateDirective;\r\n                }\r\n                group.setAttribute(\"transform\", transformDirective);\r\n                parent.appendChild(group);\r\n            }\r\n        }\r\n    } else if (image.nodeName === \"CANVAS\" || image.nodeName === \"IMG\") {\r\n        //canvas or image\r\n        svgImage = this.__createElement(\"image\");\r\n        svgImage.setAttribute(\"width\", dw);\r\n        svgImage.setAttribute(\"height\", dh);\r\n        svgImage.setAttribute(\"preserveAspectRatio\", \"none\");\r\n\r\n        if (sx || sy || sw !== image.width || sh !== image.height) {\r\n            //crop the image using a temporary canvas\r\n            canvas = this.__document.createElement(\"canvas\");\r\n            canvas.width = dw;\r\n            canvas.height = dh;\r\n            context = canvas.getContext(\"2d\");\r\n            context.drawImage(image, sx, sy, sw, sh, 0, 0, dw, dh);\r\n            image = canvas;\r\n        }\r\n        svgImage.setAttribute(\"transform\", translateDirective);\r\n        svgImage.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\",\r\n            image.nodeName === \"CANVAS\" ? image.toDataURL() : image.getAttribute(\"src\"));\r\n        parent.appendChild(svgImage);\r\n    }\r\n};\r\n\r\n/**\r\n * Generates a pattern tag\r\n */\r\nctx.prototype.createPattern = function (image, repetition) {\r\n    var pattern = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", \"pattern\"), id = randomString(this.__ids),\r\n        img;\r\n    pattern.setAttribute(\"id\", id);\r\n    pattern.setAttribute(\"width\", image.width);\r\n    pattern.setAttribute(\"height\", image.height);\r\n    if (image.nodeName === \"CANVAS\" || image.nodeName === \"IMG\") {\r\n        img = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\r\n        img.setAttribute(\"width\", image.width);\r\n        img.setAttribute(\"height\", image.height);\r\n        img.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\",\r\n            image.nodeName === \"CANVAS\" ? image.toDataURL() : image.getAttribute(\"src\"));\r\n        pattern.appendChild(img);\r\n        this.__defs.appendChild(pattern);\r\n    } else if (image instanceof ctx) {\r\n        pattern.appendChild(image.__root.childNodes[1]);\r\n        this.__defs.appendChild(pattern);\r\n    }\r\n    return new CanvasPattern(pattern, this);\r\n};\r\n\r\nctx.prototype.setLineDash = function (dashArray) {\r\n    if (dashArray && dashArray.length > 0) {\r\n        this.lineDash = dashArray.join(\",\");\r\n    } else {\r\n        this.lineDash = null;\r\n    }\r\n};\r\n\r\n/**\r\n * Not yet implemented\r\n */\r\nctx.prototype.drawFocusRing = function () {};\r\nctx.prototype.createImageData = function () {};\r\nctx.prototype.getImageData = function () {};\r\nctx.prototype.putImageData = function () {};\r\nctx.prototype.globalCompositeOperation = function () {};\r\nctx.prototype.setTransform = function () {};\r\n\r\nexport {ctx as C2S}","/** @module */\r\n\r\nimport { C2S } from '../../lib/canvas2svg.esm.js'\r\n/**\r\n * add a button so that we can generate an SVG of what is being rendered\r\n * @param {Object} screen the screen where the drawing context is.\r\n * We will temporarily change the drawing context.\r\n * @param {Object} draw the drawing function that renders drawings to the context.\r\n * @param {Layout} layout\r\n */\r\nexport default function addSVGOutput(screen, draw, layout) {\r\n    const w = screen.width\r\n    const h = screen.height\r\n\r\n    const svgUIDiv = document.createElement('div')\r\n    layout.newElement('svgUIDiv', svgUIDiv)\r\n\r\n    // svg output button\r\n    const button = document.createElement('button')\r\n    button.className = 'button2'\r\n    button.innerText = 'Make SVG'\r\n    button.onclick = makeSVG\r\n    svgUIDiv.appendChild(button)\r\n\r\n    // svg download link\r\n    const downloadLink = document.createElement('a')\r\n    downloadLink.innerText = 'Download SVG'\r\n    downloadLink.download = 'vote.svg'\r\n    downloadLink.hidden = true\r\n    downloadLink.style.margin = '4px'\r\n    svgUIDiv.appendChild(downloadLink)\r\n\r\n    // svg download link for geoMaps\r\n    const gDownloadLink = document.createElement('a')\r\n    gDownloadLink.innerText = 'Download geoMap SVG'\r\n    gDownloadLink.download = 'vote_geoMap.svg'\r\n    gDownloadLink.hidden = true\r\n    gDownloadLink.style.margin = '4px'\r\n    svgUIDiv.appendChild(gDownloadLink)\r\n\r\n    // svg hide button\r\n    const svgHideButton = document.createElement('button')\r\n    svgHideButton.className = 'button2'\r\n    svgHideButton.innerText = 'Hide SVG'\r\n    svgHideButton.hidden = true\r\n    svgHideButton.onclick = hideSVG\r\n    svgUIDiv.appendChild(svgHideButton)\r\n\r\n    // hidden svg output div\r\n    const svgDiv = document.createElement('div')\r\n    svgDiv.setAttribute('class', 'svgDiv')\r\n    svgDiv.style.width = `${w}px`\r\n    svgDiv.style.height = `${h}px`\r\n    svgDiv.hidden = true\r\n    svgUIDiv.appendChild(svgDiv)\r\n\r\n    // hidden svg output div for geoMaps\r\n    const gSvgDiv = document.createElement('div')\r\n    gSvgDiv.setAttribute('class', 'gSvgDiv')\r\n    gSvgDiv.style.width = `${w}px`\r\n    gSvgDiv.style.height = `${Math.round(h / 3)}px`\r\n    gSvgDiv.hidden = true\r\n    svgUIDiv.appendChild(gSvgDiv)\r\n\r\n    const svgCtx = new C2S(w, h)\r\n    const svgGCtx = new C2S(w, Math.round(h / 3))\r\n\r\n    function makeSVG() {\r\n        // temporarily swap drawing context, render SVG,\r\n        // then output SVG to div and to a download link\r\n        const old = screen.ctx\r\n        const oldF = screen.fctx\r\n        screen.setCtx(svgCtx)\r\n        screen.setFCtx(svgCtx)\r\n        screen.setNoBuffers(true)\r\n        draw()\r\n        outputSVG()\r\n        screen.setCtx(old)\r\n        screen.setFCtx(oldF)\r\n        screen.setNoBuffers(false)\r\n\r\n        const oldG = screen.gctx\r\n        screen.setGCtx(svgGCtx)\r\n        draw()\r\n        outputGSVG()\r\n        screen.setGCtx(oldG)\r\n    }\r\n\r\n    function outputSVG() {\r\n        svgHideButton.hidden = false\r\n\r\n        const svg = svgCtx.getSerializedSvg(true)\r\n        svgDiv.innerHTML = svg\r\n        svgDiv.hidden = false\r\n        downloadLink.hidden = false\r\n        const url = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svg)}`\r\n        downloadLink.href = url\r\n    }\r\n    function outputGSVG() {\r\n        const gSvg = svgGCtx.getSerializedSvg(true)\r\n        gSvgDiv.innerHTML = gSvg\r\n        gSvgDiv.hidden = false\r\n        gDownloadLink.hidden = false\r\n        const gUrl = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(gSvg)}`\r\n        gDownloadLink.href = gUrl\r\n    }\r\n\r\n    function hideSVG() {\r\n        svgHideButton.hidden = true\r\n\r\n        svgDiv.hidden = true\r\n        downloadLink.hidden = true\r\n\r\n        gSvgDiv.hidden = true\r\n        gDownloadLink.hidden = true\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Class for a single button.\r\n * @param {*} buttonConfig\r\n * @param {*} onChoose\r\n * @constructor\r\n */\r\nexport default function Button(buttonConfig, onChoose) {\r\n    const self = this\r\n\r\n    self.config = buttonConfig\r\n    self.name = buttonConfig.name\r\n    self.nameIsHTML = buttonConfig.nameIsHTML || false\r\n    self.dom = document.createElement('div')\r\n    self.dom.setAttribute('class', 'button button2')\r\n\r\n    // overwrite margins.  The old way was not working.\r\n    let fixMargin = buttonConfig.margin\r\n    fixMargin = fixMargin || 0\r\n    fixMargin = Math.max(fixMargin, 4)\r\n    self.dom.style.marginRight = `${fixMargin}px`\r\n\r\n    // Click!\r\n    self.draw = function () {\r\n        if (self.nameIsHTML) {\r\n            self.dom.innerHTML = self.name\r\n        } else {\r\n            self.dom.innerText = self.name\r\n        }\r\n    }\r\n    self.draw()\r\n    self.dom.setAttribute('title', buttonConfig.realname || '')\r\n    self.onClick = function () {\r\n        onChoose(self, buttonConfig)\r\n    }\r\n    self.dom.onclick = self.onClick\r\n    // Turn on or off!\r\n    self.turnOff = function () {\r\n        self.isOn = false\r\n        self.config.isOn = false\r\n        self.dom.setAttribute('on', 'no')\r\n    }\r\n    self.turnOn = function () {\r\n        self.isOn = true\r\n        self.config.isOn = true\r\n        self.dom.setAttribute('on', 'yes')\r\n    }\r\n    self.turnOff()\r\n}\r\n","/** @module */\r\n\r\nimport Button from './Button.js'\r\n\r\n/**\r\n * Create a group of buttons.\r\n * @param {*} config\r\n * @constructor\r\n */\r\nexport default function ButtonGroup(config) {\r\n    const self = this\r\n    self.config = config\r\n\r\n    // check if there is a function to make the data\r\n    // this function can be used later to update the buttons\r\n    if (config.data === undefined) {\r\n        config.data = []\r\n        if (config.makeData === undefined) {\r\n            config.makeData = () => []\r\n        }\r\n        self.makeData = config.makeData\r\n        self.buttonConfigs = self.makeData()\r\n        self.doMakeData = true\r\n    }\r\n    self.buttonConfigs = config.data\r\n\r\n    self.labelName = config.label\r\n    self.labelIsHTML = config.labelIsHTML || false\r\n\r\n    self.onChoose = config.onChoose\r\n    self.isCheckbox = config.isCheckbox || false\r\n    self.isCheckboxBool = config.isCheckboxBool || false\r\n    self.justButton = config.justButton || false\r\n    self.buttonHidden = config.buttonHidden || {}\r\n\r\n    // DOM!\r\n    self.dom = document.createElement('div')\r\n    self.dom.setAttribute('class', 'button-group')\r\n\r\n    self.buttonDOMByValue = []\r\n\r\n    self.init = function () {\r\n        if (self.doMakeData) self.buttonConfigs = self.makeData()\r\n\r\n        // clear\r\n        self.dom.innerHTML = ''\r\n        self.buttons = []\r\n        self.buttonsByName = {}\r\n\r\n        // Label!\r\n        self.labelDOM = document.createElement('div')\r\n        self.labelDOM.setAttribute('class', 'button-group-label')\r\n        self.draw()\r\n        self.dom.appendChild(self.labelDOM)\r\n\r\n        // Create & place buttons!\r\n        for (let i = 0; i < self.buttonConfigs.length; i++) {\r\n            const conf = self.buttonConfigs[i]\r\n            const button = new Button(conf, self.onToggle)\r\n            self.buttonsByName[conf.name] = button\r\n            button.dom.style.width = `${config.width}px` // whatever\r\n            if (conf.width) button.dom.style.width = `${conf.width}px` // whatever\r\n            self.buttons.push(button)\r\n            self.dom.appendChild(button.dom)\r\n            self.buttonDOMByValue[conf.value] = button.dom\r\n        }\r\n\r\n        // And then select the one that says \"selected\"! Fake a click.\r\n        for (let i = 0; i < self.buttons.length; i++) {\r\n            const button = self.buttons[i]\r\n            if (button.config.selected) {\r\n                button.turnOn()\r\n                break\r\n            }\r\n        }\r\n        self.draw()\r\n    }\r\n    self.updateNames = function () {\r\n        const data2 = self.makeData()\r\n        for (let i = 0; i < self.buttonConfigs.length; i++) {\r\n            self.buttonConfigs[i].name = data2[i].name\r\n            self.buttons[i].name = self.buttonConfigs[i].name\r\n        }\r\n    }\r\n    self.redraw = function () {\r\n        self.updateNames()\r\n        self.draw()\r\n    }\r\n    self.draw = function () {\r\n        if (self.labelIsHTML) {\r\n            self.labelDOM.innerHTML = self.labelName\r\n        } else {\r\n            self.labelDOM.innerText = self.labelName\r\n        }\r\n        for (const button of self.buttons) {\r\n            button.draw()\r\n        }\r\n    }\r\n\r\n    self.configureHidden = function () {\r\n        for (const [buttonName, hidden] of Object.entries(self.buttonHidden)) {\r\n            self.buttonsByName[buttonName].dom.hidden = hidden\r\n        }\r\n    }\r\n\r\n    // Toggle buttons\r\n    self.onToggle = function (button, buttonData) {\r\n        if (self.isCheckbox || self.isCheckboxBool) {\r\n            if (button.isOn) {\r\n                button.turnOff()\r\n            } else {\r\n                button.turnOn()\r\n            }\r\n        } else { // justButton means it doesn't get selected\r\n            // Turn all off\r\n            for (let i = 0; i < self.buttons.length; i++) self.buttons[i].turnOff()\r\n            button.turnOn() // except one\r\n            if (self.justButton) {\r\n                // turn on for a little while, then off\r\n                setTimeout(() => button.turnOff(), 800)\r\n            }\r\n        }\r\n        // And send the data up\r\n        self.onChoose(buttonData)\r\n    }\r\n\r\n    // Highlight based on data...\r\n    self.highlight = function (propName, propValue) {\r\n        // if we haven't set up the buttons yet, then don't do anything yet\r\n        if (self.buttons.length === 0) return\r\n\r\n        // Turn all off\r\n        for (let i = 0; i < self.buttons.length; i++) self.buttons[i].turnOff()\r\n\r\n        if (self.isCheckbox) {\r\n            for (const ibu in self.buttons) {\r\n                const bu = self.buttons[ibu]\r\n                if (propValue.includes(bu.config[propName])) { // the propValue is an array of values\r\n                    bu.turnOn()\r\n                }\r\n            }\r\n        } else if (self.isCheckboxBool) {\r\n            for (const ibu in self.buttons) {\r\n                const bu = self.buttons[ibu]\r\n                const buttonName = bu.config[propName]\r\n                // if (Object.keys(propValue).includes(buttonName)) { // the propValue is an array of values\r\n                if (buttonName in propValue) {\r\n                    if (propValue[buttonName]) {\r\n                        bu.turnOn()\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // Find the one...\r\n            const theButton = self.buttons.filter((button) => {\r\n                const { config } = button\r\n                return (config[propName] === propValue)\r\n            })[0]\r\n            if (theButton !== undefined) {\r\n                theButton.turnOn()\r\n            }\r\n        }\r\n    }\r\n\r\n    self.init()\r\n}\r\n","/** @module */\r\n\r\nimport ButtonGroup from './ButtonGroup.js'\r\n\r\n/**\r\n * Make a selection that determines a single property's value.\r\n * Defer handling dependent calculations to the next update step,\r\n * where we will look at a dependency tree to determine what else needs updating.\r\n * Functionality here is called from button presses.\r\n * Functionality here is also called from a command pattern (commander).\r\n * @param {Object.<string>} object\r\n * @param {(String|Number|Boolean)} object.prop - The property being selected in the menu.\r\n * @param {String} prop - Name of prop\r\n * @param {MenuItem~setProp} setProp - The action that is performed as part of onclick.\r\n * @param {String} label - The prompt presented to the user.\r\n * @param {Object[]} options - the list of options that the UI presents to the user.\r\n * @param {(String|Number|Boolean)} options[].value - Value to pass to setProp\r\n * @param {String[]} change - list of changes made when pressing a button.\r\n * @param {Changes} changes\r\n * @param {Commander} commander - Follows command pattern.\r\n * @constructor\r\n */\r\n// eslint-disable-next-line max-len\r\nexport default function MenuItem(object, prop, setProp, label, options, change, changes, commander) {\r\n    const self = this\r\n    self.list = options\r\n    self.onChoose = function (data) {\r\n        self.sender.go(data.value)\r\n    }\r\n    self.action = (value) => {\r\n        self.set(value)\r\n        self.select()\r\n    }\r\n    self.sender = commander.addSender({\r\n        name: prop,\r\n        action: self.action,\r\n        currentValue: object[prop],\r\n    })\r\n    self.set = function (value) {\r\n        // LOAD INPUT\r\n\r\n        setProp(value)\r\n        // CONFIGURE\r\n        self.configure()\r\n        // UPDATE\r\n        changes.add(change)\r\n    }\r\n    self.choose = new ButtonGroup({\r\n        label,\r\n        width: buttonWidth(3),\r\n        data: self.list,\r\n        onChoose: self.onChoose,\r\n    })\r\n    self.configure = function () {\r\n    }\r\n    self.select = function () {\r\n        self.choose.highlight('value', object[prop])\r\n    }\r\n}\r\n\r\nfunction buttonWidth(numButtons) {\r\n    const padding = 4\r\n    const border = 1\r\n    const margin = 4\r\n    const between = (padding + border + margin) * 2\r\n    const end = padding + border\r\n    const width = 302\r\n    const usableSpace = width - between * (numButtons - 1) - 2 * end\r\n    const buttonWidth1 = usableSpace / numButtons\r\n    return buttonWidth1\r\n}\r\n","/** @module */\r\n\r\nimport MenuItem from './MenuItem.js'\r\n\r\n/**\r\n * Make a menu.\r\n * @param {Changes} changes\r\n * @param {Layout} layout\r\n * @param {Commander} commander - Follows command pattern.\r\n * @constructor\r\n */\r\nexport default function Menu(changes, layout, commander) {\r\n    const self = this\r\n    self.divMenu = document.createElement('div')\r\n    layout.newElement('menu', self.divMenu)\r\n    self.addMenuItem = function (object, choice) {\r\n        const {\r\n            prop, setProp, label, options, change,\r\n        } = choice\r\n\r\n        // eslint-disable-next-line max-len\r\n        const menuItem = new MenuItem(object, prop, setProp, label, options, change, changes, commander)\r\n        menuItem.select()\r\n\r\n        self.divMenu.appendChild(menuItem.choose.dom)\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Sum area of voter distributions to tally the votes.\r\n * @param {Candidate[]} cans\r\n * @constructor\r\n */\r\nexport default function AreaSummer(cans) {\r\n    const self = this\r\n\r\n    const lines = findLines(cans)\r\n\r\n    // todo: figure out if this is really just a function rather than a class.\r\n\r\n    self.sumArea = function sumArea(voterGroup) {\r\n        // draw lines across shape of voterGroup\r\n\r\n        const n = lines.length\r\n        const area = Array(n)\r\n        for (let i = 0; i < n; i++) {\r\n            const lineSet = lines[i]\r\n            // return area for each candidate\r\n            area[i] = sumCircle(voterGroup, lineSet)\r\n        }\r\n        return area\r\n    }\r\n}\r\n\r\nfunction findLines(cans) {\r\n    // find all lines\r\n    const n = cans.length\r\n    const lines = new Array(n) // each candidate has a set of lines for themselves\r\n    for (let i = 0; i < n; i++) {\r\n        lines[i] = []\r\n        for (let k = 0; k < n; k++) {\r\n            // skip sames\r\n            if (i === k) continue\r\n            // find equation for a line\r\n            const c1 = cans[i]\r\n            const c2 = cans[k]\r\n            // lines[i][k] = equidistantLine(c1,c2) // problem when i === k\r\n            lines[i].push(equidistantLine(c1, c2))\r\n        }\r\n    }\r\n\r\n    return lines\r\n}\r\n\r\n/**\r\n * Test for the function equidistantLine, which finds a line equidistant from two points.\r\n * @param {Function} eq - assertion function for equality\r\n * @param {Function} assert - assertion function for true\r\n * @returns {Object[]} an array of test objects, each with a label and a test function.\r\n */\r\nexport function testEquidistantLine(eq, assert) {\r\n    // Takes an assertion function.\r\n    // Returns a test function.\r\n\r\n    return [{\r\n        label: 'Finds line equation equidistant from two points.',\r\n        test: () => {\r\n            const m = equidistantLine({ x: 0, y: 0 }, { x: 1, y: 1 })\r\n            const e = { A: { x: 1, y: 1 }, b: 1 }\r\n            eq(e.A.x / e.b, m.A.x / m.b)\r\n            eq(e.A.y / e.b, m.A.y / m.b)\r\n        },\r\n    }, {\r\n        label: 'The first point satisfies Ac < b. A[0,0] < b. ',\r\n        test: () => {\r\n            const m = equidistantLine({ x: 0, y: 0 }, { x: 1, y: 1 })\r\n            assert(m.b > 0)\r\n        },\r\n    },\r\n    ]\r\n}\r\n\r\nfunction equidistantLine(c1, c2) {\r\n    // Ac < b\r\n    // this is the condition that x counts for a candidate.\r\n\r\n    // line equidistant from two points\r\n    // https://math.stackexchange.com/a/771773\r\n\r\n    // difference between points\r\n    const dx = c2.x - c1.x\r\n    const dy = c2.y - c1.y\r\n\r\n    // midpoint between points\r\n    const mx = (c1.x + c2.x) * 0.5\r\n    const my = (c1.y + c2.y) * 0.5\r\n\r\n    // equation for line\r\n    // (y-my) / (x-mx) = - dx / dy\r\n    // implies y * dy - my * dy = - x * dx + mx * dx\r\n    // implies dx * x + dy * y = mx * dx + my * dy\r\n    // rename to A = [dx;dy]\r\n    //           b = mx * dx + my * dy\r\n    const A = { x: dx, y: dy }\r\n    const b = mx * dx + my * dy\r\n\r\n    // is c1 or c2 closer?\r\n    // c1 is closer is equivalent to Ac < b\r\n\r\n    return { A, b }\r\n}\r\n\r\nfunction sumCircle(circle, lineSet) {\r\n    // integrate inside\r\n    //   Need a direction for \"inside\" for each line.\r\n    //   Then do a 1D consideration of what is inside.\r\n\r\n    // for each x coordinate,\r\n    const dx = 2\r\n    let sum = 0\r\n    const x1 = circle.x\r\n    const y1 = circle.y\r\n    const { w } = circle\r\n    const r = 0.5 * w\r\n    // x only goes from x1-r to x1+r\r\n    for (let x = x1 - r; x < x1 + r; x += dx) {\r\n        // find bounds\r\n\r\n        // find equation for circle\r\n\r\n        // (y - y1)**2 + (x-x1)**2 < r**2\r\n        const diff2 = r ** 2 - (x - x1) ** 2\r\n        let half\r\n        if (diff2 > 0) {\r\n            half = Math.sqrt(diff2)\r\n        } else {\r\n            half = 0\r\n        }\r\n        let high = y1 + half\r\n        let low = y1 - half\r\n\r\n        // for each of the constraints, figure out if it is an upper or lower bound,\r\n        // then adjust the bound.\r\n        // The y coefficient tells us whether this is an upper or lower bound.\r\n        // Imagine infinite +y.\r\n        // If the y coefficient is negative, then Ac < b, and Ac = b is a lower bound.\r\n        // A.x * x + A.y * y = b\r\n        // y = (b - A.x * x) / A.y\r\n        lineSet.forEach((line) => {\r\n            const ay = line.A.y\r\n            const ax = line.A.x\r\n            const { b } = line\r\n            if (ay === 0) {\r\n                if (ax * x < b) {\r\n                    // no bounds\r\n                } else {\r\n                    low = Infinity // bounded by x\r\n                }\r\n                // not handling 0,0 case\r\n            } else {\r\n                const y2 = (b - ax * x) / ay\r\n                if (ay < 0) {\r\n                    low = Math.max(low, y2)\r\n                } else {\r\n                    high = Math.min(high, y2)\r\n                }\r\n            }\r\n        })\r\n\r\n        // count area inside lines\r\n        const dy = high - low\r\n        if (dy > 0) {\r\n            const area = dy * dx\r\n            sum += area\r\n        }\r\n    }\r\n    return sum\r\n}\r\n","/**\r\n * Javascript Utilities\r\n * Just a few helpful functions that are self-contained and don't need much context.\r\n * @module */\r\n\r\n/**\r\n * List the indices of an array of length n.\r\n * @param {Number} n - length of array\r\n * @returns {Number[]} - A number array from 0 to n-1.\r\n */\r\nexport function range(n) {\r\n    return [...Array(n).keys()]\r\n}\r\n\r\n/**\r\n * Try to deepcopy an object.\r\n * @param {Object} a - an object to copy.\r\n * @returns {Object} A copy of a.\r\n */\r\nexport function jcopy(a) {\r\n    return JSON.parse(JSON.stringify(a))\r\n}\r\n\r\n/** https://stackoverflow.com/a/35810961 */\r\nfunction sortObjByKey(value) {\r\n    // eslint-disable-next-line no-nested-ternary\r\n    return (typeof value === 'object')\r\n        ? (Array.isArray(value)\r\n            ? value.map(sortObjByKey)\r\n            : Object.keys(value).sort().reduce((o, key) => {\r\n                const v = value[key]\r\n                // eslint-disable-next-line no-param-reassign\r\n                o[key] = sortObjByKey(v)\r\n                return o\r\n            }, {})\r\n        )\r\n        : value\r\n}\r\n\r\nexport function orderedJsonStringify(obj) {\r\n    return JSON.stringify(sortObjByKey(obj), null, '\\t')\r\n}\r\n\r\nexport function normCDF(x, mean, sd) {\r\n    if (x === Infinity) {\r\n        return 1\r\n    } if (x === -Infinity) {\r\n        return 0\r\n    }\r\n    return 0.5 * erf((x - mean) / (sd * Math.sqrt(2))) + 0.5\r\n}\r\n\r\nfunction erf(x) {\r\n    const ERF_A = 0.147\r\n    const x2 = x ** 2\r\n    const down = 1 + ERF_A * x2\r\n    const up = 4 / Math.PI + ERF_A * x2\r\n    const ratio = -(up / down) * x2\r\n    const expofun = Math.exp(ratio)\r\n    const radical = Math.sqrt(1 - expofun)\r\n    const z = radical * Math.sign(x)\r\n    return z\r\n}\r\n\r\n/** https://stackoverflow.com/a/47355187 */\r\nexport function standardizeColor(str) {\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')\r\n    ctx.fillStyle = str\r\n    const sColor = ctx.fillStyle\r\n    canvas.remove()\r\n    return sColor\r\n}\r\n","/** @module */\r\n\r\nimport { range, normCDF } from '../utilities/jsHelpers.js'\r\n\r\n/**\r\n * Sum area of voter distributions to tally the votes.\r\n * @param {Number[]} cans - position of each candidate\r\n * @constructor\r\n */\r\nexport default function LineSummer(cans) {\r\n    const self = this\r\n\r\n    const intervals = findIntervals(cans)\r\n\r\n    self.sumArea = function sumArea(voterGroup) {\r\n        const n = cans.length\r\n        const area = Array(n)\r\n        // return sum for each candidate\r\n        if (voterGroup.densityProfile1 === 'gaussian') {\r\n            for (let i = 0; i < n; i++) {\r\n                area[i] = sumGaussian(voterGroup, intervals[i])\r\n            }\r\n        } else {\r\n            for (let i = 0; i < n; i++) {\r\n                area[i] = sumBlock(voterGroup, intervals[i])\r\n            }\r\n        }\r\n        return area\r\n    }\r\n}\r\n\r\n/** Find boundary between candidates */\r\nfunction findIntervals(cans) {\r\n    const n = cans.length\r\n    const iSorted = range(n).sort((a, b) => cans[a] - cans[b])\r\n    const midpoints = new Array(n - 1)\r\n    for (let i = 0; i < n - 1; i++) {\r\n        midpoints[i] = (cans[iSorted[i]] + cans[iSorted[i + 1]]) * 0.5\r\n    }\r\n    const intervals = new Array(n)\r\n    for (let i = 0; i < n; i++) {\r\n        const lower = (i === 0) ? -Infinity : midpoints[i - 1]\r\n        const upper = (i === n - 1) ? Infinity : midpoints[i]\r\n        intervals[iSorted[i]] = { lower, upper }\r\n    }\r\n\r\n    return intervals\r\n}\r\n\r\nfunction sumBlock(block, interval) {\r\n    const { lower, upper } = interval\r\n    const { x, w } = block\r\n    const r = 0.5 * w\r\n    const lower2 = x - r\r\n    const upper2 = x + r\r\n    const lower3 = Math.max(lower, lower2)\r\n    const upper3 = Math.min(upper, upper2)\r\n    const sum = Math.max(0, upper3 - lower3)\r\n    return sum\r\n}\r\n\r\nfunction sumGaussian(block, interval) {\r\n    const { lower, upper } = interval\r\n    const { x, w } = block\r\n    const center = x\r\n    const sigma = w / Math.sqrt(2 * Math.PI) // w = sigma * sqrt(2*pi)\r\n    // evaluate integral of gaussian on interval\r\n    const sum = w * normCDF(upper, center, sigma) - w * normCDF(lower, center, sigma)\r\n\r\n    return sum\r\n}\r\n","/** @module */\r\n\r\nimport pluralityBallot from './pluralityBallot.js'\r\n\r\n/**\r\n * a collection of ways to cast votes\r\n */\r\n\r\nconst castVotes = { pluralityBallot }\r\n\r\nexport default castVotes\r\n","/** @module */\r\n\r\nimport AreaSummer from './AreaSummer.js'\r\nimport LineSummer from './LineSummer.js'\r\n\r\n/**\r\n * Vote for one.\r\n * Voters cast votes for candidates.\r\n * There is also a separate graphical representation in VoronoiGroup.js.\r\n * @param {*} candidates - an array of objects each with a p2 or p1 property.\r\n * Or a list of positions for the 1D case.\r\n * @param {*} voterGroups - an array of objects with {x,w} or {x,y,w} attributes.\r\n * @returns votes, an object\r\n */\r\nexport default function pluralityBallot(candidates, voterGroups, dimensions) {\r\n    const summer = (dimensions === 1) ? new LineSummer(candidates) : new AreaSummer(candidates)\r\n\r\n    // get fraction of votes for each candidate so we can summarize results\r\n    const n = candidates.length\r\n    let tally = (new Array(n)).fill(0)\r\n    voterGroups.forEach((voterGroup) => {\r\n        const area = summer.sumArea(voterGroup)\r\n        const weight = ((voterGroup.weight === undefined) ? 1 : voterGroup.weight)\r\n        tally = tally.map((value, index) => value + area[index] * weight)\r\n    })\r\n    const total = tally.reduce((p, c) => p + c)\r\n    const tallyFractions = tally.map((x) => x / total)\r\n    const votes = { tallyFractions }\r\n    return votes\r\n}\r\n","/** @module */\r\n\r\nimport plurality from './plurality.js'\r\nimport randomWinner from './randomWinner.js'\r\nimport huntingtonHill from './huntingtonHill.js'\r\n\r\n/** a collection of election methods\r\n *  */\r\nconst electionMethods = { plurality, randomWinner, huntingtonHill }\r\n\r\nexport default electionMethods\r\n","/** @module */\r\n\r\n/**\r\n * the candidate with the highest tally wins\r\n * @param {Object} votes\r\n * @param {Number[]} votes.tallyFractions\r\n * @returns {results}\r\n */\r\nexport default function plurality(votes) {\r\n    const max = Math.max(...votes.tallyFractions)\r\n    const iWinner = votes.tallyFractions.indexOf(max)\r\n\r\n    const results = { iWinner }\r\n    return results\r\n}\r\n/**\r\n * @typedef {Object} results\r\n * @property {Number} iWinner - Index of winner. Indexing according to votes[].\r\n */\r\n","/** @module */\r\n\r\n/**\r\n * pick a random candidate as the winner\r\n * @param {Object} votes\r\n * @param {Number} votes.tallyFractions.length - Number of candidates.\r\n * @returns {results}\r\n */\r\nexport default function randomWinner(votes) {\r\n    const nk = votes.tallyFractions.length\r\n    const iWinner = Math.floor(Math.random() * nk)\r\n    const results = { iWinner }\r\n    return results\r\n}\r\n/**\r\n * @typedef {Object} results\r\n * @property {Number} iWinner - Index of winner. Indexing according to votes[].\r\n */\r\n","/** @module */\r\n\r\n/**\r\n * Run the Huntington-Hill method of apportionment and return an allocation of seats.\r\n * @param {Object} votes\r\n * @param {number[]} votes.tallyFractions - tallies for each party as a fraction of 1.\r\n * @param {Object} electionMethodOptions\r\n * @param {number} electionMethodOptions.seats - The number of seats to fill.\r\n * @param {number} electionMethodOptions.threshold - The minimum fraction of voters\r\n * that a party needs to be eligible for a seat.\r\n * @returns {{allocation:number[]}} - results, with property allocation.\r\n * Allocation is an array of integers that say how many representatives each party gets.\r\n */\r\n\r\nexport default function huntingtonHill(votes, electionMethodOptions) {\r\n    const { seats, threshold } = electionMethodOptions\r\n\r\n    const populations = votes.tallyFractions.map(\r\n        (p) => ((p < threshold) ? 0 : p),\r\n    )\r\n\r\n    const nparties = populations.length\r\n\r\n    // When the threshold is 0, we have to give each party a seat.\r\n    if (threshold === 0 && nparties > seats) {\r\n        // sort parties by population\r\n        // sort decreasing\r\n        const populationsSorted = [...populations].sort(\r\n            (a, b) => b - a,\r\n        )\r\n        const minPopulation = populationsSorted[seats - 1]\r\n        const pops2 = votes.tallyFractions\r\n\r\n        // todo: consider ties\r\n        const allocation = pops2.map(\r\n            (p) => p >= minPopulation,\r\n        )\r\n        const results = { allocation }\r\n        return results\r\n    }\r\n\r\n    // make a list of break points / divisors, independent of vote totals\r\n    const divisorPattern = Array(seats).fill().map(\r\n        (_, i) => Math.sqrt((i) * (i + 1)),\r\n    )\r\n\r\n    // Scale the divisor pattern for each party.\r\n    // Call them signposts, like Balinski and Young.\r\n    // Ref: Balinski and Young 1982, pages 60-66, Chapter 7, Overview of Methods.\r\n    // Really, these are the divisors for each party.\r\n    // They are also a ratio of the representatives to the population\r\n    // except that the divisorPattern is used to substitute a slightly different number\r\n    // than the number of respresentatives.\r\n    const signposts = populations.map(\r\n        (p) => (p === 0 ? Infinity : divisorPattern.map((d) => d / p)),\r\n    ).flat()\r\n\r\n    // find last signpost to fill all seats\r\n    // sort increasing\r\n    const sortedSignposts = signposts.flat().sort(\r\n        (a, b) => a - b,\r\n    )\r\n\r\n    const lastSignpost = sortedSignposts[seats - 1]\r\n\r\n    // In the jargon:\r\n    //   Divide by populations by the divisors to get the quotients.\r\n    // Or, more clearly:\r\n    //   Count how many signposts each party has passed.\r\n\r\n    // lastSignpost = d/p\r\n    // d = p * lastSignpost\r\n    // sqrt(i*(i+1)) = d\r\n    // i=0 is one seat\r\n    // n = i + 1\r\n    // sqrt(n*(n-1)) = d\r\n    // n**2 - n = d**2\r\n    // n = (-b + sqrt(b-4ac) ) / 2a\r\n    // a = 1, b = -1, c = -d**2\r\n    // n = (1 + sqrt(1+4d**2) ) / 2\r\n    const quotients = populations.map(\r\n        (p) => ((p === 0) ? 0 : (1 + Math.sqrt(1 + 4 * (p * lastSignpost) ** 2)) * 0.5),\r\n    )\r\n    const allocation = quotients.map(\r\n        (p) => Math.floor(p),\r\n    )\r\n\r\n    // Todo: consider if there is a tie.\r\n    // Right now, we give extra seats to all the tied parties if there is a tie.\r\n    const results = { allocation }\r\n    return results\r\n}\r\n","/** @module */\r\n\r\nimport electionMethods from '../electionMethods/electionMethods.js'\r\n\r\n/**\r\n * Store settings and functions that deal with the election method.\r\n * @param {Candidate[]} candidates\r\n * @param {Menu} menu\r\n * @constructor\r\n */\r\nexport default function ElectionMethod(menu) {\r\n    const self = this\r\n\r\n    self.run = (candidates, votes) => {\r\n        // why have two different kinds of results?\r\n        // methodResults, the smaller one,\r\n        //   is in the context of the election method,\r\n        //   which has tallies go in and analysis come out\r\n        // electionResults, the larger one,\r\n        //   is in the context of candidate objects and voter objects.\r\n        let electionResults\r\n        if (self.checkElectionType() === 'allocation') {\r\n            const electionMethodOptions = { seats: 5, threshold: 0.2 }\r\n            const methodResults = electionMethods[self.electionMethod](votes, electionMethodOptions)\r\n            const { allocation } = methodResults\r\n            electionResults = { allocation, candidates }\r\n        } else {\r\n            const methodResults = electionMethods[self.electionMethod](votes)\r\n            const { iWinner } = methodResults\r\n            const winner = candidates[iWinner]\r\n            electionResults = { iWinner, winner }\r\n        }\r\n        return electionResults\r\n    }\r\n\r\n    // -- Menu --\r\n\r\n    // a list of election methods\r\n    self.electionMethodList = [\r\n        { name: 'Huntington Hill', value: 'huntingtonHill', type: 'allocation' },\r\n        { name: 'Plurality', value: 'plurality', type: 'singleWinner' },\r\n        { name: 'Random Winner', value: 'randomWinner', type: 'singleWinner' },\r\n    ]\r\n\r\n    // utilities for looking up this list\r\n    self.checkElectionType = () => self.electionMethodListByFunctionName[self.electionMethod].type\r\n    self.electionMethodListByFunctionName = []\r\n    self.electionMethodList.forEach(\r\n        (x) => { self.electionMethodListByFunctionName[x.value] = x },\r\n    )\r\n\r\n    // add a menu item to switch between types of elections\r\n    self.electionMethod = 'plurality'\r\n\r\n    /**\r\n     * Called in onclick.\r\n     * @param {(String|Number|Boolean)} value\r\n     */\r\n    self.setElectionMethod = (value) => { self.electionMethod = value }\r\n\r\n    menu.addMenuItem(\r\n        self,\r\n        {\r\n            label: 'Election Method:',\r\n            prop: 'electionMethod',\r\n            setProp: self.setElectionMethod,\r\n            options: self.electionMethodList,\r\n            change: ['electionMethod'],\r\n        },\r\n    )\r\n}\r\n","/** @module */\r\n\r\nimport castVotes from '../castVotes/castVotes.js'\r\nimport ElectionMethod from './ElectionMethod.js'\r\n\r\n/**\r\n * Here we are in the context of a single election with voter objects and candidate objects.\r\n * @param {Menu} menu\r\n * @constructor\r\n */\r\nexport default function Election(menu) {\r\n    const self = this\r\n\r\n    self.method = new ElectionMethod(menu)\r\n    self.dimensions = 1\r\n\r\n    self.setDimensions = (d) => { self.dimensions = d }\r\n\r\n    // Dimensions //\r\n\r\n    /** Get the correct geometry, depending on dimension. */\r\n    const mapVoters = (voterGroups) => {\r\n        if (self.dimensions === 1) {\r\n            return voterGroups.map((vg) => ({\r\n                x: vg.p1, w: vg.w1, densityProfile1: vg.densityProfile1,\r\n            }))\r\n        }\r\n        return voterGroups.map((vg) => ({\r\n            x: vg.p2.x, y: vg.p2.y, w: vg.w2, densityProfile1: vg.densityProfile1,\r\n        }))\r\n    }\r\n\r\n    /** Get the correct geometry, depending on dimension. */\r\n    const mapCans = (canList) => {\r\n        if (self.dimensions === 1) {\r\n            return canList.map((can) => (can.p1))\r\n        }\r\n        return canList.map((can) => (can.p2))\r\n    }\r\n\r\n    // Election //\r\n\r\n    self.runElection = function (voterGroups, canList) {\r\n        const voterGeom = mapVoters(voterGroups)\r\n        const canGeom = mapCans(canList)\r\n        const votes = castVotes.pluralityBallot(canGeom, voterGeom, self.dimensions)\r\n        const methodResults = self.method.run(canList, votes)\r\n        const electionResults = { ...methodResults, votes }\r\n        return electionResults\r\n    }\r\n\r\n    // Voters cast votes for candidates.\r\n    // There is also a separate graphical representation in VoronoiGroup.js\r\n    self.castVotes = (voters, candidates) => {\r\n        const voterGroups = voters.getVoterGroups()\r\n        const canList = candidates.getCandidates()\r\n        const voterGeom = mapVoters(voterGroups)\r\n        const canGeom = mapCans(canList)\r\n        const votes = castVotes.pluralityBallot(canGeom, voterGeom, self.dimensions)\r\n        return votes\r\n    }\r\n}\r\n","// https://github.com/d3/d3-delaunay v6.0.2 Copyright 2018-2021 Observable, Inc., 2021 Mapbox\r\n\r\n// Altered to make into an ES2015 module.\r\n\r\nconst epsilon$1 = 1.1102230246251565e-16;\r\nconst splitter = 134217729;\r\nconst resulterrbound = (3 + 8 * epsilon$1) * epsilon$1;\r\n\r\n// fast_expansion_sum_zeroelim routine from oritinal code\r\nfunction sum(elen, e, flen, f, h) {\r\n    let Q, Qnew, hh, bvirt;\r\n    let enow = e[0];\r\n    let fnow = f[0];\r\n    let eindex = 0;\r\n    let findex = 0;\r\n    if ((fnow > enow) === (fnow > -enow)) {\r\n        Q = enow;\r\n        enow = e[++eindex];\r\n    } else {\r\n        Q = fnow;\r\n        fnow = f[++findex];\r\n    }\r\n    let hindex = 0;\r\n    if (eindex < elen && findex < flen) {\r\n        if ((fnow > enow) === (fnow > -enow)) {\r\n            Qnew = enow + Q;\r\n            hh = Q - (Qnew - enow);\r\n            enow = e[++eindex];\r\n        } else {\r\n            Qnew = fnow + Q;\r\n            hh = Q - (Qnew - fnow);\r\n            fnow = f[++findex];\r\n        }\r\n        Q = Qnew;\r\n        if (hh !== 0) {\r\n            h[hindex++] = hh;\r\n        }\r\n        while (eindex < elen && findex < flen) {\r\n            if ((fnow > enow) === (fnow > -enow)) {\r\n                Qnew = Q + enow;\r\n                bvirt = Qnew - Q;\r\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\r\n                enow = e[++eindex];\r\n            } else {\r\n                Qnew = Q + fnow;\r\n                bvirt = Qnew - Q;\r\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\r\n                fnow = f[++findex];\r\n            }\r\n            Q = Qnew;\r\n            if (hh !== 0) {\r\n                h[hindex++] = hh;\r\n            }\r\n        }\r\n    }\r\n    while (eindex < elen) {\r\n        Qnew = Q + enow;\r\n        bvirt = Qnew - Q;\r\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\r\n        enow = e[++eindex];\r\n        Q = Qnew;\r\n        if (hh !== 0) {\r\n            h[hindex++] = hh;\r\n        }\r\n    }\r\n    while (findex < flen) {\r\n        Qnew = Q + fnow;\r\n        bvirt = Qnew - Q;\r\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\r\n        fnow = f[++findex];\r\n        Q = Qnew;\r\n        if (hh !== 0) {\r\n            h[hindex++] = hh;\r\n        }\r\n    }\r\n    if (Q !== 0 || hindex === 0) {\r\n        h[hindex++] = Q;\r\n    }\r\n    return hindex;\r\n}\r\n\r\nfunction estimate(elen, e) {\r\n    let Q = e[0];\r\n    for (let i = 1; i < elen; i++) Q += e[i];\r\n    return Q;\r\n}\r\n\r\nfunction vec(n) {\r\n    return new Float64Array(n);\r\n}\r\n\r\nconst ccwerrboundA = (3 + 16 * epsilon$1) * epsilon$1;\r\nconst ccwerrboundB = (2 + 12 * epsilon$1) * epsilon$1;\r\nconst ccwerrboundC = (9 + 64 * epsilon$1) * epsilon$1 * epsilon$1;\r\n\r\nconst B = vec(4);\r\nconst C1 = vec(8);\r\nconst C2 = vec(12);\r\nconst D = vec(16);\r\nconst u = vec(4);\r\n\r\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\r\n    let acxtail, acytail, bcxtail, bcytail;\r\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\r\n\r\n    const acx = ax - cx;\r\n    const bcx = bx - cx;\r\n    const acy = ay - cy;\r\n    const bcy = by - cy;\r\n\r\n    s1 = acx * bcy;\r\n    c = splitter * acx;\r\n    ahi = c - (c - acx);\r\n    alo = acx - ahi;\r\n    c = splitter * bcy;\r\n    bhi = c - (c - bcy);\r\n    blo = bcy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = acy * bcx;\r\n    c = splitter * acy;\r\n    ahi = c - (c - acy);\r\n    alo = acy - ahi;\r\n    c = splitter * bcx;\r\n    bhi = c - (c - bcx);\r\n    blo = bcx - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    B[3] = u3;\r\n\r\n    let det = estimate(4, B);\r\n    let errbound = ccwerrboundB * detsum;\r\n    if (det >= errbound || -det >= errbound) {\r\n        return det;\r\n    }\r\n\r\n    bvirt = ax - acx;\r\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\r\n    bvirt = bx - bcx;\r\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\r\n    bvirt = ay - acy;\r\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\r\n    bvirt = by - bcy;\r\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\r\n\r\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\r\n        return det;\r\n    }\r\n\r\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\r\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\r\n    if (det >= errbound || -det >= errbound) return det;\r\n\r\n    s1 = acxtail * bcy;\r\n    c = splitter * acxtail;\r\n    ahi = c - (c - acxtail);\r\n    alo = acxtail - ahi;\r\n    c = splitter * bcy;\r\n    bhi = c - (c - bcy);\r\n    blo = bcy - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = acytail * bcx;\r\n    c = splitter * acytail;\r\n    ahi = c - (c - acytail);\r\n    alo = acytail - ahi;\r\n    c = splitter * bcx;\r\n    bhi = c - (c - bcx);\r\n    blo = bcx - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    u[3] = u3;\r\n    const C1len = sum(4, B, 4, u, C1);\r\n\r\n    s1 = acx * bcytail;\r\n    c = splitter * acx;\r\n    ahi = c - (c - acx);\r\n    alo = acx - ahi;\r\n    c = splitter * bcytail;\r\n    bhi = c - (c - bcytail);\r\n    blo = bcytail - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = acy * bcxtail;\r\n    c = splitter * acy;\r\n    ahi = c - (c - acy);\r\n    alo = acy - ahi;\r\n    c = splitter * bcxtail;\r\n    bhi = c - (c - bcxtail);\r\n    blo = bcxtail - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    u[3] = u3;\r\n    const C2len = sum(C1len, C1, 4, u, C2);\r\n\r\n    s1 = acxtail * bcytail;\r\n    c = splitter * acxtail;\r\n    ahi = c - (c - acxtail);\r\n    alo = acxtail - ahi;\r\n    c = splitter * bcytail;\r\n    bhi = c - (c - bcytail);\r\n    blo = bcytail - bhi;\r\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    t1 = acytail * bcxtail;\r\n    c = splitter * acytail;\r\n    ahi = c - (c - acytail);\r\n    alo = acytail - ahi;\r\n    c = splitter * bcxtail;\r\n    bhi = c - (c - bcxtail);\r\n    blo = bcxtail - bhi;\r\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\r\n    _i = s0 - t0;\r\n    bvirt = s0 - _i;\r\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\r\n    _j = s1 + _i;\r\n    bvirt = _j - s1;\r\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\r\n    _i = _0 - t1;\r\n    bvirt = _0 - _i;\r\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\r\n    u3 = _j + _i;\r\n    bvirt = u3 - _j;\r\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\r\n    u[3] = u3;\r\n    const Dlen = sum(C2len, C2, 4, u, D);\r\n\r\n    return D[Dlen - 1];\r\n}\r\n\r\nfunction orient2d(ax, ay, bx, by, cx, cy) {\r\n    const detleft = (ay - cy) * (bx - cx);\r\n    const detright = (ax - cx) * (by - cy);\r\n    const det = detleft - detright;\r\n\r\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\r\n\r\n    const detsum = Math.abs(detleft + detright);\r\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\r\n\r\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\r\n}\r\n\r\nconst EPSILON = Math.pow(2, -52);\r\nconst EDGE_STACK = new Uint32Array(512);\r\n\r\nclass Delaunator {\r\n\r\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\r\n        const n = points.length;\r\n        const coords = new Float64Array(n * 2);\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            const p = points[i];\r\n            coords[2 * i] = getX(p);\r\n            coords[2 * i + 1] = getY(p);\r\n        }\r\n\r\n        return new Delaunator(coords);\r\n    }\r\n\r\n    constructor(coords) {\r\n        const n = coords.length >> 1;\r\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\r\n\r\n        this.coords = coords;\r\n\r\n        // arrays that will store the triangulation graph\r\n        const maxTriangles = Math.max(2 * n - 5, 0);\r\n        this._triangles = new Uint32Array(maxTriangles * 3);\r\n        this._halfedges = new Int32Array(maxTriangles * 3);\r\n\r\n        // temporary arrays for tracking the edges of the advancing convex hull\r\n        this._hashSize = Math.ceil(Math.sqrt(n));\r\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\r\n        this._hullNext = new Uint32Array(n); // edge to next edge\r\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\r\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\r\n\r\n        // temporary arrays for sorting points\r\n        this._ids = new Uint32Array(n);\r\n        this._dists = new Float64Array(n);\r\n\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\r\n        const n = coords.length >> 1;\r\n\r\n        // populate an array of point indices; calculate input data bbox\r\n        let minX = Infinity;\r\n        let minY = Infinity;\r\n        let maxX = -Infinity;\r\n        let maxY = -Infinity;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            const x = coords[2 * i];\r\n            const y = coords[2 * i + 1];\r\n            if (x < minX) minX = x;\r\n            if (y < minY) minY = y;\r\n            if (x > maxX) maxX = x;\r\n            if (y > maxY) maxY = y;\r\n            this._ids[i] = i;\r\n        }\r\n        const cx = (minX + maxX) / 2;\r\n        const cy = (minY + maxY) / 2;\r\n\r\n        let minDist = Infinity;\r\n        let i0, i1, i2;\r\n\r\n        // pick a seed point close to the center\r\n        for (let i = 0; i < n; i++) {\r\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\r\n            if (d < minDist) {\r\n                i0 = i;\r\n                minDist = d;\r\n            }\r\n        }\r\n        const i0x = coords[2 * i0];\r\n        const i0y = coords[2 * i0 + 1];\r\n\r\n        minDist = Infinity;\r\n\r\n        // find the point closest to the seed\r\n        for (let i = 0; i < n; i++) {\r\n            if (i === i0) continue;\r\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\r\n            if (d < minDist && d > 0) {\r\n                i1 = i;\r\n                minDist = d;\r\n            }\r\n        }\r\n        let i1x = coords[2 * i1];\r\n        let i1y = coords[2 * i1 + 1];\r\n\r\n        let minRadius = Infinity;\r\n\r\n        // find the third point which forms the smallest circumcircle with the first two\r\n        for (let i = 0; i < n; i++) {\r\n            if (i === i0 || i === i1) continue;\r\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\r\n            if (r < minRadius) {\r\n                i2 = i;\r\n                minRadius = r;\r\n            }\r\n        }\r\n        let i2x = coords[2 * i2];\r\n        let i2y = coords[2 * i2 + 1];\r\n\r\n        if (minRadius === Infinity) {\r\n            // order collinear points by dx (or dy if all x are identical)\r\n            // and return the list as a hull\r\n            for (let i = 0; i < n; i++) {\r\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\r\n            }\r\n            quicksort(this._ids, this._dists, 0, n - 1);\r\n            const hull = new Uint32Array(n);\r\n            let j = 0;\r\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\r\n                const id = this._ids[i];\r\n                if (this._dists[id] > d0) {\r\n                    hull[j++] = id;\r\n                    d0 = this._dists[id];\r\n                }\r\n            }\r\n            this.hull = hull.subarray(0, j);\r\n            this.triangles = new Uint32Array(0);\r\n            this.halfedges = new Uint32Array(0);\r\n            return;\r\n        }\r\n\r\n        // swap the order of the seed points for counter-clockwise orientation\r\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\r\n            const i = i1;\r\n            const x = i1x;\r\n            const y = i1y;\r\n            i1 = i2;\r\n            i1x = i2x;\r\n            i1y = i2y;\r\n            i2 = i;\r\n            i2x = x;\r\n            i2y = y;\r\n        }\r\n\r\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\r\n        this._cx = center.x;\r\n        this._cy = center.y;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\r\n        }\r\n\r\n        // sort the points by distance from the seed triangle circumcenter\r\n        quicksort(this._ids, this._dists, 0, n - 1);\r\n\r\n        // set up the seed triangle as the starting hull\r\n        this._hullStart = i0;\r\n        let hullSize = 3;\r\n\r\n        hullNext[i0] = hullPrev[i2] = i1;\r\n        hullNext[i1] = hullPrev[i0] = i2;\r\n        hullNext[i2] = hullPrev[i1] = i0;\r\n\r\n        hullTri[i0] = 0;\r\n        hullTri[i1] = 1;\r\n        hullTri[i2] = 2;\r\n\r\n        hullHash.fill(-1);\r\n        hullHash[this._hashKey(i0x, i0y)] = i0;\r\n        hullHash[this._hashKey(i1x, i1y)] = i1;\r\n        hullHash[this._hashKey(i2x, i2y)] = i2;\r\n\r\n        this.trianglesLen = 0;\r\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\r\n\r\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\r\n            const i = this._ids[k];\r\n            const x = coords[2 * i];\r\n            const y = coords[2 * i + 1];\r\n\r\n            // skip near-duplicate points\r\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\r\n            xp = x;\r\n            yp = y;\r\n\r\n            // skip seed triangle points\r\n            if (i === i0 || i === i1 || i === i2) continue;\r\n\r\n            // find a visible edge on the convex hull using edge hash\r\n            let start = 0;\r\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\r\n                start = hullHash[(key + j) % this._hashSize];\r\n                if (start !== -1 && start !== hullNext[start]) break;\r\n            }\r\n\r\n            start = hullPrev[start];\r\n            let e = start, q;\r\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\r\n                e = q;\r\n                if (e === start) {\r\n                    e = -1;\r\n                    break;\r\n                }\r\n            }\r\n            if (e === -1) continue; // likely a near-duplicate point; skip it\r\n\r\n            // add the first triangle from the point\r\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\r\n\r\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\r\n            hullTri[i] = this._legalize(t + 2);\r\n            hullTri[e] = t; // keep track of boundary triangles on the hull\r\n            hullSize++;\r\n\r\n            // walk forward through the hull, adding more triangles and flipping recursively\r\n            let n = hullNext[e];\r\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\r\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\r\n                hullTri[i] = this._legalize(t + 2);\r\n                hullNext[n] = n; // mark as removed\r\n                hullSize--;\r\n                n = q;\r\n            }\r\n\r\n            // walk backward from the other side, adding more triangles and flipping\r\n            if (e === start) {\r\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\r\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\r\n                    this._legalize(t + 2);\r\n                    hullTri[q] = t;\r\n                    hullNext[e] = e; // mark as removed\r\n                    hullSize--;\r\n                    e = q;\r\n                }\r\n            }\r\n\r\n            // update the hull indices\r\n            this._hullStart = hullPrev[i] = e;\r\n            hullNext[e] = hullPrev[n] = i;\r\n            hullNext[i] = n;\r\n\r\n            // save the two new edges in the hash table\r\n            hullHash[this._hashKey(x, y)] = i;\r\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\r\n        }\r\n\r\n        this.hull = new Uint32Array(hullSize);\r\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\r\n            this.hull[i] = e;\r\n            e = hullNext[e];\r\n        }\r\n\r\n        // trim typed triangle mesh arrays\r\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\r\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\r\n    }\r\n\r\n    _hashKey(x, y) {\r\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\r\n    }\r\n\r\n    _legalize(a) {\r\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\r\n\r\n        let i = 0;\r\n        let ar = 0;\r\n\r\n        // recursion eliminated with a fixed-size stack\r\n        while (true) {\r\n            const b = halfedges[a];\r\n\r\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\r\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\r\n             * then do the same check/flip recursively for the new pair of triangles\r\n             *\r\n             *           pl                    pl\r\n             *          /||\\                  /  \\\r\n             *       al/ || \\bl            al/    \\a\r\n             *        /  ||  \\              /      \\\r\n             *       /  a||b  \\    flip    /___ar___\\\r\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\r\n             *        \\  ||  /              \\      /\r\n             *       ar\\ || /br             b\\    /br\r\n             *          \\||/                  \\  /\r\n             *           pr                    pr\r\n             */\r\n            const a0 = a - a % 3;\r\n            ar = a0 + (a + 2) % 3;\r\n\r\n            if (b === -1) { // convex hull edge\r\n                if (i === 0) break;\r\n                a = EDGE_STACK[--i];\r\n                continue;\r\n            }\r\n\r\n            const b0 = b - b % 3;\r\n            const al = a0 + (a + 1) % 3;\r\n            const bl = b0 + (b + 2) % 3;\r\n\r\n            const p0 = triangles[ar];\r\n            const pr = triangles[a];\r\n            const pl = triangles[al];\r\n            const p1 = triangles[bl];\r\n\r\n            const illegal = inCircle(\r\n                coords[2 * p0], coords[2 * p0 + 1],\r\n                coords[2 * pr], coords[2 * pr + 1],\r\n                coords[2 * pl], coords[2 * pl + 1],\r\n                coords[2 * p1], coords[2 * p1 + 1]);\r\n\r\n            if (illegal) {\r\n                triangles[a] = p1;\r\n                triangles[b] = p0;\r\n\r\n                const hbl = halfedges[bl];\r\n\r\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\r\n                if (hbl === -1) {\r\n                    let e = this._hullStart;\r\n                    do {\r\n                        if (this._hullTri[e] === bl) {\r\n                            this._hullTri[e] = a;\r\n                            break;\r\n                        }\r\n                        e = this._hullPrev[e];\r\n                    } while (e !== this._hullStart);\r\n                }\r\n                this._link(a, hbl);\r\n                this._link(b, halfedges[ar]);\r\n                this._link(ar, bl);\r\n\r\n                const br = b0 + (b + 1) % 3;\r\n\r\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\r\n                if (i < EDGE_STACK.length) {\r\n                    EDGE_STACK[i++] = br;\r\n                }\r\n            } else {\r\n                if (i === 0) break;\r\n                a = EDGE_STACK[--i];\r\n            }\r\n        }\r\n\r\n        return ar;\r\n    }\r\n\r\n    _link(a, b) {\r\n        this._halfedges[a] = b;\r\n        if (b !== -1) this._halfedges[b] = a;\r\n    }\r\n\r\n    // add a new triangle given vertex indices and adjacent half-edge ids\r\n    _addTriangle(i0, i1, i2, a, b, c) {\r\n        const t = this.trianglesLen;\r\n\r\n        this._triangles[t] = i0;\r\n        this._triangles[t + 1] = i1;\r\n        this._triangles[t + 2] = i2;\r\n\r\n        this._link(t, a);\r\n        this._link(t + 1, b);\r\n        this._link(t + 2, c);\r\n\r\n        this.trianglesLen += 3;\r\n\r\n        return t;\r\n    }\r\n}\r\n\r\n// monotonically increases with real angle, but doesn't need expensive trigonometry\r\nfunction pseudoAngle(dx, dy) {\r\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\r\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\r\n}\r\n\r\nfunction dist(ax, ay, bx, by) {\r\n    const dx = ax - bx;\r\n    const dy = ay - by;\r\n    return dx * dx + dy * dy;\r\n}\r\n\r\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\r\n    const dx = ax - px;\r\n    const dy = ay - py;\r\n    const ex = bx - px;\r\n    const ey = by - py;\r\n    const fx = cx - px;\r\n    const fy = cy - py;\r\n\r\n    const ap = dx * dx + dy * dy;\r\n    const bp = ex * ex + ey * ey;\r\n    const cp = fx * fx + fy * fy;\r\n\r\n    return dx * (ey * cp - bp * fy) -\r\n           dy * (ex * cp - bp * fx) +\r\n           ap * (ex * fy - ey * fx) < 0;\r\n}\r\n\r\nfunction circumradius(ax, ay, bx, by, cx, cy) {\r\n    const dx = bx - ax;\r\n    const dy = by - ay;\r\n    const ex = cx - ax;\r\n    const ey = cy - ay;\r\n\r\n    const bl = dx * dx + dy * dy;\r\n    const cl = ex * ex + ey * ey;\r\n    const d = 0.5 / (dx * ey - dy * ex);\r\n\r\n    const x = (ey * bl - dy * cl) * d;\r\n    const y = (dx * cl - ex * bl) * d;\r\n\r\n    return x * x + y * y;\r\n}\r\n\r\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\r\n    const dx = bx - ax;\r\n    const dy = by - ay;\r\n    const ex = cx - ax;\r\n    const ey = cy - ay;\r\n\r\n    const bl = dx * dx + dy * dy;\r\n    const cl = ex * ex + ey * ey;\r\n    const d = 0.5 / (dx * ey - dy * ex);\r\n\r\n    const x = ax + (ey * bl - dy * cl) * d;\r\n    const y = ay + (dx * cl - ex * bl) * d;\r\n\r\n    return {x, y};\r\n}\r\n\r\nfunction quicksort(ids, dists, left, right) {\r\n    if (right - left <= 20) {\r\n        for (let i = left + 1; i <= right; i++) {\r\n            const temp = ids[i];\r\n            const tempDist = dists[temp];\r\n            let j = i - 1;\r\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\r\n            ids[j + 1] = temp;\r\n        }\r\n    } else {\r\n        const median = (left + right) >> 1;\r\n        let i = left + 1;\r\n        let j = right;\r\n        swap(ids, median, i);\r\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\r\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\r\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\r\n\r\n        const temp = ids[i];\r\n        const tempDist = dists[temp];\r\n        while (true) {\r\n            do i++; while (dists[ids[i]] < tempDist);\r\n            do j--; while (dists[ids[j]] > tempDist);\r\n            if (j < i) break;\r\n            swap(ids, i, j);\r\n        }\r\n        ids[left + 1] = ids[j];\r\n        ids[j] = temp;\r\n\r\n        if (right - i + 1 >= j - left) {\r\n            quicksort(ids, dists, i, right);\r\n            quicksort(ids, dists, left, j - 1);\r\n        } else {\r\n            quicksort(ids, dists, left, j - 1);\r\n            quicksort(ids, dists, i, right);\r\n        }\r\n    }\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n    const tmp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = tmp;\r\n}\r\n\r\nfunction defaultGetX(p) {\r\n    return p[0];\r\n}\r\nfunction defaultGetY(p) {\r\n    return p[1];\r\n}\r\n\r\nconst epsilon = 1e-6;\r\n\r\nclass Path {\r\n  constructor() {\r\n    this._x0 = this._y0 = // start of current subpath\r\n    this._x1 = this._y1 = null; // end of current subpath\r\n    this._ = \"\";\r\n  }\r\n  moveTo(x, y) {\r\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\r\n  }\r\n  closePath() {\r\n    if (this._x1 !== null) {\r\n      this._x1 = this._x0, this._y1 = this._y0;\r\n      this._ += \"Z\";\r\n    }\r\n  }\r\n  lineTo(x, y) {\r\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\r\n  }\r\n  arc(x, y, r) {\r\n    x = +x, y = +y, r = +r;\r\n    const x0 = x + r;\r\n    const y0 = y;\r\n    if (r < 0) throw new Error(\"negative radius\");\r\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\r\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\r\n    if (!r) return;\r\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\r\n  }\r\n  rect(x, y, w, h) {\r\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\r\n  }\r\n  value() {\r\n    return this._ || null;\r\n  }\r\n}\r\n\r\nclass Polygon {\r\n  constructor() {\r\n    this._ = [];\r\n  }\r\n  moveTo(x, y) {\r\n    this._.push([x, y]);\r\n  }\r\n  closePath() {\r\n    this._.push(this._[0].slice());\r\n  }\r\n  lineTo(x, y) {\r\n    this._.push([x, y]);\r\n  }\r\n  value() {\r\n    return this._.length ? this._ : null;\r\n  }\r\n}\r\n\r\nclass Voronoi {\r\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\r\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\r\n    this.delaunay = delaunay;\r\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\r\n    this.vectors = new Float64Array(delaunay.points.length * 2);\r\n    this.xmax = xmax, this.xmin = xmin;\r\n    this.ymax = ymax, this.ymin = ymin;\r\n    this._init();\r\n  }\r\n  update() {\r\n    this.delaunay.update();\r\n    this._init();\r\n    return this;\r\n  }\r\n  _init() {\r\n    const {delaunay: {points, hull, triangles}, vectors} = this;\r\n\r\n    // Compute circumcenters.\r\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\r\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\r\n      const t1 = triangles[i] * 2;\r\n      const t2 = triangles[i + 1] * 2;\r\n      const t3 = triangles[i + 2] * 2;\r\n      const x1 = points[t1];\r\n      const y1 = points[t1 + 1];\r\n      const x2 = points[t2];\r\n      const y2 = points[t2 + 1];\r\n      const x3 = points[t3];\r\n      const y3 = points[t3 + 1];\r\n\r\n      const dx = x2 - x1;\r\n      const dy = y2 - y1;\r\n      const ex = x3 - x1;\r\n      const ey = y3 - y1;\r\n      const ab = (dx * ey - dy * ex) * 2;\r\n\r\n      if (Math.abs(ab) < 1e-9) {\r\n        // degenerate case (collinear diagram)\r\n        // almost equal points (degenerate triangle)\r\n        // the circumcenter is at the infinity, in a\r\n        // direction that is:\r\n        // 1. orthogonal to the halfedge.\r\n        let a = 1e9;\r\n        // 2. points away from the center; since the list of triangles starts\r\n        // in the center, the first point of the first triangle\r\n        // will be our reference\r\n        const r = triangles[0] * 2;\r\n        a *= Math.sign((points[r] - x1) * ey - (points[r + 1] - y1) * ex);\r\n        x = (x1 + x3) / 2 - a * ey;\r\n        y = (y1 + y3) / 2 + a * ex;\r\n      } else {\r\n        const d = 1 / ab;\r\n        const bl = dx * dx + dy * dy;\r\n        const cl = ex * ex + ey * ey;\r\n        x = x1 + (ey * bl - dy * cl) * d;\r\n        y = y1 + (dx * cl - ex * bl) * d;\r\n      }\r\n      circumcenters[j] = x;\r\n      circumcenters[j + 1] = y;\r\n    }\r\n\r\n    // Compute exterior cell rays.\r\n    let h = hull[hull.length - 1];\r\n    let p0, p1 = h * 4;\r\n    let x0, x1 = points[2 * h];\r\n    let y0, y1 = points[2 * h + 1];\r\n    vectors.fill(0);\r\n    for (let i = 0; i < hull.length; ++i) {\r\n      h = hull[i];\r\n      p0 = p1, x0 = x1, y0 = y1;\r\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\r\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\r\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\r\n    }\r\n  }\r\n  render(context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\r\n    if (hull.length <= 1) return null;\r\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\r\n      const j = halfedges[i];\r\n      if (j < i) continue;\r\n      const ti = Math.floor(i / 3) * 2;\r\n      const tj = Math.floor(j / 3) * 2;\r\n      const xi = circumcenters[ti];\r\n      const yi = circumcenters[ti + 1];\r\n      const xj = circumcenters[tj];\r\n      const yj = circumcenters[tj + 1];\r\n      this._renderSegment(xi, yi, xj, yj, context);\r\n    }\r\n    let h0, h1 = hull[hull.length - 1];\r\n    for (let i = 0; i < hull.length; ++i) {\r\n      h0 = h1, h1 = hull[i];\r\n      const t = Math.floor(inedges[h1] / 3) * 2;\r\n      const x = circumcenters[t];\r\n      const y = circumcenters[t + 1];\r\n      const v = h0 * 4;\r\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\r\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\r\n    }\r\n    return buffer && buffer.value();\r\n  }\r\n  renderBounds(context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\r\n    return buffer && buffer.value();\r\n  }\r\n  renderCell(i, context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const points = this._clip(i);\r\n    if (points === null || !points.length) return;\r\n    context.moveTo(points[0], points[1]);\r\n    let n = points.length;\r\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\r\n    for (let i = 2; i < n; i += 2) {\r\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\r\n        context.lineTo(points[i], points[i + 1]);\r\n    }\r\n    context.closePath();\r\n    return buffer && buffer.value();\r\n  }\r\n  *cellPolygons() {\r\n    const {delaunay: {points}} = this;\r\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\r\n      const cell = this.cellPolygon(i);\r\n      if (cell) cell.index = i, yield cell;\r\n    }\r\n  }\r\n  cellPolygon(i) {\r\n    const polygon = new Polygon;\r\n    this.renderCell(i, polygon);\r\n    return polygon.value();\r\n  }\r\n  _renderSegment(x0, y0, x1, y1, context) {\r\n    let S;\r\n    const c0 = this._regioncode(x0, y0);\r\n    const c1 = this._regioncode(x1, y1);\r\n    if (c0 === 0 && c1 === 0) {\r\n      context.moveTo(x0, y0);\r\n      context.lineTo(x1, y1);\r\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\r\n      context.moveTo(S[0], S[1]);\r\n      context.lineTo(S[2], S[3]);\r\n    }\r\n  }\r\n  contains(i, x, y) {\r\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\r\n    return this.delaunay._step(i, x, y) === i;\r\n  }\r\n  *neighbors(i) {\r\n    const ci = this._clip(i);\r\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\r\n      const cj = this._clip(j);\r\n      // find the common edge\r\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\r\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\r\n          if (ci[ai] == cj[aj]\r\n          && ci[ai + 1] == cj[aj + 1]\r\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\r\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\r\n          ) {\r\n            yield j;\r\n            break loop;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _cell(i) {\r\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\r\n    const e0 = inedges[i];\r\n    if (e0 === -1) return null; // coincident point\r\n    const points = [];\r\n    let e = e0;\r\n    do {\r\n      const t = Math.floor(e / 3);\r\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\r\n      e = e % 3 === 2 ? e - 2 : e + 1;\r\n      if (triangles[e] !== i) break; // bad triangulation\r\n      e = halfedges[e];\r\n    } while (e !== e0 && e !== -1);\r\n    return points;\r\n  }\r\n  _clip(i) {\r\n    // degenerate case (1 valid point: return the box)\r\n    if (i === 0 && this.delaunay.hull.length === 1) {\r\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\r\n    }\r\n    const points = this._cell(i);\r\n    if (points === null) return null;\r\n    const {vectors: V} = this;\r\n    const v = i * 4;\r\n    return V[v] || V[v + 1]\r\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\r\n        : this._clipFinite(i, points);\r\n  }\r\n  _clipFinite(i, points) {\r\n    const n = points.length;\r\n    let P = null;\r\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\r\n    let c0, c1 = this._regioncode(x1, y1);\r\n    let e0, e1 = 0;\r\n    for (let j = 0; j < n; j += 2) {\r\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\r\n      c0 = c1, c1 = this._regioncode(x1, y1);\r\n      if (c0 === 0 && c1 === 0) {\r\n        e0 = e1, e1 = 0;\r\n        if (P) P.push(x1, y1);\r\n        else P = [x1, y1];\r\n      } else {\r\n        let S, sx0, sy0, sx1, sy1;\r\n        if (c0 === 0) {\r\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\r\n          [sx0, sy0, sx1, sy1] = S;\r\n        } else {\r\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\r\n          [sx1, sy1, sx0, sy0] = S;\r\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\r\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\r\n          if (P) P.push(sx0, sy0);\r\n          else P = [sx0, sy0];\r\n        }\r\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\r\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\r\n        if (P) P.push(sx1, sy1);\r\n        else P = [sx1, sy1];\r\n      }\r\n    }\r\n    if (P) {\r\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\r\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\r\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\r\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\r\n    }\r\n    return P;\r\n  }\r\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\r\n    while (true) {\r\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\r\n      if (c0 & c1) return null;\r\n      let x, y, c = c0 || c1;\r\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\r\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\r\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\r\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\r\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\r\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\r\n    }\r\n  }\r\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\r\n    let P = Array.from(points), p;\r\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\r\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\r\n    if (P = this._clipFinite(i, P)) {\r\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\r\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\r\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\r\n      }\r\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\r\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\r\n    }\r\n    return P;\r\n  }\r\n  _edge(i, e0, e1, P, j) {\r\n    while (e0 !== e1) {\r\n      let x, y;\r\n      switch (e0) {\r\n        case 0b0101: e0 = 0b0100; continue; // top-left\r\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\r\n        case 0b0110: e0 = 0b0010; continue; // top-right\r\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\r\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\r\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\r\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\r\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\r\n      }\r\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\r\n      // undefined, the conditional statement will be executed.\r\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\r\n        P.splice(j, 0, x, y), j += 2;\r\n      }\r\n    }\r\n    if (P.length > 4) {\r\n      for (let i = 0; i < P.length; i+= 2) {\r\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\r\n        if (P[i] === P[j] && P[j] === P[k]\r\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\r\n          P.splice(j, 2), i -= 2;\r\n      }\r\n    }\r\n    return j;\r\n  }\r\n  _project(x0, y0, vx, vy) {\r\n    let t = Infinity, c, x, y;\r\n    if (vy < 0) { // top\r\n      if (y0 <= this.ymin) return null;\r\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\r\n    } else if (vy > 0) { // bottom\r\n      if (y0 >= this.ymax) return null;\r\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\r\n    }\r\n    if (vx > 0) { // right\r\n      if (x0 >= this.xmax) return null;\r\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\r\n    } else if (vx < 0) { // left\r\n      if (x0 <= this.xmin) return null;\r\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\r\n    }\r\n    return [x, y];\r\n  }\r\n  _edgecode(x, y) {\r\n    return (x === this.xmin ? 0b0001\r\n        : x === this.xmax ? 0b0010 : 0b0000)\r\n        | (y === this.ymin ? 0b0100\r\n        : y === this.ymax ? 0b1000 : 0b0000);\r\n  }\r\n  _regioncode(x, y) {\r\n    return (x < this.xmin ? 0b0001\r\n        : x > this.xmax ? 0b0010 : 0b0000)\r\n        | (y < this.ymin ? 0b0100\r\n        : y > this.ymax ? 0b1000 : 0b0000);\r\n  }\r\n}\r\n\r\nconst tau = 2 * Math.PI, pow = Math.pow;\r\n\r\nfunction pointX(p) {\r\n  return p[0];\r\n}\r\n\r\nfunction pointY(p) {\r\n  return p[1];\r\n}\r\n\r\n// A triangulation is collinear if all its triangles have a non-null area\r\nfunction collinear(d) {\r\n  const {triangles, coords} = d;\r\n  for (let i = 0; i < triangles.length; i += 3) {\r\n    const a = 2 * triangles[i],\r\n          b = 2 * triangles[i + 1],\r\n          c = 2 * triangles[i + 2],\r\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\r\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\r\n    if (cross > 1e-10) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction jitter(x, y, r) {\r\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\r\n}\r\n\r\nclass Delaunay {\r\n  static from(points, fx = pointX, fy = pointY, that) {\r\n    return new Delaunay(\"length\" in points\r\n        ? flatArray(points, fx, fy, that)\r\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\r\n  }\r\n  constructor(points) {\r\n    this._delaunator = new Delaunator(points);\r\n    this.inedges = new Int32Array(points.length / 2);\r\n    this._hullIndex = new Int32Array(points.length / 2);\r\n    this.points = this._delaunator.coords;\r\n    this._init();\r\n  }\r\n  update() {\r\n    this._delaunator.update();\r\n    this._init();\r\n    return this;\r\n  }\r\n  _init() {\r\n    const d = this._delaunator, points = this.points;\r\n\r\n    // check for collinear\r\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\r\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\r\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\r\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\r\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\r\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\r\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\r\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\r\n        points[2 * i] = p[0];\r\n        points[2 * i + 1] = p[1];\r\n      }\r\n      this._delaunator = new Delaunator(points);\r\n    } else {\r\n      delete this.collinear;\r\n    }\r\n\r\n    const halfedges = this.halfedges = this._delaunator.halfedges;\r\n    const hull = this.hull = this._delaunator.hull;\r\n    const triangles = this.triangles = this._delaunator.triangles;\r\n    const inedges = this.inedges.fill(-1);\r\n    const hullIndex = this._hullIndex.fill(-1);\r\n\r\n    // Compute an index from each point to an (arbitrary) incoming halfedge\r\n    // Used to give the first neighbor of each point; for this reason,\r\n    // on the hull we give priority to exterior halfedges\r\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\r\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\r\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\r\n    }\r\n    for (let i = 0, n = hull.length; i < n; ++i) {\r\n      hullIndex[hull[i]] = i;\r\n    }\r\n\r\n    // degenerate case: 1 or 2 (distinct) points\r\n    if (hull.length <= 2 && hull.length > 0) {\r\n      this.triangles = new Int32Array(3).fill(-1);\r\n      this.halfedges = new Int32Array(3).fill(-1);\r\n      this.triangles[0] = hull[0];\r\n      inedges[hull[0]] = 1;\r\n      if (hull.length === 2) {\r\n        inedges[hull[1]] = 0;\r\n        this.triangles[1] = hull[1];\r\n        this.triangles[2] = hull[1];\r\n      }\r\n    }\r\n  }\r\n  voronoi(bounds) {\r\n    return new Voronoi(this, bounds);\r\n  }\r\n  *neighbors(i) {\r\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\r\n\r\n    // degenerate case with several collinear points\r\n    if (collinear) {\r\n      const l = collinear.indexOf(i);\r\n      if (l > 0) yield collinear[l - 1];\r\n      if (l < collinear.length - 1) yield collinear[l + 1];\r\n      return;\r\n    }\r\n\r\n    const e0 = inedges[i];\r\n    if (e0 === -1) return; // coincident point\r\n    let e = e0, p0 = -1;\r\n    do {\r\n      yield p0 = triangles[e];\r\n      e = e % 3 === 2 ? e - 2 : e + 1;\r\n      if (triangles[e] !== i) return; // bad triangulation\r\n      e = halfedges[e];\r\n      if (e === -1) {\r\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\r\n        if (p !== p0) yield p;\r\n        return;\r\n      }\r\n    } while (e !== e0);\r\n  }\r\n  find(x, y, i = 0) {\r\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\r\n    const i0 = i;\r\n    let c;\r\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\r\n    return c;\r\n  }\r\n  _step(i, x, y) {\r\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\r\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\r\n    let c = i;\r\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\r\n    const e0 = inedges[i];\r\n    let e = e0;\r\n    do {\r\n      let t = triangles[e];\r\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\r\n      if (dt < dc) dc = dt, c = t;\r\n      e = e % 3 === 2 ? e - 2 : e + 1;\r\n      if (triangles[e] !== i) break; // bad triangulation\r\n      e = halfedges[e];\r\n      if (e === -1) {\r\n        e = hull[(_hullIndex[i] + 1) % hull.length];\r\n        if (e !== t) {\r\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\r\n        }\r\n        break;\r\n      }\r\n    } while (e !== e0);\r\n    return c;\r\n  }\r\n  render(context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const {points, halfedges, triangles} = this;\r\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\r\n      const j = halfedges[i];\r\n      if (j < i) continue;\r\n      const ti = triangles[i] * 2;\r\n      const tj = triangles[j] * 2;\r\n      context.moveTo(points[ti], points[ti + 1]);\r\n      context.lineTo(points[tj], points[tj + 1]);\r\n    }\r\n    this.renderHull(context);\r\n    return buffer && buffer.value();\r\n  }\r\n  renderPoints(context, r) {\r\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\r\n    r = r == undefined ? 2 : +r;\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const {points} = this;\r\n    for (let i = 0, n = points.length; i < n; i += 2) {\r\n      const x = points[i], y = points[i + 1];\r\n      context.moveTo(x + r, y);\r\n      context.arc(x, y, r, 0, tau);\r\n    }\r\n    return buffer && buffer.value();\r\n  }\r\n  renderHull(context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const {hull, points} = this;\r\n    const h = hull[0] * 2, n = hull.length;\r\n    context.moveTo(points[h], points[h + 1]);\r\n    for (let i = 1; i < n; ++i) {\r\n      const h = 2 * hull[i];\r\n      context.lineTo(points[h], points[h + 1]);\r\n    }\r\n    context.closePath();\r\n    return buffer && buffer.value();\r\n  }\r\n  hullPolygon() {\r\n    const polygon = new Polygon;\r\n    this.renderHull(polygon);\r\n    return polygon.value();\r\n  }\r\n  renderTriangle(i, context) {\r\n    const buffer = context == null ? context = new Path : undefined;\r\n    const {points, triangles} = this;\r\n    const t0 = triangles[i *= 3] * 2;\r\n    const t1 = triangles[i + 1] * 2;\r\n    const t2 = triangles[i + 2] * 2;\r\n    context.moveTo(points[t0], points[t0 + 1]);\r\n    context.lineTo(points[t1], points[t1 + 1]);\r\n    context.lineTo(points[t2], points[t2 + 1]);\r\n    context.closePath();\r\n    return buffer && buffer.value();\r\n  }\r\n  *trianglePolygons() {\r\n    const {triangles} = this;\r\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\r\n      yield this.trianglePolygon(i);\r\n    }\r\n  }\r\n  trianglePolygon(i) {\r\n    const polygon = new Polygon;\r\n    this.renderTriangle(i, polygon);\r\n    return polygon.value();\r\n  }\r\n}\r\n\r\nfunction flatArray(points, fx, fy, that) {\r\n  const n = points.length;\r\n  const array = new Float64Array(n * 2);\r\n  for (let i = 0; i < n; ++i) {\r\n    const p = points[i];\r\n    array[i * 2] = fx.call(that, p, i, points);\r\n    array[i * 2 + 1] = fy.call(that, p, i, points);\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction* flatIterable(points, fx, fy, that) {\r\n  let i = 0;\r\n  for (const p of points) {\r\n    yield fx.call(that, p, i, points);\r\n    yield fy.call(that, p, i, points);\r\n    ++i;\r\n  }\r\n}\r\n\r\nexport {Delaunay,Voronoi}","/** @module */\r\n\r\n// d3-voronoi\r\n// d3-select\r\n// d3-range\r\n\r\nimport { Delaunay } from '../../lib/d3-delaunay.esm.js'\r\n// import { Delaunay } from 'd3-delaunay'\r\n// import { Delaunay } from 'https://cdn.skypack.dev/d3-delaunay@6'\r\n// https://github.com/d3/d3-delaunay\r\n\r\n/**\r\n * Draw Voronoi cells to show votes.\r\n * @param {VoterGroup} voterGroup\r\n * @param {Election} election\r\n * @param {Screen} screen\r\n * @constructor\r\n */\r\nexport default function voronoiGroup(voterGroup, screen) {\r\n    const self = this\r\n\r\n    let cans\r\n    let voronoi\r\n\r\n    self.update = function (candidates) {\r\n        cans = candidates.getCandidates()\r\n        const points = cans.map((e) => [e.x, e.y])\r\n        const delaunay = Delaunay.from(points)\r\n        voronoi = delaunay.voronoi([0, 0, screen.width, screen.height])\r\n    }\r\n\r\n    self.render = function () {\r\n        const { ctx } = screen\r\n\r\n        ctx.save()\r\n\r\n        // draw circle clip\r\n\r\n        // http://jsfiddle.net/jimrhoskins/dDUC3/1/\r\n        // https://dustinpfister.github.io/2019/10/08/canvas-clip/\r\n        ctx.beginPath()\r\n        ctx.arc(voterGroup.x, voterGroup.y, voterGroup.w2 * 0.5, 0, 2 * Math.PI)\r\n        // ctx.closePath()\r\n        ctx.clip()\r\n\r\n        const n = cans.length\r\n        for (let i = 0; i < n; i++) {\r\n            ctx.beginPath()\r\n            voronoi.renderCell(i, ctx)\r\n            ctx.fillStyle = cans[i].color\r\n            ctx.fill()\r\n            ctx.stroke()\r\n        }\r\n\r\n        ctx.beginPath()\r\n        ctx.arc(voterGroup.x, voterGroup.y, voterGroup.w2 * 0.5, 0, 2 * Math.PI)\r\n        ctx.stroke()\r\n\r\n        ctx.restore()\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Super class\r\n * A SimVoter has functionality for a voter that is specific to a simulation.\r\n * Each SimVoter has a voter component.\r\n * The voter component is a VoterCircle, for now.\r\n * This voter component is common to all simulations.\r\n * An example of a SimVoter is a GeoVoterBasis or a OneVoterCircle.\r\n * This is an inheritance structure.\r\n * @param {VoterCircle} voterCircle - a voter component that SimVoter builds upon.\r\n * @param {DraggableManager} dragm\r\n * @constructor\r\n */\r\nexport default function SimVoter(voterCircle, dragm) {\r\n    const self = this\r\n    self.voter = voterCircle\r\n\r\n    dragm.newCircleHandle(voterCircle, voterCircle.circle)\r\n\r\n    self.renderForeground = () => {\r\n        self.voter.renderForeground()\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport VoronoiGroup from './VoronoiGroup.js'\r\n\r\nimport SimVoter from './SimVoter.js'\r\n\r\n/**\r\n * Adds functionality for showing votes\r\n * @param {VoterCircle} voterCircle\r\n * @param {DraggableManager} dragm\r\n * @param {Screen} screen\r\n * @constructor\r\n */\r\nexport default function OneVoterCircle(voterCircle, dragm, screen) {\r\n    const self = this\r\n    SimVoter.call(self, voterCircle, dragm)\r\n\r\n    const voronoiGroup = new VoronoiGroup(voterCircle, screen)\r\n\r\n    self.update = function (candidates) {\r\n        voronoiGroup.update(candidates)\r\n    }\r\n\r\n    // Graphics component\r\n    self.render = function () {\r\n        // circle\r\n        voronoiGroup.render()\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * SimCandidate has functionality for a candidate that is specific to a simulation.\r\n * SimCandidate has a candidate component.\r\n * The candidate component is a Candidate, for now.\r\n\r\n * @param {Candidate} candidate - a candidate component that SimCandidate builds upon.\r\n * @param {DraggableManager} dragm\r\n * @constructor\r\n */\r\nexport default function SimCandidate(candidate, dragm) {\r\n    const self = this\r\n    self.candidate = candidate\r\n\r\n    dragm.newSquareHandle(candidate, candidate.square)\r\n\r\n    self.renderForeground = () => {\r\n        self.candidate.renderForeground()\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n *\r\n * A simple list of simCandidateDistribution instances.\r\n * It really just passes along function calls to each member of the list.\r\n * It also checks if that member exists. Alternatively, it was deleted.\r\n * @constructor\r\n */\r\nexport default function SimCandidateList(sim) {\r\n    const self = this\r\n\r\n    const simCans = []\r\n\r\n    self.newCandidate = function (simCan) {\r\n        simCans.push(simCan)\r\n    }\r\n\r\n    self.getSimCandidates = () => simCans.filter((simCan) => simCan.candidate.exists)\r\n\r\n    self.getCandidates = () => {\r\n        const simCansEx = self.getSimCandidates()\r\n        return simCansEx.map((simCan) => simCan.candidate)\r\n    }\r\n\r\n    self.getCandidatesAll = () => simCans.map((simCan) => simCan.candidate)\r\n\r\n    self.setCandidateFractions = (fractions) => {\r\n        const cans = self.getCandidates()\r\n        cans.forEach((can, index) => {\r\n            const fraction = fractions[index]\r\n            can.setFraction(fraction)\r\n        })\r\n    }\r\n    self.setCandidateWins = (winsByCandidate) => {\r\n        const cans = self.getCandidates()\r\n        cans.forEach((can, index) => {\r\n            const win = winsByCandidate[index]\r\n            can.setWins(win)\r\n        })\r\n    }\r\n    self.updateXY = () => {\r\n        simCans.forEach((simCan) => simCan.candidate.updateXY())\r\n    }\r\n    self.renderForeground = () => {\r\n        if (sim.showGhosts) {\r\n            self.renderForegroundAll()\r\n        } else {\r\n            self.renderForegroundExisting()\r\n        }\r\n    }\r\n    self.renderForegroundExisting = () => {\r\n        const cans = self.getCandidates()\r\n        cans.forEach((can) => can.renderForeground())\r\n    }\r\n    self.renderForegroundAll = () => {\r\n        const cans = self.getCandidatesAll()\r\n        cans.forEach((can) => can.renderForeground())\r\n    }\r\n    self.numCandidates = () => simCans.length\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Made a super class, SimVoterList.\r\n * GeoVoters inherits from SimVoterList.\r\n * There is no OneVoters because there isn't any additional functionality that OneVoters would need.\r\n * SimVoterList is different from Voters because it is a list of simVoters.\r\n * @constructor\r\n */\r\nexport default function SimVoterList(sim) {\r\n    const self = this\r\n\r\n    const simVoters = []\r\n    self.simVoters = simVoters\r\n\r\n    self.newVoterGroup = function (voterGroup) {\r\n        simVoters.push(voterGroup)\r\n    }\r\n\r\n    self.getVoterGroups = () => simVoters.filter((v) => v.voter.exists).map((v) => v.voter)\r\n    self.getSimVoterGroups = () => simVoters.filter((v) => v.voter.exists)\r\n\r\n    self.update = (candidates) => {\r\n        simVoters.forEach((v) => { if (v.voter.exists) v.update(candidates) })\r\n    }\r\n    self.updateXY = () => {\r\n        simVoters.forEach((v) => v.voter.updateXY())\r\n    }\r\n\r\n    self.render = () => {\r\n        simVoters.forEach((v) => { if (v.voter.exists) v.render() })\r\n    }\r\n\r\n    self.renderForeground = () => {\r\n        if (sim.showGhosts) {\r\n            self.renderForegroundAll()\r\n        } else {\r\n            self.renderForegroundExisting()\r\n        }\r\n    }\r\n    self.renderForegroundExisting = () => {\r\n        simVoters.forEach((v) => { if (v.voter.exists) v.renderForeground() })\r\n    }\r\n    self.renderForegroundAll = () => {\r\n        simVoters.forEach((v) => { v.renderForeground() })\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Draggable Manager gives draggable behavior to objects on a canvas.\r\n * If anything changes, an item is added to the \"changes\" array.\r\n * Calling screen.setEventHandlers(dragm.eventHandlers) sets the eventhandlers on the screen.\r\n * @param {Screen} screen\r\n * @param {Changes} changes\r\n * @constructor\r\n */\r\nexport default function DraggableManager(screen, changes, sim) {\r\n    const self = this\r\n\r\n    // private variables\r\n    let drag = {}\r\n    const draggables = []\r\n\r\n    const canvas = screen.foreground\r\n\r\n    // add draggable objects\r\n    self.newSquareHandle = function (o, g) {\r\n        // set properties here so that we don't set properties on the actual object\r\n        const p = { isSquare: true }\r\n        draggables.push({ o, g, p })\r\n    }\r\n    self.newCircleHandle = function (o, g) { // object, graphic\r\n        const p = { isCircle: true }\r\n        draggables.push({ o, g, p })\r\n    }\r\n\r\n    // Mouse Listeners\r\n    // As a sidenote, it is interesting that we don't need to call model.update here\r\n    // because we are using a game loop that will call model.update.\r\n    const start = function (event) {\r\n        const mouse = {}\r\n        mouse.x = event.offsetX\r\n        mouse.y = event.offsetY\r\n        const extra = (event.isTouch) ? 10 : 0\r\n        const nd = draggables.length\r\n        for (let i = 0; i < nd; i++) {\r\n            const d = draggables[i]\r\n            if ((d.o.exists || sim.showGhosts) && hitTest(d, mouse, extra)) {\r\n                drag.iDragging = i\r\n                drag.isDragging = true\r\n                drag.offX = d.o.x - mouse.x\r\n                drag.offY = d.o.y - mouse.y\r\n                d.g.pickUp()\r\n                canvas.dataset.cursor = 'grabbing' // CSS data attribute\r\n                break // exit after picking one object\r\n            }\r\n        }\r\n        startClickDetect(mouse)\r\n    }\r\n\r\n    const end = function (e) {\r\n        // eslint-disable-next-line no-use-before-define\r\n        move(e)\r\n        endClickDetect()\r\n        if (drag.iDragging !== undefined) {\r\n            const dragging = draggables[drag.iDragging]\r\n            dragging.g.drop()\r\n        }\r\n        drag = {}\r\n    }\r\n\r\n    const move = function (event) {\r\n        const mouse = {}\r\n        mouse.x = event.offsetX\r\n        mouse.y = event.offsetY\r\n        if (drag.isDragging) { // because the mouse is moving\r\n            if (event.isTouch) {\r\n                event.preventDefault()\r\n                event.stopPropagation()\r\n            }\r\n            const dragging = draggables[drag.iDragging]\r\n            dragging.o.setXY({ x: mouse.x + drag.offX, y: mouse.y + drag.offY })\r\n            changes.add(['draggables'])\r\n        } else {\r\n            // see if we're hovering over something grabbable\r\n            // because we want the user to see if they can grab something\r\n            const nd = draggables.length\r\n            for (let i = 0; i < nd; i++) {\r\n                const d = draggables[i]\r\n                if ((sim.showGhosts || d.o.exists) && hitTest(d, mouse, 0)) {\r\n                    canvas.dataset.cursor = 'grab'\r\n                    return\r\n                }\r\n            }\r\n            canvas.dataset.cursor = '' // nothing to grab\r\n        }\r\n        moveClickDetect(mouse)\r\n    }\r\n\r\n    // Touch Listeners\r\n    const touchmove = (e) => {\r\n        const pass = passTouch(e)\r\n        move(pass)\r\n    }\r\n    const touchstart = (e) => {\r\n        const pass = passTouch(e)\r\n        start(pass)\r\n    }\r\n    const touchend = (e) => {\r\n        const pass = passTouch(e)\r\n        end(pass)\r\n    }\r\n\r\n    self.eventHandlers = {\r\n        start, move, end, touchmove, touchstart, touchend,\r\n    }\r\n\r\n    /**\r\n     * Make a touch event look like a mouse event, with a flag.\r\n     * @param {Event} e - The event from the DOM\r\n     * @returns {Event} - The same event it received, plus some added properties.\r\n     */\r\n    function passTouch(e) {\r\n        const rect = e.target.getBoundingClientRect()\r\n        const w = e.target.clientWidth\r\n        const h = e.target.clientHeight\r\n        let x = e.changedTouches[0].clientX - rect.left\r\n        let y = e.changedTouches[0].clientY - rect.top\r\n        if (x < 0) x = 0\r\n        if (y < 0) y = 0\r\n        if (x > w) x = w\r\n        if (y > h) y = h\r\n        const pass = { offsetX: x, offsetY: y, isTouch: true }\r\n        Object.assign(e, pass)\r\n        return e\r\n    }\r\n\r\n    /**\r\n     * Check whether m, e.g. a mouse, hits d, a draggable object.\r\n     * @param {Object} d - An entry in the draggables array.\r\n     * @param {Object} m - An object with properties x and y, e.g. a mouse.\r\n     * @param {Number} extra - Extra slack to catch touches outside of the hitbox.\r\n     * @returns {Boolean} - Whether m hits d.\r\n     */\r\n    function hitTest(d, m, extra) {\r\n        // Only drag an object if we're near it.\r\n        const x = d.o.x - m.x\r\n        const y = d.o.y - m.y\r\n        if (d.p.isCircle) {\r\n            const { r } = d.g\r\n            const hit = x * x + y * y < (r + extra) * (r + extra)\r\n            return hit\r\n        } if (d.p.isSquare) {\r\n            const { w, h } = d.g\r\n            const hit = Math.abs(x) < 0.5 * w + extra && Math.abs(y) < 0.5 * h + extra\r\n            return hit\r\n        }\r\n        return false\r\n    }\r\n\r\n    // click detection //\r\n\r\n    let couldBeClick\r\n    let startPos\r\n    function startClickDetect(mouse) {\r\n        couldBeClick = true\r\n        startPos = structuredClone(mouse)\r\n    }\r\n    function moveClickDetect(mouse) {\r\n        if (couldBeClick) {\r\n            const xDist = Math.abs(startPos.x - mouse.x)\r\n            const yDist = Math.abs(startPos.y - mouse.y)\r\n            if (xDist > 5) couldBeClick = false\r\n            if (yDist > 5) couldBeClick = false\r\n        }\r\n    }\r\n    function endClickDetect() {\r\n        if (couldBeClick) {\r\n            couldBeClick = false\r\n            if (drag.isDragging) { // because the mouse is moving\r\n                const dragging = draggables[drag.iDragging]\r\n                dragging.o.click()\r\n            }\r\n        }\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport DraggableManager from '../DraggableManager.js'\r\n\r\n/**\r\n * The super class for each sim. Provides some basic required functionality.\r\n * @param {Screen} screen\r\n * @param {Changes} changes\r\n * @constructor\r\n */\r\nexport default function SimBase(screen, changes, sim) {\r\n    const self = this\r\n    self.dragm = new DraggableManager(screen, changes, sim)\r\n    self.enter = () => {\r\n        screen.eventHandlers.set(self.dragm.eventHandlers)\r\n    }\r\n    self.exit = () => {}\r\n    self.update = () => {}\r\n    self.render = () => { }\r\n    self.renderForeground = () => { }\r\n}\r\n","/** @module */\r\n\r\nimport OneVoterCircle from '../../voters/OneVoterCircle.js'\r\nimport SimCandidate from '../../candidates/SimCandidate.js'\r\nimport SimCandidateList from '../../candidates/SimCandidateList.js'\r\nimport SimVoterList from '../../voters/SimVoterList.js'\r\nimport SimBase from './SimBase.js'\r\n\r\n/**\r\n * Simulate one election with\r\n *   candidates in defined positions, and\r\n *   voters in a distribution that will be summed over.\r\n * @param {Screen} screen\r\n * @param {Menu} menu\r\n * @param {Changes} changes\r\n * @param {OneElection} oneElection\r\n * @param {Sim} sim\r\n * @constructor\r\n */\r\nexport default function SimOne(screen, menu, changes, oneElection, sim) {\r\n    const self = this\r\n\r\n    SimBase.call(self, screen, changes, sim)\r\n\r\n    const oneVoters = new SimVoterList(sim)\r\n\r\n    const simCandidateList = new SimCandidateList(sim)\r\n\r\n    self.addSimCandidate = (candidate) => {\r\n        simCandidateList.newCandidate(new SimCandidate(candidate, self.dragm))\r\n    }\r\n\r\n    self.addSimVoterCircle = (voterCircle) => {\r\n        oneVoters.newVoterGroup(new OneVoterCircle(voterCircle, self.dragm, screen))\r\n    }\r\n\r\n    const superEnter = self.enter\r\n    self.enter = () => {\r\n        superEnter()\r\n        sim.simAddCandidates.canButton.show()\r\n        sim.election.setDimensions(2)\r\n        oneVoters.updateXY()\r\n        simCandidateList.updateXY()\r\n    }\r\n\r\n    self.exit = () => {\r\n        sim.simAddCandidates.canButton.hide()\r\n    }\r\n\r\n    self.update = () => {\r\n        if (changes.checkNone()) return\r\n        // clear changes, reset to []\r\n        changes.clear()\r\n        oneElection.updateTallies(oneVoters, simCandidateList)\r\n        oneVoters.update(simCandidateList)\r\n        screen.clear()\r\n        self.render()\r\n    }\r\n\r\n    self.render = () => {\r\n        oneVoters.render()\r\n    }\r\n    self.renderForeground = () => {\r\n        // sampleElections.renderForeground()\r\n        oneVoters.renderForeground()\r\n        simCandidateList.renderForeground()\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Use this to sample a random candidate from a collection of distributions of candidates.\r\n * Sample a point multiple times after the constructor call.\r\n * @param {CandidateDistribution[]} candidateDistributions\r\n * @constructor\r\n */\r\nexport default function CandidateDistributionSampler(candidateDistributions) {\r\n    const self = this\r\n    // cumulative distribution function\r\n    const cdf = getCDF(candidateDistributions)\r\n    self.samplePoint = function () {\r\n        return samplePoint1(candidateDistributions, cdf)\r\n    }\r\n}\r\n\r\nfunction samplePoint1(candidateDistributions, cdf) {\r\n    // pick a voter distribution\r\n    const iDist = randomDistribution(cdf)\r\n    const cd = candidateDistributions[iDist]\r\n    // sample circle\r\n    const point = randomInsideCircle(cd.x, cd.y, cd.w2 * 0.5)\r\n    return point\r\n}\r\n\r\nfunction randomDistribution(cdf) {\r\n    // sample from distribution\r\n    // pick a random number from 0 to 1\r\n    const random1 = Math.random()\r\n    const selectDistribution = cdf.findIndex((x) => x >= random1)\r\n    return selectDistribution\r\n}\r\n\r\nfunction getCDF(candidateDistributions) {\r\n    // find the size of the voter distributions\r\n    const areasProportion = candidateDistributions.map((cd) => cd.w2 ** 2)\r\n\r\n    const sumAreasProportion = areasProportion.reduce((p, c) => p + c)\r\n\r\n    // probability mass function\r\n    const pmf = areasProportion.map((p) => p / sumAreasProportion)\r\n\r\n    // https://stackoverflow.com/a/20477613\r\n    // [5, 10, 3, 2];\r\n    // [5, 15, 18, 20]\r\n    // cumulative distribution function\r\n    const cdf = []\r\n    pmf.reduce((p, c, i) => {\r\n        const a = p + c\r\n        cdf[i] = a\r\n        return a\r\n    }, 0)\r\n\r\n    return cdf\r\n}\r\n\r\nfunction randomInsideCircle(X, Y, R) {\r\n    // https://stackoverflow.com/a/50746409\r\n    const r = R * Math.sqrt(Math.random())\r\n    const theta = Math.random() * 2 * Math.PI\r\n\r\n    // convert to cartesian\r\n\r\n    const x = X + r * Math.cos(theta)\r\n    const y = Y + r * Math.sin(theta)\r\n    return { x, y }\r\n}\r\n","/** @module */\r\n\r\nimport CandidateDistributionSampler from '../election/CandidateDistributionSampler.js'\r\n\r\n/**\r\n * A simple list of simCandidateDistribution instances.\r\n * It really just passes along function calls to each member of the list.\r\n * It also checks if that member exists. Alternatively, it was deleted.\r\n * @constructor\r\n */\r\nexport default function SimCandidateDistributionList(sim) {\r\n    const self = this\r\n\r\n    const simCanDns = []\r\n\r\n    self.newCandidate = function (simCanDn) {\r\n        simCanDns.push(simCanDn)\r\n    }\r\n\r\n    // get sim entities that exist\r\n    self.getSimCandidateDistributions = () => {\r\n        const a = simCanDns.filter((simCanDn) => simCanDn.canDn.exists)\r\n        return a\r\n    }\r\n\r\n    // get the underlying entities of the above\r\n    self.getCandidateDistributions = () => {\r\n        const simCanDnsEx = self.getSimCandidateDistributions()\r\n        return simCanDnsEx.map((simCanDn) => simCanDn.canDn)\r\n    }\r\n    self.getCandidateDistributionsAll = () => simCanDns.map((simCanDn) => simCanDn.canDn)\r\n\r\n    self.startSampler = () => {\r\n        const canDns = self.getCandidateDistributions()\r\n        if (canDns.length === 0) return\r\n        self.sampler = new CandidateDistributionSampler(canDns)\r\n    }\r\n    self.updateXY = () => {\r\n        simCanDns.forEach((simCanDn) => simCanDn.canDn.updateXY())\r\n    }\r\n    self.render = () => {\r\n        const canDns = self.getCandidateDistributions()\r\n        canDns.forEach((canDn) => canDn.render())\r\n    }\r\n    self.renderForeground = () => {\r\n        if (sim.showGhosts) {\r\n            self.renderForegroundAll()\r\n        } else {\r\n            self.renderForegroundExisting()\r\n        }\r\n    }\r\n    self.renderForegroundExisting = () => {\r\n        const canDns = self.getCandidateDistributions()\r\n        canDns.forEach((canDn) => canDn.renderForeground())\r\n    }\r\n    self.renderForegroundAll = () => {\r\n        const cans = self.getCandidateDistributionsAll()\r\n        cans.forEach((can) => can.renderForeground())\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * SimCandidate has functionality for a canDn that is specific to a simulation.\r\n * SimCandidate has a canDn component.\r\n * The canDn component is a CandidateDistribution, for now.\r\n\r\n * @param {CandidateDistribution} canDn - a canDn component that SimCandidate builds upon.\r\n * @param {DraggableManager} dragm\r\n * @constructor\r\n */\r\nexport default function SimCandidateDistribution(canDn, dragm) {\r\n    const self = this\r\n    self.canDn = canDn\r\n\r\n    dragm.newSquareHandle(canDn, canDn.square)\r\n\r\n    self.renderForeground = () => {\r\n        self.canDn.renderForeground()\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport SimVoter from './SimVoter.js'\r\n\r\n/**\r\n * VoterCircle for simulations of many sampled candidates\r\n * VoterCircle class with Handle component to take care of dragging.\r\n * @param {VoterCircle} voterCircle - a voter component that SimVoter builds upon.\r\n * @param {DraggableManager} dragm\r\n * @param {screen} screen - draw to the screen\r\n * @constructor\r\n */\r\nexport default function SampleVoterCircle(voterCircle, dragm, screen) {\r\n    const self = this\r\n    SimVoter.call(self, voterCircle, dragm)\r\n\r\n    // Graphics component\r\n    self.render = function () {\r\n        const { ctx } = screen\r\n        // circle\r\n        ctx.beginPath()\r\n        // ctx.fillStyle = \"#eee\"\r\n        const { x, y, w2 } = self.voter\r\n        ctx.arc(x, y, w2 * 0.5, 0, 2 * Math.PI)\r\n        // ctx.fill()\r\n        ctx.stroke()\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport SimCandidateDistributionList from '../../candidates/SimCandidateDistributionList.js'\r\nimport SimCandidateDistribution from '../../candidates/SimCandidateDistribution.js'\r\nimport SampleVoterCircle from '../../voters/SampleVoterCircle.js'\r\nimport SimVoterList from '../../voters/SimVoterList.js'\r\nimport SimBase from './SimBase.js'\r\n\r\n/**\r\n * Simulate many sample elections with\r\n *   candidates in random positions within a distribution, and\r\n *   voters in a distribution that will be summed over.\r\n * @param {Screen} screen\r\n * @param {Menu} menu\r\n * @param {Changes} changes\r\n * @param {SimElection} sampleElections\r\n * @param {Sim} sim\r\n * @constructor\r\n */\r\nexport default function SimSample(screen, menu, changes, sampleElections, sim) {\r\n    const self = this\r\n\r\n    SimBase.call(self, screen, changes, sim)\r\n\r\n    const simCandidateList = new SimCandidateDistributionList(sim)\r\n\r\n    self.addSimCandidateDistribution = (canDn) => {\r\n        simCandidateList.newCandidate(new SimCandidateDistribution(canDn, self.dragm))\r\n    }\r\n\r\n    const sampleVoters = new SimVoterList(sim)\r\n\r\n    self.addSimVoterCircle = (voterCircle) => {\r\n        sampleVoters.newVoterGroup(new SampleVoterCircle(voterCircle, self.dragm, screen))\r\n    }\r\n\r\n    const superEnter = self.enter\r\n    self.enter = () => {\r\n        superEnter()\r\n        sim.simAddCandidateDns.canDnButton.show()\r\n        sim.election.setDimensions(2)\r\n        sampleVoters.updateXY()\r\n        simCandidateList.updateXY()\r\n    }\r\n\r\n    self.exit = () => {\r\n        sim.simAddCandidateDns.canDnButton.hide()\r\n    }\r\n\r\n    self.update = () => {\r\n        if (changes.checkNone()) {\r\n            const noChange = sampleElections.addSim(sampleVoters, simCandidateList)\r\n            if (!noChange) {\r\n                changes.clear()\r\n                // changed, so re-render\r\n                screen.clear()\r\n                self.render()\r\n            }\r\n        } else {\r\n            // clear changes, reset to []\r\n            changes.clear()\r\n            simCandidateList.startSampler()\r\n            sampleElections.startSim()\r\n            screen.clear()\r\n            self.render()\r\n        }\r\n    }\r\n\r\n    self.render = () => {\r\n        sampleElections.render()\r\n        sampleVoters.render()\r\n        simCandidateList.render()\r\n    }\r\n    self.renderForeground = () => {\r\n        sampleVoters.renderForeground()\r\n        simCandidateList.renderForeground()\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport SimVoter from './SimVoter.js'\r\n/**\r\n * A basis of voters, to be moved around according to noise.\r\n * Also, the user can move them around.\r\n * This is a Subclass of SimVoter.\r\n * @param {VoterCircle} voterCircle - a voter component that SimVoter builds upon.\r\n * @param {DraggableManager} dragm\r\n * @param {screen} screen - draw to the screen\r\n * @constructor\r\n */\r\nexport default function GeoVoterBasis(voterCircle, dragm, screen) {\r\n    const self = this\r\n    SimVoter.call(self, voterCircle, dragm)\r\n\r\n    // Graphics component\r\n    self.render = function () {\r\n        const { ctx } = screen\r\n        // circle\r\n        ctx.beginPath()\r\n        // ctx.fillStyle = \"#eee\"\r\n        ctx.arc(self.voter.x, self.voter.y, self.voter.w2 * 0.5, 0, 2 * Math.PI)\r\n        // ctx.fill()\r\n        ctx.stroke()\r\n    }\r\n    self.renderAt = function (newX, newY) {\r\n        const { ctx } = screen\r\n        // circle\r\n        ctx.beginPath()\r\n        // ctx.fillStyle = \"#eee\"\r\n        ctx.arc(newX, newY, self.voter.w2 * 0.5, 0, 2 * Math.PI)\r\n        // ctx.fill()\r\n        ctx.stroke()\r\n    }\r\n    self.renderCenterAt = function (newX, newY) {\r\n        const { ctx } = screen\r\n        // circle\r\n        ctx.beginPath()\r\n        ctx.fillStyle = '#555'\r\n        ctx.arc(newX, newY, 1, 0, 2 * Math.PI)\r\n        ctx.fill()\r\n        // ctx.stroke()\r\n    }\r\n}\r\n","/*\r\n * A fast javascript implementation of simplex noise by Jonas Wagner\r\n\r\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\r\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\r\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\r\nBetter rank ordering method by Stefan Gustavson in 2012.\r\n\r\n Copyright (c) 2021 Jonas Wagner\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights\r\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n copies of the Software, and to permit persons to whom the Software is\r\n furnished to do so, subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in all\r\n copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n SOFTWARE.\r\n */\r\n\r\nconst F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\r\nconst G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\r\nconst F3 = 1.0 / 3.0;\r\nconst G3 = 1.0 / 6.0;\r\nconst F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\r\nconst G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\r\n\r\nconst grad3 = new Float32Array([1, 1, 0,\r\n  -1, 1, 0,\r\n  1, -1, 0,\r\n\r\n  -1, -1, 0,\r\n  1, 0, 1,\r\n  -1, 0, 1,\r\n\r\n  1, 0, -1,\r\n  -1, 0, -1,\r\n  0, 1, 1,\r\n\r\n  0, -1, 1,\r\n  0, 1, -1,\r\n  0, -1, -1]);\r\n\r\nconst grad4 = new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\r\n  0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\r\n  1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\r\n  -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\r\n  1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\r\n  -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\r\n  1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\r\n  -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]);\r\n\r\n/**\r\n * A random() function, must return a numer in the interval [0,1), just like Math.random().\r\n */ \r\nexport type RandomFn = () => number;\r\n\r\n/** Deterministic simplex noise generator suitable for 2D, 3D and 4D spaces. */\r\nexport class SimplexNoise {\r\n  private p: Uint8Array;\r\n  private perm: Uint8Array;\r\n  private permMod12: Uint8Array;\r\n  /**\r\n   * Creates a new `SimplexNoise` instance.\r\n   * This involves some setup. You can save a few cpu cycles by reusing the same instance.\r\n   * @param randomOrSeed A random number generator or a seed (string|number).\r\n   * Defaults to Math.random (random irreproducible initialization).\r\n   */\r\n  constructor(randomOrSeed: RandomFn|string|number = Math.random) {\r\n    const random = typeof randomOrSeed == 'function' ? randomOrSeed : alea(randomOrSeed);\r\n    this.p = buildPermutationTable(random);\r\n    this.perm = new Uint8Array(512);\r\n    this.permMod12 = new Uint8Array(512);\r\n    for (let i = 0; i < 512; i++) {\r\n      this.perm[i] = this.p[i & 255];\r\n      this.permMod12[i] = this.perm[i] % 12;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Samples the noise field in 2 dimensions\r\n   * @param x\r\n   * @param y \r\n   * @returns a number in the interval [-1, 1]\r\n   */\r\n  noise2D(x: number, y: number): number {\r\n    const permMod12 = this.permMod12;\r\n    const perm = this.perm;\r\n    let n0 = 0; // Noise contributions from the three corners\r\n    let n1 = 0;\r\n    let n2 = 0;\r\n    // Skew the input space to determine which simplex cell we're in\r\n    const s = (x + y) * F2; // Hairy factor for 2D\r\n    const i = Math.floor(x + s);\r\n    const j = Math.floor(y + s);\r\n    const t = (i + j) * G2;\r\n    const X0 = i - t; // Unskew the cell origin back to (x,y) space\r\n    const Y0 = j - t;\r\n    const x0 = x - X0; // The x,y distances from the cell origin\r\n    const y0 = y - Y0;\r\n    // For the 2D case, the simplex shape is an equilateral triangle.\r\n    // Determine which simplex we are in.\r\n    let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\r\n    if (x0 > y0) {\r\n      i1 = 1;\r\n      j1 = 0;\r\n    } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\r\n    else {\r\n      i1 = 0;\r\n      j1 = 1;\r\n    } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\r\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\r\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\r\n    // c = (3-sqrt(3))/6\r\n    const x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\r\n    const y1 = y0 - j1 + G2;\r\n    const x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\r\n    const y2 = y0 - 1.0 + 2.0 * G2;\r\n    // Work out the hashed gradient indices of the three simplex corners\r\n    const ii = i & 255;\r\n    const jj = j & 255;\r\n    // Calculate the contribution from the three corners\r\n    let t0 = 0.5 - x0 * x0 - y0 * y0;\r\n    if (t0 >= 0) {\r\n      const gi0 = permMod12[ii + perm[jj]] * 3;\r\n      t0 *= t0;\r\n      n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\r\n    }\r\n    let t1 = 0.5 - x1 * x1 - y1 * y1;\r\n    if (t1 >= 0) {\r\n      const gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\r\n      t1 *= t1;\r\n      n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\r\n    }\r\n    let t2 = 0.5 - x2 * x2 - y2 * y2;\r\n    if (t2 >= 0) {\r\n      const gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\r\n      t2 *= t2;\r\n      n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\r\n    }\r\n    // Add contributions from each corner to get the final noise value.\r\n    // The result is scaled to return values in the interval [-1,1].\r\n    return 70.0 * (n0 + n1 + n2);\r\n  }\r\n\r\n  /**\r\n   * Samples the noise field in 3 dimensions\r\n   * @param x \r\n   * @param y \r\n   * @param z \r\n   * @returns a number in the interval [-1, 1]\r\n   */\r\n  noise3D(x:number, y:number, z:number): number {\r\n    const permMod12 = this.permMod12;\r\n    const perm = this.perm;\r\n    let n0, n1, n2, n3; // Noise contributions from the four corners\r\n    // Skew the input space to determine which simplex cell we're in\r\n    const s = (x + y + z) * F3; // Very nice and simple skew factor for 3D\r\n    const i = Math.floor(x + s);\r\n    const j = Math.floor(y + s);\r\n    const k = Math.floor(z + s);\r\n    const t = (i + j + k) * G3;\r\n    const X0 = i - t; // Unskew the cell origin back to (x,y,z) space\r\n    const Y0 = j - t;\r\n    const Z0 = k - t;\r\n    const x0 = x - X0; // The x,y,z distances from the cell origin\r\n    const y0 = y - Y0;\r\n    const z0 = z - Z0;\r\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\r\n    // Determine which simplex we are in.\r\n    let i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\r\n    let i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\r\n    if (x0 >= y0) {\r\n      if (y0 >= z0) {\r\n        i1 = 1;\r\n        j1 = 0;\r\n        k1 = 0;\r\n        i2 = 1;\r\n        j2 = 1;\r\n        k2 = 0;\r\n      } // X Y Z order\r\n      else if (x0 >= z0) {\r\n        i1 = 1;\r\n        j1 = 0;\r\n        k1 = 0;\r\n        i2 = 1;\r\n        j2 = 0;\r\n        k2 = 1;\r\n      } // X Z Y order\r\n      else {\r\n        i1 = 0;\r\n        j1 = 0;\r\n        k1 = 1;\r\n        i2 = 1;\r\n        j2 = 0;\r\n        k2 = 1;\r\n      } // Z X Y order\r\n    }\r\n    else { // x0<y0\r\n      if (y0 < z0) {\r\n        i1 = 0;\r\n        j1 = 0;\r\n        k1 = 1;\r\n        i2 = 0;\r\n        j2 = 1;\r\n        k2 = 1;\r\n      } // Z Y X order\r\n      else if (x0 < z0) {\r\n        i1 = 0;\r\n        j1 = 1;\r\n        k1 = 0;\r\n        i2 = 0;\r\n        j2 = 1;\r\n        k2 = 1;\r\n      } // Y Z X order\r\n      else {\r\n        i1 = 0;\r\n        j1 = 1;\r\n        k1 = 0;\r\n        i2 = 1;\r\n        j2 = 1;\r\n        k2 = 0;\r\n      } // Y X Z order\r\n    }\r\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\r\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\r\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\r\n    // c = 1/6.\r\n    const x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\r\n    const y1 = y0 - j1 + G3;\r\n    const z1 = z0 - k1 + G3;\r\n    const x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\r\n    const y2 = y0 - j2 + 2.0 * G3;\r\n    const z2 = z0 - k2 + 2.0 * G3;\r\n    const x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\r\n    const y3 = y0 - 1.0 + 3.0 * G3;\r\n    const z3 = z0 - 1.0 + 3.0 * G3;\r\n    // Work out the hashed gradient indices of the four simplex corners\r\n    const ii = i & 255;\r\n    const jj = j & 255;\r\n    const kk = k & 255;\r\n    // Calculate the contribution from the four corners\r\n    let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\r\n    if (t0 < 0) n0 = 0.0;\r\n    else {\r\n      const gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\r\n      t0 *= t0;\r\n      n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\r\n    }\r\n    let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\r\n    if (t1 < 0) n1 = 0.0;\r\n    else {\r\n      const gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\r\n      t1 *= t1;\r\n      n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\r\n    }\r\n    let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\r\n    if (t2 < 0) n2 = 0.0;\r\n    else {\r\n      const gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\r\n      t2 *= t2;\r\n      n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\r\n    }\r\n    let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\r\n    if (t3 < 0) n3 = 0.0;\r\n    else {\r\n      const gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\r\n      t3 *= t3;\r\n      n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\r\n    }\r\n    // Add contributions from each corner to get the final noise value.\r\n    // The result is scaled to stay just inside [-1,1]\r\n    return 32.0 * (n0 + n1 + n2 + n3);\r\n  }\r\n\r\n  /**\r\n   * Samples the noise field in 4 dimensions\r\n   * @param x \r\n   * @param y \r\n   * @param z \r\n   * @returns a number in the interval [-1, 1]\r\n   */\r\n  noise4D(x:number, y:number, z:number, w:number): number {\r\n    const perm = this.perm;\r\n\r\n    let n0, n1, n2, n3, n4; // Noise contributions from the five corners\r\n    // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\r\n    const s = (x + y + z + w) * F4; // Factor for 4D skewing\r\n    const i = Math.floor(x + s);\r\n    const j = Math.floor(y + s);\r\n    const k = Math.floor(z + s);\r\n    const l = Math.floor(w + s);\r\n    const t = (i + j + k + l) * G4; // Factor for 4D unskewing\r\n    const X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\r\n    const Y0 = j - t;\r\n    const Z0 = k - t;\r\n    const W0 = l - t;\r\n    const x0 = x - X0; // The x,y,z,w distances from the cell origin\r\n    const y0 = y - Y0;\r\n    const z0 = z - Z0;\r\n    const w0 = w - W0;\r\n    // For the 4D case, the simplex is a 4D shape I won't even try to describe.\r\n    // To find out which of the 24 possible simplices we're in, we need to\r\n    // determine the magnitude ordering of x0, y0, z0 and w0.\r\n    // Six pair-wise comparisons are performed between each possible pair\r\n    // of the four coordinates, and the results are used to rank the numbers.\r\n    let rankx = 0;\r\n    let ranky = 0;\r\n    let rankz = 0;\r\n    let rankw = 0;\r\n    if (x0 > y0) rankx++;\r\n    else ranky++;\r\n    if (x0 > z0) rankx++;\r\n    else rankz++;\r\n    if (x0 > w0) rankx++;\r\n    else rankw++;\r\n    if (y0 > z0) ranky++;\r\n    else rankz++;\r\n    if (y0 > w0) ranky++;\r\n    else rankw++;\r\n    if (z0 > w0) rankz++;\r\n    else rankw++;\r\n    // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\r\n    // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\r\n    // impossible. Only the 24 indices which have non-zero entries make any sense.\r\n    // We use a thresholding to set the coordinates in turn from the largest magnitude.\r\n    // Rank 3 denotes the largest coordinate.\r\n    // Rank 2 denotes the second largest coordinate.\r\n    // Rank 1 denotes the second smallest coordinate.\r\n\r\n    // The integer offsets for the second simplex corner\r\n    const i1 = rankx >= 3 ? 1 : 0;\r\n    const j1 = ranky >= 3 ? 1 : 0;\r\n    const k1 = rankz >= 3 ? 1 : 0;\r\n    const l1 = rankw >= 3 ? 1 : 0;\r\n    // The integer offsets for the third simplex corner\r\n    const i2 = rankx >= 2 ? 1 : 0;\r\n    const j2 = ranky >= 2 ? 1 : 0;\r\n    const k2 = rankz >= 2 ? 1 : 0;\r\n    const l2 = rankw >= 2 ? 1 : 0;\r\n\r\n    // The integer offsets for the fourth simplex corner\r\n    const i3 = rankx >= 1 ? 1 : 0;\r\n    const j3 = ranky >= 1 ? 1 : 0;\r\n    const k3 = rankz >= 1 ? 1 : 0;\r\n    const l3 = rankw >= 1 ? 1 : 0;\r\n    // The fifth corner has all coordinate offsets = 1, so no need to compute that.\r\n    const x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\r\n    const y1 = y0 - j1 + G4;\r\n    const z1 = z0 - k1 + G4;\r\n    const w1 = w0 - l1 + G4;\r\n    const x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\r\n    const y2 = y0 - j2 + 2.0 * G4;\r\n    const z2 = z0 - k2 + 2.0 * G4;\r\n    const w2 = w0 - l2 + 2.0 * G4;\r\n    const x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\r\n    const y3 = y0 - j3 + 3.0 * G4;\r\n    const z3 = z0 - k3 + 3.0 * G4;\r\n    const w3 = w0 - l3 + 3.0 * G4;\r\n    const x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\r\n    const y4 = y0 - 1.0 + 4.0 * G4;\r\n    const z4 = z0 - 1.0 + 4.0 * G4;\r\n    const w4 = w0 - 1.0 + 4.0 * G4;\r\n    // Work out the hashed gradient indices of the five simplex corners\r\n    const ii = i & 255;\r\n    const jj = j & 255;\r\n    const kk = k & 255;\r\n    const ll = l & 255;\r\n    // Calculate the contribution from the five corners\r\n    let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\r\n    if (t0 < 0) n0 = 0.0;\r\n    else {\r\n      const gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\r\n      t0 *= t0;\r\n      n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\r\n    }\r\n    let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\r\n    if (t1 < 0) n1 = 0.0;\r\n    else {\r\n      const gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\r\n      t1 *= t1;\r\n      n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\r\n    }\r\n    let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\r\n    if (t2 < 0) n2 = 0.0;\r\n    else {\r\n      const gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\r\n      t2 *= t2;\r\n      n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\r\n    }\r\n    let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\r\n    if (t3 < 0) n3 = 0.0;\r\n    else {\r\n      const gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\r\n      t3 *= t3;\r\n      n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\r\n    }\r\n    let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\r\n    if (t4 < 0) n4 = 0.0;\r\n    else {\r\n      const gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\r\n      t4 *= t4;\r\n      n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\r\n    }\r\n    // Sum up and scale the result to cover the range [-1,1]\r\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\r\n  }\r\n}\r\nexport default SimplexNoise;\r\n\r\n/**\r\n * Builds a random permutation table.\r\n * This is exported only for (internal) testing purposes.\r\n * Do not rely on this export.\r\n * @private\r\n */\r\nexport function buildPermutationTable(random: RandomFn): Uint8Array {\r\n  const p = new Uint8Array(256);\r\n  for (let i = 0; i < 256; i++) {\r\n    p[i] = i;\r\n  }\r\n  for (let i = 0; i < 255; i++) {\r\n    const r = i + ~~(random() * (256 - i));\r\n    const aux = p[i];\r\n    p[i] = p[r];\r\n    p[r] = aux;\r\n  }\r\n  return p;\r\n}\r\n\r\n/*\r\nThe ALEA PRNG and masher code used by simplex-noise.js\r\nis based on code by Johannes Baagøe, modified by Jonas Wagner.\r\nSee alea.md for the full license.\r\n*/\r\nfunction alea(seed: string|number): RandomFn {\r\n  let s0 = 0;\r\n  let s1 = 0;\r\n  let s2 = 0;\r\n  let c = 1;\r\n\r\n  const mash = masher();\r\n  s0 = mash(' ');\r\n  s1 = mash(' ');\r\n  s2 = mash(' ');\r\n\r\n  s0 -= mash(seed);\r\n  if (s0 < 0) {\r\n    s0 += 1;\r\n  }\r\n  s1 -= mash(seed);\r\n  if (s1 < 0) {\r\n    s1 += 1;\r\n  }\r\n  s2 -= mash(seed);\r\n  if (s2 < 0) {\r\n    s2 += 1;\r\n  }\r\n\r\n  return function() {\r\n    const t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\r\n    s0 = s1;\r\n    s1 = s2;\r\n    return s2 = t - (c = t | 0);\r\n  };\r\n}\r\n\r\nfunction masher() {\r\n  let n = 0xefc8249d;\r\n  return function(data: number|string) {\r\n    data = data.toString();\r\n    for (let i = 0; i < data.length; i++) {\r\n      n += data.charCodeAt(i);\r\n      let h = 0.02519603282416938 * n;\r\n      n = h >>> 0;\r\n      h -= n;\r\n      h *= n;\r\n      n = h >>> 0;\r\n      h -= n;\r\n      n += h * 0x100000000; // 2^32\r\n    }\r\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\r\n  };\r\n}","/** @module */\r\n\r\n// import SimplexNoise from 'https://cdn.skypack.dev/simplex-noise@3.0.1'\r\nimport { SimplexNoise } from '../../lib/simplex-noise/dist/esm/simplex-noise.js'\r\n// https://runkit-packages.com/14.x.x/1644541101130/simplex-noise/#simplex-noisejs\r\n// https://npm.runkit.com/simplex-noise\r\n// https://www.npmjs.com/package/simplex-noise\r\n\r\n/**\r\n * Generate a noisy 2D map with two noise sources per pixel.\r\n * @param {Number} nx - Number of x pixels\r\n * @param {Number} ny - Number of y pixels\r\n * @constructor\r\n */\r\nexport default function GeoNoise(nx, ny) {\r\n    const self = this\r\n    // Simplex Noise Parameters\r\n    self.sn = []\r\n    const noiseWidth = 0.5\r\n    const noiseHeight = 0.5\r\n\r\n    // Geographic Noise Parameters - amplitude of noise\r\n    const xAmp = 100\r\n    const yAmp = 100\r\n\r\n    /** Generate simplex noise. */\r\n    self.genNoise = () => {\r\n        self.sn = makeGeoNoise(nx, ny, noiseWidth, noiseHeight, xAmp, yAmp)\r\n    }\r\n}\r\n\r\n/**\r\n * Generate a noisy 2D map with two noise sources per pixel.\r\n * @param {Number} nx - Number of x pixels\r\n * @param {Number} ny - Number of y pixels\r\n * @param {Number} noiseWidth -  A characteristic size of blobs, in pixels\r\n * @param {Number} noiseHeight - A characteristic size of blobs, in pixels\r\n * @returns {Number[][][]} - Noise in pixel displacement, indexed by row, col, dimension\r\n */\r\nexport function makeGeoNoise(nx, ny, noiseWidth, noiseHeight, xAmp, yAmp) {\r\n    const simplexX = new SimplexNoise('s')\r\n    const simplexY = new SimplexNoise('seed')\r\n    const map = zeros(nx, ny)\r\n    let sumX = 0\r\n    let sumY = 0\r\n    range(nx).forEach((ix) => {\r\n        range(ny).forEach((iy) => {\r\n            // fractional coordinate divided by period of waves\r\n            const x = (ix / nx) * (1 / noiseWidth)\r\n            const y = (iy / ny) * (1 / noiseHeight)\r\n            const noiseX = simplexX.noise2D(x, y)\r\n            const noiseY = simplexY.noise2D(x, y)\r\n            map[ix][iy][0] = (noiseX - 0.5)\r\n            map[ix][iy][1] = (noiseY - 0.5)\r\n            sumX += noiseX\r\n            sumY += noiseY\r\n        })\r\n    })\r\n    // normalize\r\n    const meanX = sumX / (nx * ny) - 0.5\r\n    const meanY = sumY / (nx * ny) - 0.5\r\n    map.forEach((a) => { // array\r\n        a.forEach((p) => { // pair\r\n            // eslint-disable-next-line no-param-reassign\r\n            p[0] = (p[0] - meanX) * xAmp\r\n            // eslint-disable-next-line no-param-reassign\r\n            p[1] = (p[1] - meanY) * yAmp\r\n        })\r\n    })\r\n    return map\r\n}\r\n\r\nfunction zeros(nx, ny) {\r\n    const empty = Array(nx).fill().map(() => Array(ny).fill().map(() => Array(2).fill(0)))\r\n    return empty\r\n}\r\n\r\nfunction range(n) {\r\n    return [...Array(n).keys()]\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Draws an image of noise, or anything really.\r\n * @param {Number} nx - Width in pixels\r\n * @param {Number} ny - Height in pixels\r\n * @param {Screen} screen - Draw here.\r\n * @constructor\r\n */\r\nexport default function NoiseImage(nx, ny, screen) {\r\n    const self = this\r\n\r\n    /*\r\n        Makes your pixel manip on an off-screen canvas\r\n        Returns the off-screen canvas\r\n        */\r\n\r\n    const canvas = document.createElement('canvas')\r\n    canvas.width = nx\r\n    canvas.height = ny\r\n    const offCtx = canvas.getContext('2d')\r\n    const imageData = offCtx.createImageData(nx, ny)\r\n\r\n    self.load = (sn) => {\r\n        const { data } = imageData\r\n\r\n        for (let x = 0; x < nx; x++) {\r\n            for (let y = 0; y < ny; y++) {\r\n                const r = sn[x][y][0] + 0.5\r\n                const g = sn[x][y][1] + 0.5\r\n                data[(x + y * nx) * 4 + 0] = r * 255\r\n                data[(x + y * nx) * 4 + 1] = (r + g) * 200\r\n                data[(x + y * nx) * 4 + 2] = g * 200\r\n                data[(x + y * nx) * 4 + 3] = 255\r\n            }\r\n        }\r\n\r\n        offCtx.putImageData(imageData, 0, 0)\r\n    }\r\n\r\n    self.loadColors = (colors) => {\r\n        const { data } = imageData\r\n\r\n        for (let x = 0; x < nx; x++) {\r\n            for (let y = 0; y < ny; y++) {\r\n                const color = colors[x][y]\r\n                const [r, g, b] = color\r\n                data[(x + y * nx) * 4 + 0] = r\r\n                data[(x + y * nx) * 4 + 1] = g\r\n                data[(x + y * nx) * 4 + 2] = b\r\n                data[(x + y * nx) * 4 + 3] = 255\r\n            }\r\n        }\r\n\r\n        offCtx.putImageData(imageData, 0, 0)\r\n    }\r\n\r\n    self.render = (renderWidth, renderHeight) => {\r\n        const { gctx } = screen\r\n        gctx.save()\r\n        gctx.imageSmoothingEnabled = false\r\n        gctx.drawImage(canvas, 0, 0, renderWidth, renderHeight)\r\n        gctx.restore()\r\n    }\r\n    // Draw simplex noise\r\n    // https://codepen.io/jwagner/pen/BNmpdm/?editors=0010\r\n    // Scale image\r\n    // https://stackoverflow.com/a/48858621\r\n}\r\n","export default function(polygon) {\r\n  var i = -1,\r\n      n = polygon.length,\r\n      a,\r\n      b = polygon[n - 1],\r\n      area = 0;\r\n\r\n  while (++i < n) {\r\n    a = b;\r\n    b = polygon[i];\r\n    area += a[1] * b[0] - a[0] * b[1];\r\n  }\r\n\r\n  return area / 2;\r\n}\r\n","export default function(polygon) {\r\n  var i = -1,\r\n      n = polygon.length,\r\n      x = 0,\r\n      y = 0,\r\n      a,\r\n      b = polygon[n - 1],\r\n      c,\r\n      k = 0;\r\n\r\n  while (++i < n) {\r\n    a = b;\r\n    b = polygon[i];\r\n    k += c = a[0] * b[1] - b[0] * a[1];\r\n    x += (a[0] + b[0]) * c;\r\n    y += (a[1] + b[1]) * c;\r\n  }\r\n\r\n  return k *= 3, [x / k, y / k];\r\n}\r\n","/** @module */\r\n\r\n// import { polygonCentroid } from 'https://cdn.skypack.dev/d3-polygon@3'\r\nimport { polygonCentroid } from '../../lib/d3-polygon/src/index.js'\r\n// import * as d3 from 'https://cdn.skypack.dev/d3@7'\r\nimport { Delaunay } from '../../lib/d3-delaunay.esm.js'\r\n/**\r\n * Calculate a voronoi diagram with some degree of equal capacity between voronoi cells.\r\n * Uses Lloyd's method.\r\n * @param {Number} w - number of discrete points wide of space to divide\r\n * @param {Number} h - number of points high\r\n * @param {Number} n - number of voronoi cells\r\n * @param {Number} tolFraction - fractional tolerance for relaxation. Maybe .01 is good.\r\n * @returns Centroids (list of points) and voronoi d3 object\r\n */\r\nexport default function lloydVoronoi(w, h, n, tolFraction) {\r\n    let centroids = randomPoints(w, h, n)\r\n    let converged = false\r\n    let voronoi\r\n    let polygons\r\n    const tol = tolFraction * Math.min(w, h)\r\n    for (let i = 0; i < 1000; i++) {\r\n        [centroids, converged, voronoi, polygons] = relax(centroids, w, h, tol)\r\n        if (converged) return centroids\r\n    }\r\n    return [centroids, voronoi, polygons]\r\n}\r\n\r\n// https://bl.ocks.org/veltman/3d1fb70e6993d4eb2eff7112c9e7bcf4\r\n\r\nfunction randomPoints(w, h, n) {\r\n    return Array(n).fill().map(() => [Math.random() * w, Math.random() * h])\r\n}\r\n\r\nfunction relax(points, w, h, tol) {\r\n    const delaunay = Delaunay.from(points)\r\n    const voronoi = delaunay.voronoi([0, 0, w, h])\r\n    const polygons = range(points.length).map((i) => voronoi.cellPolygon(i))\r\n    const centroids = polygons.map(polygonCentroid)\r\n    const converged = points.every((point, i) => distance2(point, centroids[i]) < tol)\r\n    return [centroids, converged, voronoi, polygons]\r\n}\r\n\r\n// function relax3(points, w, h) {\r\n//     const polygons = voronoi(points).polygons()\r\n//     polygons.map(d3.polygonCentroid)\r\n//     const converged = points.every((point, i) => distance2(point, centroids[i]) < 1)\r\n//     return { centroids, converged }\r\n// }\r\n\r\n// cellPolygons.prototype.map = function* (mapper, thisArg) {\r\n//     for (const val of this) {\r\n//         yield mapper.call(thisArg, val)\r\n//     }\r\n// }\r\n\r\nfunction distance2(x, y) {\r\n    return x ** 2 + y ** 2\r\n}\r\n\r\nfunction range(n) {\r\n    return [...Array(n).keys()]\r\n}\r\n","/**\r\n * Graphics Utilities\r\n * Just a few helpful functions that are self-contained and don't need much context.\r\n * @module */\r\n\r\nexport function drawStrokedColor(text, x, y, textsize, lw, color, alpha, ctx, textAlign) {\r\n    ctx.save()\r\n    ctx.globalAlpha = alpha\r\n    ctx.textAlign = textAlign || 'center'\r\n    ctx.font = `${textsize}px Sans-serif`\r\n    ctx.lineWidth = lw\r\n    ctx.fillStyle = color\r\n    ctx.fillText(text, x, y)\r\n    ctx.restore()\r\n}\r\n\r\nexport function textPercent(f) {\r\n    const a = (100 * f).toFixed(0)\r\n    return a\r\n}\r\n","/**\r\n * Clips a polygon with another polygon to return a polygon.\r\n * Polygons must be counter-clockwise.\r\n * https://observablehq.com/@d3/polygonclip@1237\r\n * @param {Number[][]} clip - polygon\r\n * @param {Number[][]} subject - polygon, gets mutated\r\n * @returns {Number[][]} - polygon\r\n */\r\nexport default function polygonClip(clip, subject) {\r\n    const closed = polygonClosed(subject)\r\n    const n = clip.length - polygonClosed(clip)\r\n    subject = subject.slice() // copy before mutate\r\n    for (let i = 0, a = clip[n - 1], b, c, d; i < n; ++i) {\r\n        const input = subject.slice()\r\n        const m = input.length - closed\r\n        subject.length = 0\r\n        b = clip[i]\r\n        c = input[m - 1]\r\n        for (let j = 0; j < m; ++j) {\r\n            d = input[j]\r\n            if (lineOrient(d, a, b)) {\r\n                if (!lineOrient(c, a, b)) {\r\n                    subject.push(lineIntersect(c, d, a, b))\r\n                }\r\n                subject.push(d)\r\n            } else if (lineOrient(c, a, b)) {\r\n                subject.push(lineIntersect(c, d, a, b))\r\n            }\r\n            c = d\r\n        }\r\n        if (closed) subject.push(subject[0])\r\n        a = b\r\n    }\r\n    return subject.length ? subject : null\r\n}\r\nfunction lineOrient([px, py], [ax, ay], [bx, by]) {\r\n    return (bx - ax) * (py - ay) < (by - ay) * (px - ax)\r\n}\r\nfunction lineIntersect([ax, ay], [bx, by], [cx, cy], [dx, dy]) {\r\n    const bax = bx - ax; const bay = by - ay; const dcx = dx - cx; const\r\n        dcy = dy - cy\r\n    const k = (bax * (cy - ay) - bay * (cx - ax)) / (bay * dcx - bax * dcy)\r\n    return [cx + k * dcx, cy + k * dcy]\r\n}\r\nfunction polygonClosed(points) {\r\n    const [ax, ay] = points[0]; const\r\n        [bx, by] = points[points.length - 1]\r\n    return ax === bx && ay === by\r\n}\r\nfunction polygonConvex(points) {\r\n    const n = points.length\r\n    const [rx, ry] = points[n - 2]\r\n    let [qx, qy] = points[n - 1]\r\n    let vx = rx - qx; let\r\n        vy = ry - qy\r\n    for (let i = 0; i < n; ++i) {\r\n        const [px, py] = points[i]\r\n        const wx = qx - px; const\r\n            wy = qy - py\r\n        if (wx * vy < wy * vx) return false\r\n        if (wx || wy) vx = wx, vy = wy\r\n        qx = px, qy = py\r\n    }\r\n    return true\r\n}\r\n\r\nexport function testClip() {\r\n    const subject = [\r\n        [79, 200], [266, 100],\r\n        [452, 200],\r\n        [359, 450],\r\n        [172, 420]]\r\n    const clip = [[210, 90], [110, 400], [420, 400], [490, 250]]\r\n\r\n    return polygonClip(clip, subject)\r\n}","/** @module */\r\n\r\n// import _ from 'https://cdn.skypack.dev/lodash@4.17.21'\r\nimport polygonClip from '../../lib/polygonClip.js'\r\nimport { range, jcopy } from '../utilities/jsHelpers.js'\r\nimport { polygonArea } from '../../lib/d3-polygon/src/index.js'\r\n\r\n/**\r\n * What fraction of each voterGroup lives in each district?\r\n * Return an array indexed by district.\r\n * Each element contains an array of pairs.\r\n * The first of the pair is a voterGroup pair of coordinates.\r\n * The second of the pair is the fraction of the voterGroup within that district.\r\n * @param {DistrictMaker} districtMaker\r\n * @returns {Number[][][]} - an array of districts,\r\n * each with a list of census tract properties [x,y,overlap]\r\n */\r\nexport default function geoCensus(districtMaker) {\r\n    const {\r\n        nd, nx, ny, polygons,\r\n    } = districtMaker\r\n\r\n    const census = Array(nd).fill().map(() => [])\r\n\r\n    for (let gx = 0; gx < nx; gx++) { // x-coordinate of group\r\n        for (let gy = 0; gy < ny; gy++) { // y-coordinate of group\r\n            const subject = makeSquare(gx, gy)\r\n            range(nd).forEach((iDistrict) => {\r\n                const poly = polygons[iDistrict]\r\n                const clip = jcopy(poly).reverse()\r\n                const overlap = polygonClip(clip, subject)\r\n\r\n                // store data more sparsely because it is more efficient\r\n                // loop through all districts\r\n                if (overlap !== null) {\r\n                    census[iDistrict].push([gx, gy, polygonArea(overlap)])\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return census\r\n}\r\n\r\nfunction makeSquare(x, y) {\r\n    // the points are in counterclockwise order\r\n    // assuming a coordinate system where y points down and x points right.\r\n    // top left\r\n    // bottom left\r\n    // bottom right\r\n    // top right\r\n    const subject = [\r\n        [x, y],\r\n        [x, y + 1],\r\n        [x + 1, y + 1],\r\n        [x + 1, y],\r\n    ]\r\n    return subject\r\n}\r\n","/** @module */\r\n\r\nimport lloydVoronoi from './lloydVoronoi.js'\r\nimport { polygonArea } from '../../lib/d3-polygon/src/index.js'\r\nimport { drawStrokedColor } from '../utilities/graphicsUtilities.js'\r\nimport geoCensus from './geoCensus.js'\r\n/**\r\n * Makes and draws district boundaries.\r\n * Right now, just for a uniform square geography.\r\n * @param {Screen} screen\r\n * @constructor\r\n */\r\nexport default function DistrictMaker(screen) {\r\n    const self = this\r\n\r\n    /**\r\n     * Define district lines and count demographics.\r\n     * @param {Number} nx - number of voter cells in x\r\n     * @param {Number} ny - number of voter cells in y\r\n     * @param {Number} nd - number of districts.\r\n     */\r\n    self.make = (nx, ny, nd) => {\r\n        [self.centroids, self.voronoi, self.polygons] = lloydVoronoi(nx, ny, nd, 0.01)\r\n        self.nx = nx\r\n        self.ny = ny\r\n        self.nd = nd\r\n        self.polygonAreas = self.polygons.map(polygonArea).map((x) => -x)\r\n        self.totalArea = nx * ny\r\n\r\n        self.census = geoCensus(self)\r\n    }\r\n\r\n    /**\r\n     * Draw Voronoi cell boundaries.\r\n     * @param {Number} geoMapWidth - width of image\r\n     * @param {Number} geoMapHeight - height of image\r\n     */\r\n    self.renderVoronoi = (geoMapWidth, geoMapHeight) => {\r\n        self.renderVoronoiGeneral(0, 0, geoMapWidth, geoMapHeight, null, renderAreaText)\r\n    }\r\n\r\n    self.renderVoronoiColors = (x, y, geoMapWidth, geoMapHeight, colors) => {\r\n        self.renderVoronoiGeneral(x, y, geoMapWidth, geoMapHeight, colors, undefined)\r\n    }\r\n    /**\r\n     * Draw a Voronoi Diagram\r\n     * @param {Number} x - translate image\r\n     * @param {Number} y - translate image\r\n     * @param {Number} geoMapWidth - width of image\r\n     * @param {Number} geoMapHeight - height of image\r\n     * @param {string[]} colors - an option, say \"null\" if do not want colors\r\n     * @param {Function} textFunction - an option, defaults to undefined\r\n     */\r\n    self.renderVoronoiGeneral = (x, y, geoMapWidth, geoMapHeight, colors, textFunction) => {\r\n        const { gctx } = screen\r\n        const {\r\n            voronoi, nx, ny, nd,\r\n        } = self\r\n        gctx.save()\r\n        const scaleX = geoMapWidth / nx\r\n        const scaleY = geoMapHeight / ny\r\n        gctx.translate(x, y)\r\n        gctx.scale(scaleX, scaleY)\r\n        for (let i = 0; i < nd; i++) {\r\n            gctx.beginPath()\r\n            gctx.strokeStyle = '#333'\r\n            gctx.lineWidth = 1 / scaleX\r\n            voronoi.renderCell(i, gctx)\r\n            if (colors !== null) { // option\r\n                gctx.fillStyle = colors[i]\r\n                gctx.fill()\r\n            }\r\n            gctx.stroke()\r\n            if (textFunction !== undefined) textFunction(i) // option\r\n        }\r\n        gctx.restore()\r\n    }\r\n\r\n    function renderAreaText(i) {\r\n        const { gctx } = screen\r\n        const c = self.centroids[i]\r\n        const textHeight = 1\r\n        // const area = textPercent(self.polygonAreas[i] / (self.nx * self.ny))\r\n        const area = self.polygonAreas[i].toFixed(0)\r\n        drawStrokedColor(area, c[0], c[1] + textHeight * 0.5 - 0.2, textHeight, 0.2, '#222', 1, gctx)\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport GeoNoise from './geoNoise.js'\r\nimport NoiseImage from './NoiseImage.js'\r\nimport DistrictMaker from './DistrictMaker.js'\r\nimport { range } from '../utilities/jsHelpers.js'\r\nimport SimVoterList from './SimVoterList.js'\r\n\r\n/**\r\n * GeoVoters inherits from SimVoterList.\r\n * @param {Screen} screen\r\n * @param {GeoElection} geoElection\r\n * @constructor\r\n */\r\nexport default function GeoVoters(screen, geoElection, sim) {\r\n    const self = this\r\n\r\n    // GeoVoters inherits from SimVoterList\r\n    // because we need to make a list instances of geoVoterBasis,\r\n    // and geoVoterBasis has a component called voter.\r\n    SimVoterList.call(self, sim)\r\n\r\n    /** Number of districts */\r\n    const nd = 20\r\n\r\n    /** Number of census tracts in x and y */\r\n    const nx = 20\r\n    const ny = 20\r\n\r\n    // Code that handles drawing districts of equal number of voters.\r\n    self.districtMaker = new DistrictMaker(screen)\r\n\r\n    // Code that handles making geographic noise.\r\n    self.geoNoise = new GeoNoise(nx, ny)\r\n    self.geoNoise.genNoise()\r\n\r\n    // Code that handles making images of geographic noise.\r\n    self.noiseImage = new NoiseImage(nx, ny, screen)\r\n\r\n    // Manage VoterBasisSet //\r\n\r\n    /** This voter basis is repeated at every census tract on the geo map.\r\n     *  It is altered by translating it in policy space.\r\n     *  */\r\n\r\n    // Update VoterGroup Sets //\r\n\r\n    let simVoterGroups = []\r\n\r\n    /** Make districts and update voter sets */\r\n    self.updateDistricts = () => {\r\n        self.districtMaker.make(nx, ny, nd)\r\n    }\r\n    self.updateVoters = () => {\r\n        simVoterGroups = self.getSimVoterGroups()\r\n        self.updateFullSet()\r\n        self.updateVotersByDistrict()\r\n        self.updateVotersByTract()\r\n    }\r\n\r\n    self.updateFullSet = () => {\r\n        const { sn } = self.geoNoise\r\n        self.allVoterGroups = simVoterGroups.map(\r\n            (vb) => sn.map(\r\n                (rowNoise) => rowNoise.map(\r\n                    (cellNoise) => {\r\n                        const [xNoise, yNoise] = cellNoise\r\n                        const { w2, densityProfile1 } = vb.voter\r\n                        const { x, y } = vb.voter.p2\r\n                        return { p2: { x: x + xNoise, y: y + yNoise }, w2, densityProfile1 }\r\n                    },\r\n                ).flat(),\r\n            ).flat(),\r\n        ).flat()\r\n    }\r\n\r\n    self.updateVotersByDistrict = () => {\r\n        const { census } = self.districtMaker\r\n        const { sn } = self.geoNoise\r\n        self.voterGroupsByDistrict = range(nd).map(\r\n            (iDistrict) => simVoterGroups.map(\r\n                (vb) => census[iDistrict].map((g) => {\r\n                    const [gx, gy, gf] = g\r\n                    const [xNoise, yNoise] = sn[gx][gy]\r\n                    const { w2, densityProfile1 } = vb.voter\r\n                    const { x, y } = vb.voter.p2\r\n                    return {\r\n                        p2: { x: x + xNoise, y: y + yNoise }, w2, densityProfile1, weight: gf,\r\n                    }\r\n                }).flat(),\r\n            ).flat(),\r\n        )\r\n    }\r\n\r\n    self.updateVotersByTract = () => {\r\n        const { sn } = self.geoNoise\r\n        self.voterGroupsByTract = sn.map(\r\n            (rowNoise) => rowNoise.map(\r\n                (cellNoise) => simVoterGroups.map(\r\n                    (vb) => {\r\n                        const [xNoise, yNoise] = cellNoise\r\n                        const { w2, densityProfile1 } = vb.voter\r\n                        const { x, y } = vb.voter.p2\r\n                        return { p2: { x: x + xNoise, y: y + yNoise }, w2, densityProfile1 }\r\n                    },\r\n                ).flat(),\r\n            ),\r\n        )\r\n    }\r\n\r\n    // Display //\r\n\r\n    const geoMapWidth = 100\r\n    const geoMapHeight = 100\r\n\r\n    /** Render all maps and  */\r\n    self.render = () => {\r\n        renderPolicyNoise()\r\n        self.renderTractVotes()\r\n        self.renderDistrictWins()\r\n        self.renderDistrictVotes()\r\n        self.renderVoterBasisSet()\r\n    }\r\n    // Render census tract votes.\r\n    self.renderTractVotes = () => {\r\n        self.noiseImage.render(geoMapWidth, geoMapHeight)\r\n        self.districtMaker.renderVoronoi(geoMapWidth, geoMapHeight)\r\n    }\r\n    // Render district wins.\r\n    self.renderDistrictWins = () => {\r\n        const { renderVoronoiColors } = self.districtMaker\r\n        renderVoronoiColors(200, 0, geoMapWidth, geoMapHeight, geoElection.winnerColors)\r\n    }\r\n    // render district votes.\r\n    self.renderDistrictVotes = () => {\r\n        const { renderVoronoiColors } = self.districtMaker\r\n        renderVoronoiColors(100, 0, geoMapWidth, geoMapHeight, geoElection.blendColors)\r\n    }\r\n    self.renderVoterBasisSet = () => {\r\n        simVoterGroups.forEach((v) => v.render())\r\n    }\r\n\r\n    /** Draw dots to represent the political diversity across census tracts. */\r\n    function renderPolicyNoise() {\r\n        self.voterGroupsByTract.forEach((row) => {\r\n            row.forEach((cell) => {\r\n                cell.forEach((group) => {\r\n                    smallCircle(group.p2.x, group.p2.y)\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    /** Draw a small dot */\r\n    function smallCircle(x, y) {\r\n        const { ctx } = screen\r\n        ctx.beginPath()\r\n        ctx.fillStyle = '#555'\r\n        ctx.arc(x, y, 1, 0, 2 * Math.PI)\r\n        ctx.fill()\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport GeoVoterBasis from '../../voters/GeoVoterBasis.js'\r\nimport SimCandidate from '../../candidates/SimCandidate.js'\r\nimport SimCandidateList from '../../candidates/SimCandidateList.js'\r\nimport GeoVoters from '../../voters/GeoVoters.js'\r\nimport SimBase from './SimBase.js'\r\n/**\r\n * Simulate one election with\r\n *   candidates in defined positions, and\r\n *   voters in a distribution that will be summed over.\r\n * Create a geographical map with variations of voter center.\r\n * @param {Screen} screen\r\n * @param {Menu} menu\r\n * @param {Changes} changes\r\n * @param {Election} election\r\n * @param {Sim} sim\r\n * @constructor\r\n */\r\nexport default function SimGeoOne(screen, menu, changes, geoElection, sim) {\r\n    const self = this\r\n\r\n    SimBase.call(self, screen, changes, sim)\r\n\r\n    const geoVoters = new GeoVoters(screen, geoElection, sim)\r\n\r\n    const simCandidateList = new SimCandidateList(sim)\r\n\r\n    self.addSimCandidate = (candidate) => {\r\n        simCandidateList.newCandidate(new SimCandidate(candidate, self.dragm))\r\n    }\r\n\r\n    self.addSimVoterCircle = (voterCircle) => {\r\n        geoVoters.newVoterGroup(new GeoVoterBasis(voterCircle, self.dragm, screen))\r\n    }\r\n\r\n    changes.add(['districts'])\r\n\r\n    const superEnter = self.enter\r\n    self.enter = () => {\r\n        superEnter()\r\n        screen.showGeoMaps()\r\n        sim.simAddCandidates.canButton.show()\r\n        sim.election.setDimensions(2)\r\n        geoVoters.updateXY()\r\n        simCandidateList.updateXY()\r\n    }\r\n\r\n    self.exit = () => {\r\n        screen.hideGeoMaps()\r\n        sim.simAddCandidates.canButton.hide()\r\n        // clean up fractions\r\n        const fillUndefined = Array(simCandidateList.numCandidates()).fill(undefined)\r\n        simCandidateList.setCandidateWins(fillUndefined)\r\n    }\r\n\r\n    self.update = () => {\r\n        if (changes.checkNone()) return\r\n        // clear changes, reset to []\r\n        if (changes.check(['districts', 'simType'])) {\r\n            geoVoters.updateDistricts()\r\n        }\r\n        changes.clear()\r\n        geoVoters.updateVoters() // can make this only trigger when voters change\r\n        geoElection.updateVotes(geoVoters, simCandidateList, sim.dimensions)\r\n        screen.clear()\r\n        self.render()\r\n    }\r\n\r\n    self.render = () => {\r\n        geoVoters.render()\r\n    }\r\n    self.renderForeground = () => {\r\n        simCandidateList.renderForeground()\r\n        geoVoters.renderForeground()\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Gives an id to an entity.\r\n * @constructor\r\n */\r\nexport default function Registrar() {\r\n    const self = this\r\n\r\n    const entities = []\r\n    let nextID = 0\r\n\r\n    self.new = function (entity) {\r\n        entities.push(entity)\r\n        const id = nextID\r\n        nextID += 1\r\n        return id\r\n    }\r\n    self.num = () => nextID\r\n    self.get = (id) => entities[id]\r\n}\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * The Ease class provides a collection of easing functions for use with tween.js.\r\n */\r\n var Easing = {\r\n    Linear: {\r\n        None: function (amount) {\r\n            return amount;\r\n        },\r\n    },\r\n    Quadratic: {\r\n        In: function (amount) {\r\n            return amount * amount;\r\n        },\r\n        Out: function (amount) {\r\n            return amount * (2 - amount);\r\n        },\r\n        InOut: function (amount) {\r\n            if ((amount *= 2) < 1) {\r\n                return 0.5 * amount * amount;\r\n            }\r\n            return -0.5 * (--amount * (amount - 2) - 1);\r\n        },\r\n    },\r\n    Cubic: {\r\n        In: function (amount) {\r\n            return amount * amount * amount;\r\n        },\r\n        Out: function (amount) {\r\n            return --amount * amount * amount + 1;\r\n        },\r\n        InOut: function (amount) {\r\n            if ((amount *= 2) < 1) {\r\n                return 0.5 * amount * amount * amount;\r\n            }\r\n            return 0.5 * ((amount -= 2) * amount * amount + 2);\r\n        },\r\n    },\r\n    Quartic: {\r\n        In: function (amount) {\r\n            return amount * amount * amount * amount;\r\n        },\r\n        Out: function (amount) {\r\n            return 1 - --amount * amount * amount * amount;\r\n        },\r\n        InOut: function (amount) {\r\n            if ((amount *= 2) < 1) {\r\n                return 0.5 * amount * amount * amount * amount;\r\n            }\r\n            return -0.5 * ((amount -= 2) * amount * amount * amount - 2);\r\n        },\r\n    },\r\n    Quintic: {\r\n        In: function (amount) {\r\n            return amount * amount * amount * amount * amount;\r\n        },\r\n        Out: function (amount) {\r\n            return --amount * amount * amount * amount * amount + 1;\r\n        },\r\n        InOut: function (amount) {\r\n            if ((amount *= 2) < 1) {\r\n                return 0.5 * amount * amount * amount * amount * amount;\r\n            }\r\n            return 0.5 * ((amount -= 2) * amount * amount * amount * amount + 2);\r\n        },\r\n    },\r\n    Sinusoidal: {\r\n        In: function (amount) {\r\n            return 1 - Math.cos((amount * Math.PI) / 2);\r\n        },\r\n        Out: function (amount) {\r\n            return Math.sin((amount * Math.PI) / 2);\r\n        },\r\n        InOut: function (amount) {\r\n            return 0.5 * (1 - Math.cos(Math.PI * amount));\r\n        },\r\n    },\r\n    Exponential: {\r\n        In: function (amount) {\r\n            return amount === 0 ? 0 : Math.pow(1024, amount - 1);\r\n        },\r\n        Out: function (amount) {\r\n            return amount === 1 ? 1 : 1 - Math.pow(2, -10 * amount);\r\n        },\r\n        InOut: function (amount) {\r\n            if (amount === 0) {\r\n                return 0;\r\n            }\r\n            if (amount === 1) {\r\n                return 1;\r\n            }\r\n            if ((amount *= 2) < 1) {\r\n                return 0.5 * Math.pow(1024, amount - 1);\r\n            }\r\n            return 0.5 * (-Math.pow(2, -10 * (amount - 1)) + 2);\r\n        },\r\n    },\r\n    Circular: {\r\n        In: function (amount) {\r\n            return 1 - Math.sqrt(1 - amount * amount);\r\n        },\r\n        Out: function (amount) {\r\n            return Math.sqrt(1 - --amount * amount);\r\n        },\r\n        InOut: function (amount) {\r\n            if ((amount *= 2) < 1) {\r\n                return -0.5 * (Math.sqrt(1 - amount * amount) - 1);\r\n            }\r\n            return 0.5 * (Math.sqrt(1 - (amount -= 2) * amount) + 1);\r\n        },\r\n    },\r\n    Elastic: {\r\n        In: function (amount) {\r\n            if (amount === 0) {\r\n                return 0;\r\n            }\r\n            if (amount === 1) {\r\n                return 1;\r\n            }\r\n            return -Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\r\n        },\r\n        Out: function (amount) {\r\n            if (amount === 0) {\r\n                return 0;\r\n            }\r\n            if (amount === 1) {\r\n                return 1;\r\n            }\r\n            return Math.pow(2, -10 * amount) * Math.sin((amount - 0.1) * 5 * Math.PI) + 1;\r\n        },\r\n        InOut: function (amount) {\r\n            if (amount === 0) {\r\n                return 0;\r\n            }\r\n            if (amount === 1) {\r\n                return 1;\r\n            }\r\n            amount *= 2;\r\n            if (amount < 1) {\r\n                return -0.5 * Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\r\n            }\r\n            return 0.5 * Math.pow(2, -10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI) + 1;\r\n        },\r\n    },\r\n    Back: {\r\n        In: function (amount) {\r\n            var s = 1.70158;\r\n            return amount * amount * ((s + 1) * amount - s);\r\n        },\r\n        Out: function (amount) {\r\n            var s = 1.70158;\r\n            return --amount * amount * ((s + 1) * amount + s) + 1;\r\n        },\r\n        InOut: function (amount) {\r\n            var s = 1.70158 * 1.525;\r\n            if ((amount *= 2) < 1) {\r\n                return 0.5 * (amount * amount * ((s + 1) * amount - s));\r\n            }\r\n            return 0.5 * ((amount -= 2) * amount * ((s + 1) * amount + s) + 2);\r\n        },\r\n    },\r\n    Bounce: {\r\n        In: function (amount) {\r\n            return 1 - Easing.Bounce.Out(1 - amount);\r\n        },\r\n        Out: function (amount) {\r\n            if (amount < 1 / 2.75) {\r\n                return 7.5625 * amount * amount;\r\n            }\r\n            else if (amount < 2 / 2.75) {\r\n                return 7.5625 * (amount -= 1.5 / 2.75) * amount + 0.75;\r\n            }\r\n            else if (amount < 2.5 / 2.75) {\r\n                return 7.5625 * (amount -= 2.25 / 2.75) * amount + 0.9375;\r\n            }\r\n            else {\r\n                return 7.5625 * (amount -= 2.625 / 2.75) * amount + 0.984375;\r\n            }\r\n        },\r\n        InOut: function (amount) {\r\n            if (amount < 0.5) {\r\n                return Easing.Bounce.In(amount * 2) * 0.5;\r\n            }\r\n            return Easing.Bounce.Out(amount * 2 - 1) * 0.5 + 0.5;\r\n        },\r\n    },\r\n};\r\n\r\nvar now;\r\n// Include a performance.now polyfill.\r\n// In node.js, use process.hrtime.\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nif (typeof self === 'undefined' && typeof process !== 'undefined' && process.hrtime) {\r\n    now = function () {\r\n        // eslint-disable-next-line\r\n        // @ts-ignore\r\n        var time = process.hrtime();\r\n        // Convert [seconds, nanoseconds] to milliseconds.\r\n        return time[0] * 1000 + time[1] / 1000000;\r\n    };\r\n}\r\n// In a browser, use self.performance.now if it is available.\r\nelse if (typeof self !== 'undefined' && self.performance !== undefined && self.performance.now !== undefined) {\r\n    // This must be bound, because directly assigning this function\r\n    // leads to an invocation exception in Chrome.\r\n    now = self.performance.now.bind(self.performance);\r\n}\r\n// Use Date.now if it is available.\r\nelse if (Date.now !== undefined) {\r\n    now = Date.now;\r\n}\r\n// Otherwise, use 'new Date().getTime()'.\r\nelse {\r\n    now = function () {\r\n        return new Date().getTime();\r\n    };\r\n}\r\nvar now$1 = now;\r\n\r\n/**\r\n * Controlling groups of tweens\r\n *\r\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\r\n * In these cases, you may want to create your own smaller groups of tween\r\n */\r\nvar Group = /** @class */ (function () {\r\n    function Group() {\r\n        this._tweens = {};\r\n        this._tweensAddedDuringUpdate = {};\r\n    }\r\n    Group.prototype.getAll = function () {\r\n        var _this = this;\r\n        return Object.keys(this._tweens).map(function (tweenId) {\r\n            return _this._tweens[tweenId];\r\n        });\r\n    };\r\n    Group.prototype.removeAll = function () {\r\n        this._tweens = {};\r\n    };\r\n    Group.prototype.add = function (tween) {\r\n        this._tweens[tween.getId()] = tween;\r\n        this._tweensAddedDuringUpdate[tween.getId()] = tween;\r\n    };\r\n    Group.prototype.remove = function (tween) {\r\n        delete this._tweens[tween.getId()];\r\n        delete this._tweensAddedDuringUpdate[tween.getId()];\r\n    };\r\n    Group.prototype.update = function (time, preserve) {\r\n        if (time === void 0) { time = now$1(); }\r\n        if (preserve === void 0) { preserve = false; }\r\n        var tweenIds = Object.keys(this._tweens);\r\n        if (tweenIds.length === 0) {\r\n            return false;\r\n        }\r\n        // Tweens are updated in \"batches\". If you add a new tween during an\r\n        // update, then the new tween will be updated in the next batch.\r\n        // If you remove a tween during an update, it may or may not be updated.\r\n        // However, if the removed tween was added during the current batch,\r\n        // then it will not be updated.\r\n        while (tweenIds.length > 0) {\r\n            this._tweensAddedDuringUpdate = {};\r\n            for (var i = 0; i < tweenIds.length; i++) {\r\n                var tween = this._tweens[tweenIds[i]];\r\n                var autoStart = !preserve;\r\n                if (tween && tween.update(time, autoStart) === false && !preserve) {\r\n                    delete this._tweens[tweenIds[i]];\r\n                }\r\n            }\r\n            tweenIds = Object.keys(this._tweensAddedDuringUpdate);\r\n        }\r\n        return true;\r\n    };\r\n    return Group;\r\n}());\r\n\r\n/**\r\n *\r\n */\r\nvar Interpolation = {\r\n    Linear: function (v, k) {\r\n        var m = v.length - 1;\r\n        var f = m * k;\r\n        var i = Math.floor(f);\r\n        var fn = Interpolation.Utils.Linear;\r\n        if (k < 0) {\r\n            return fn(v[0], v[1], f);\r\n        }\r\n        if (k > 1) {\r\n            return fn(v[m], v[m - 1], m - f);\r\n        }\r\n        return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\r\n    },\r\n    Bezier: function (v, k) {\r\n        var b = 0;\r\n        var n = v.length - 1;\r\n        var pw = Math.pow;\r\n        var bn = Interpolation.Utils.Bernstein;\r\n        for (var i = 0; i <= n; i++) {\r\n            b += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\r\n        }\r\n        return b;\r\n    },\r\n    CatmullRom: function (v, k) {\r\n        var m = v.length - 1;\r\n        var f = m * k;\r\n        var i = Math.floor(f);\r\n        var fn = Interpolation.Utils.CatmullRom;\r\n        if (v[0] === v[m]) {\r\n            if (k < 0) {\r\n                i = Math.floor((f = m * (1 + k)));\r\n            }\r\n            return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\r\n        }\r\n        else {\r\n            if (k < 0) {\r\n                return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\r\n            }\r\n            if (k > 1) {\r\n                return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\r\n            }\r\n            return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\r\n        }\r\n    },\r\n    Utils: {\r\n        Linear: function (p0, p1, t) {\r\n            return (p1 - p0) * t + p0;\r\n        },\r\n        Bernstein: function (n, i) {\r\n            var fc = Interpolation.Utils.Factorial;\r\n            return fc(n) / fc(i) / fc(n - i);\r\n        },\r\n        Factorial: (function () {\r\n            var a = [1];\r\n            return function (n) {\r\n                var s = 1;\r\n                if (a[n]) {\r\n                    return a[n];\r\n                }\r\n                for (var i = n; i > 1; i--) {\r\n                    s *= i;\r\n                }\r\n                a[n] = s;\r\n                return s;\r\n            };\r\n        })(),\r\n        CatmullRom: function (p0, p1, p2, p3, t) {\r\n            var v0 = (p2 - p0) * 0.5;\r\n            var v1 = (p3 - p1) * 0.5;\r\n            var t2 = t * t;\r\n            var t3 = t * t2;\r\n            return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n        },\r\n    },\r\n};\r\n\r\n/**\r\n * Utils\r\n */\r\nvar Sequence = /** @class */ (function () {\r\n    function Sequence() {\r\n    }\r\n    Sequence.nextId = function () {\r\n        return Sequence._nextId++;\r\n    };\r\n    Sequence._nextId = 0;\r\n    return Sequence;\r\n}());\r\n\r\nvar mainGroup = new Group();\r\n\r\n/**\r\n * Tween.js - Licensed under the MIT license\r\n * https://github.com/tweenjs/tween.js\r\n * ----------------------------------------------\r\n *\r\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\r\n * Thank you all, you're awesome!\r\n */\r\nvar Tween = /** @class */ (function () {\r\n    function Tween(_object, _group) {\r\n        if (_group === void 0) { _group = mainGroup; }\r\n        this._object = _object;\r\n        this._group = _group;\r\n        this._isPaused = false;\r\n        this._pauseStart = 0;\r\n        this._valuesStart = {};\r\n        this._valuesEnd = {};\r\n        this._valuesStartRepeat = {};\r\n        this._duration = 1000;\r\n        this._initialRepeat = 0;\r\n        this._repeat = 0;\r\n        this._yoyo = false;\r\n        this._isPlaying = false;\r\n        this._reversed = false;\r\n        this._delayTime = 0;\r\n        this._startTime = 0;\r\n        this._easingFunction = Easing.Linear.None;\r\n        this._interpolationFunction = Interpolation.Linear;\r\n        this._chainedTweens = [];\r\n        this._onStartCallbackFired = false;\r\n        this._id = Sequence.nextId();\r\n        this._isChainStopped = false;\r\n        this._goToEnd = false;\r\n    }\r\n    Tween.prototype.getId = function () {\r\n        return this._id;\r\n    };\r\n    Tween.prototype.isPlaying = function () {\r\n        return this._isPlaying;\r\n    };\r\n    Tween.prototype.isPaused = function () {\r\n        return this._isPaused;\r\n    };\r\n    Tween.prototype.to = function (properties, duration) {\r\n        // TODO? restore this, then update the 07_dynamic_to example to set fox\r\n        // tween's to on each update. That way the behavior is opt-in (there's\r\n        // currently no opt-out).\r\n        // for (const prop in properties) this._valuesEnd[prop] = properties[prop]\r\n        this._valuesEnd = Object.create(properties);\r\n        if (duration !== undefined) {\r\n            this._duration = duration;\r\n        }\r\n        return this;\r\n    };\r\n    Tween.prototype.duration = function (d) {\r\n        this._duration = d;\r\n        return this;\r\n    };\r\n    Tween.prototype.start = function (time) {\r\n        if (this._isPlaying) {\r\n            return this;\r\n        }\r\n        // eslint-disable-next-line\r\n        this._group && this._group.add(this);\r\n        this._repeat = this._initialRepeat;\r\n        if (this._reversed) {\r\n            // If we were reversed (f.e. using the yoyo feature) then we need to\r\n            // flip the tween direction back to forward.\r\n            this._reversed = false;\r\n            for (var property in this._valuesStartRepeat) {\r\n                this._swapEndStartRepeatValues(property);\r\n                this._valuesStart[property] = this._valuesStartRepeat[property];\r\n            }\r\n        }\r\n        this._isPlaying = true;\r\n        this._isPaused = false;\r\n        this._onStartCallbackFired = false;\r\n        this._isChainStopped = false;\r\n        this._startTime = time !== undefined ? (typeof time === 'string' ? now$1() + parseFloat(time) : time) : now$1();\r\n        this._startTime += this._delayTime;\r\n        this._setupProperties(this._object, this._valuesStart, this._valuesEnd, this._valuesStartRepeat);\r\n        return this;\r\n    };\r\n    Tween.prototype._setupProperties = function (_object, _valuesStart, _valuesEnd, _valuesStartRepeat) {\r\n        for (var property in _valuesEnd) {\r\n            var startValue = _object[property];\r\n            var startValueIsArray = Array.isArray(startValue);\r\n            var propType = startValueIsArray ? 'array' : typeof startValue;\r\n            var isInterpolationList = !startValueIsArray && Array.isArray(_valuesEnd[property]);\r\n            // If `to()` specifies a property that doesn't exist in the source object,\r\n            // we should not set that property in the object\r\n            if (propType === 'undefined' || propType === 'function') {\r\n                continue;\r\n            }\r\n            // Check if an Array was provided as property value\r\n            if (isInterpolationList) {\r\n                var endValues = _valuesEnd[property];\r\n                if (endValues.length === 0) {\r\n                    continue;\r\n                }\r\n                // handle an array of relative values\r\n                endValues = endValues.map(this._handleRelativeValue.bind(this, startValue));\r\n                // Create a local copy of the Array with the start value at the front\r\n                _valuesEnd[property] = [startValue].concat(endValues);\r\n            }\r\n            // handle the deepness of the values\r\n            if ((propType === 'object' || startValueIsArray) && startValue && !isInterpolationList) {\r\n                _valuesStart[property] = startValueIsArray ? [] : {};\r\n                // eslint-disable-next-line\r\n                for (var prop in startValue) {\r\n                    // eslint-disable-next-line\r\n                    // @ts-ignore FIXME?\r\n                    _valuesStart[property][prop] = startValue[prop];\r\n                }\r\n                _valuesStartRepeat[property] = startValueIsArray ? [] : {}; // TODO? repeat nested values? And yoyo? And array values?\r\n                // eslint-disable-next-line\r\n                // @ts-ignore FIXME?\r\n                this._setupProperties(startValue, _valuesStart[property], _valuesEnd[property], _valuesStartRepeat[property]);\r\n            }\r\n            else {\r\n                // Save the starting value, but only once.\r\n                if (typeof _valuesStart[property] === 'undefined') {\r\n                    _valuesStart[property] = startValue;\r\n                }\r\n                if (!startValueIsArray) {\r\n                    // eslint-disable-next-line\r\n                    // @ts-ignore FIXME?\r\n                    _valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\r\n                }\r\n                if (isInterpolationList) {\r\n                    // eslint-disable-next-line\r\n                    // @ts-ignore FIXME?\r\n                    _valuesStartRepeat[property] = _valuesEnd[property].slice().reverse();\r\n                }\r\n                else {\r\n                    _valuesStartRepeat[property] = _valuesStart[property] || 0;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Tween.prototype.stop = function () {\r\n        if (!this._isChainStopped) {\r\n            this._isChainStopped = true;\r\n            this.stopChainedTweens();\r\n        }\r\n        if (!this._isPlaying) {\r\n            return this;\r\n        }\r\n        // eslint-disable-next-line\r\n        this._group && this._group.remove(this);\r\n        this._isPlaying = false;\r\n        this._isPaused = false;\r\n        if (this._onStopCallback) {\r\n            this._onStopCallback(this._object);\r\n        }\r\n        return this;\r\n    };\r\n    Tween.prototype.end = function () {\r\n        this._goToEnd = true;\r\n        this.update(Infinity);\r\n        return this;\r\n    };\r\n    Tween.prototype.pause = function (time) {\r\n        if (time === void 0) { time = now$1(); }\r\n        if (this._isPaused || !this._isPlaying) {\r\n            return this;\r\n        }\r\n        this._isPaused = true;\r\n        this._pauseStart = time;\r\n        // eslint-disable-next-line\r\n        this._group && this._group.remove(this);\r\n        return this;\r\n    };\r\n    Tween.prototype.resume = function (time) {\r\n        if (time === void 0) { time = now$1(); }\r\n        if (!this._isPaused || !this._isPlaying) {\r\n            return this;\r\n        }\r\n        this._isPaused = false;\r\n        this._startTime += time - this._pauseStart;\r\n        this._pauseStart = 0;\r\n        // eslint-disable-next-line\r\n        this._group && this._group.add(this);\r\n        return this;\r\n    };\r\n    Tween.prototype.stopChainedTweens = function () {\r\n        for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\r\n            this._chainedTweens[i].stop();\r\n        }\r\n        return this;\r\n    };\r\n    Tween.prototype.group = function (group) {\r\n        this._group = group;\r\n        return this;\r\n    };\r\n    Tween.prototype.delay = function (amount) {\r\n        this._delayTime = amount;\r\n        return this;\r\n    };\r\n    Tween.prototype.repeat = function (times) {\r\n        this._initialRepeat = times;\r\n        this._repeat = times;\r\n        return this;\r\n    };\r\n    Tween.prototype.repeatDelay = function (amount) {\r\n        this._repeatDelayTime = amount;\r\n        return this;\r\n    };\r\n    Tween.prototype.yoyo = function (yoyo) {\r\n        this._yoyo = yoyo;\r\n        return this;\r\n    };\r\n    Tween.prototype.easing = function (easingFunction) {\r\n        this._easingFunction = easingFunction;\r\n        return this;\r\n    };\r\n    Tween.prototype.interpolation = function (interpolationFunction) {\r\n        this._interpolationFunction = interpolationFunction;\r\n        return this;\r\n    };\r\n    Tween.prototype.chain = function () {\r\n        var tweens = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            tweens[_i] = arguments[_i];\r\n        }\r\n        this._chainedTweens = tweens;\r\n        return this;\r\n    };\r\n    Tween.prototype.onStart = function (callback) {\r\n        this._onStartCallback = callback;\r\n        return this;\r\n    };\r\n    Tween.prototype.onUpdate = function (callback) {\r\n        this._onUpdateCallback = callback;\r\n        return this;\r\n    };\r\n    Tween.prototype.onRepeat = function (callback) {\r\n        this._onRepeatCallback = callback;\r\n        return this;\r\n    };\r\n    Tween.prototype.onComplete = function (callback) {\r\n        this._onCompleteCallback = callback;\r\n        return this;\r\n    };\r\n    Tween.prototype.onStop = function (callback) {\r\n        this._onStopCallback = callback;\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns true if the tween is still playing after the update, false\r\n     * otherwise (calling update on a paused tween still returns true because\r\n     * it is still playing, just paused).\r\n     */\r\n    Tween.prototype.update = function (time, autoStart) {\r\n        if (time === void 0) { time = now$1(); }\r\n        if (autoStart === void 0) { autoStart = true; }\r\n        if (this._isPaused)\r\n            return true;\r\n        var property;\r\n        var elapsed;\r\n        var endTime = this._startTime + this._duration;\r\n        if (!this._goToEnd && !this._isPlaying) {\r\n            if (time > endTime)\r\n                return false;\r\n            if (autoStart)\r\n                this.start(time);\r\n        }\r\n        this._goToEnd = false;\r\n        if (time < this._startTime) {\r\n            return true;\r\n        }\r\n        if (this._onStartCallbackFired === false) {\r\n            if (this._onStartCallback) {\r\n                this._onStartCallback(this._object);\r\n            }\r\n            this._onStartCallbackFired = true;\r\n        }\r\n        elapsed = (time - this._startTime) / this._duration;\r\n        elapsed = this._duration === 0 || elapsed > 1 ? 1 : elapsed;\r\n        var value = this._easingFunction(elapsed);\r\n        // properties transformations\r\n        this._updateProperties(this._object, this._valuesStart, this._valuesEnd, value);\r\n        if (this._onUpdateCallback) {\r\n            this._onUpdateCallback(this._object, elapsed);\r\n        }\r\n        if (elapsed === 1) {\r\n            if (this._repeat > 0) {\r\n                if (isFinite(this._repeat)) {\r\n                    this._repeat--;\r\n                }\r\n                // Reassign starting values, restart by making startTime = now\r\n                for (property in this._valuesStartRepeat) {\r\n                    if (!this._yoyo && typeof this._valuesEnd[property] === 'string') {\r\n                        this._valuesStartRepeat[property] =\r\n                            // eslint-disable-next-line\r\n                            // @ts-ignore FIXME?\r\n                            this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\r\n                    }\r\n                    if (this._yoyo) {\r\n                        this._swapEndStartRepeatValues(property);\r\n                    }\r\n                    this._valuesStart[property] = this._valuesStartRepeat[property];\r\n                }\r\n                if (this._yoyo) {\r\n                    this._reversed = !this._reversed;\r\n                }\r\n                if (this._repeatDelayTime !== undefined) {\r\n                    this._startTime = time + this._repeatDelayTime;\r\n                }\r\n                else {\r\n                    this._startTime = time + this._delayTime;\r\n                }\r\n                if (this._onRepeatCallback) {\r\n                    this._onRepeatCallback(this._object);\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                if (this._onCompleteCallback) {\r\n                    this._onCompleteCallback(this._object);\r\n                }\r\n                for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\r\n                    // Make the chained tweens start exactly at the time they should,\r\n                    // even if the `update()` method was called way past the duration of the tween\r\n                    this._chainedTweens[i].start(this._startTime + this._duration);\r\n                }\r\n                this._isPlaying = false;\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Tween.prototype._updateProperties = function (_object, _valuesStart, _valuesEnd, value) {\r\n        for (var property in _valuesEnd) {\r\n            // Don't update properties that do not exist in the source object\r\n            if (_valuesStart[property] === undefined) {\r\n                continue;\r\n            }\r\n            var start = _valuesStart[property] || 0;\r\n            var end = _valuesEnd[property];\r\n            var startIsArray = Array.isArray(_object[property]);\r\n            var endIsArray = Array.isArray(end);\r\n            var isInterpolationList = !startIsArray && endIsArray;\r\n            if (isInterpolationList) {\r\n                _object[property] = this._interpolationFunction(end, value);\r\n            }\r\n            else if (typeof end === 'object' && end) {\r\n                // eslint-disable-next-line\r\n                // @ts-ignore FIXME?\r\n                this._updateProperties(_object[property], start, end, value);\r\n            }\r\n            else {\r\n                // Parses relative end values with start as base (e.g.: +10, -3)\r\n                end = this._handleRelativeValue(start, end);\r\n                // Protect against non numeric properties.\r\n                if (typeof end === 'number') {\r\n                    // eslint-disable-next-line\r\n                    // @ts-ignore FIXME?\r\n                    _object[property] = start + (end - start) * value;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Tween.prototype._handleRelativeValue = function (start, end) {\r\n        if (typeof end !== 'string') {\r\n            return end;\r\n        }\r\n        if (end.charAt(0) === '+' || end.charAt(0) === '-') {\r\n            return start + parseFloat(end);\r\n        }\r\n        else {\r\n            return parseFloat(end);\r\n        }\r\n    };\r\n    Tween.prototype._swapEndStartRepeatValues = function (property) {\r\n        var tmp = this._valuesStartRepeat[property];\r\n        var endValue = this._valuesEnd[property];\r\n        if (typeof endValue === 'string') {\r\n            this._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(endValue);\r\n        }\r\n        else {\r\n            this._valuesStartRepeat[property] = this._valuesEnd[property];\r\n        }\r\n        this._valuesEnd[property] = tmp;\r\n    };\r\n    return Tween;\r\n}());\r\n\r\nvar VERSION = '18.6.4';\r\n\r\n/**\r\n * Tween.js - Licensed under the MIT license\r\n * https://github.com/tweenjs/tween.js\r\n * ----------------------------------------------\r\n *\r\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\r\n * Thank you all, you're awesome!\r\n */\r\nvar nextId = Sequence.nextId;\r\n/**\r\n * Controlling groups of tweens\r\n *\r\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\r\n * In these cases, you may want to create your own smaller groups of tweens.\r\n */\r\nvar TWEEN = mainGroup;\r\n// This is the best way to export things in a way that's compatible with both ES\r\n// Modules and CommonJS, without build hacks, and so as not to break the\r\n// existing API.\r\n// https://github.com/rollup/rollup/issues/1961#issuecomment-423037881\r\nvar getAll = TWEEN.getAll.bind(TWEEN);\r\nvar removeAll = TWEEN.removeAll.bind(TWEEN);\r\nvar add = TWEEN.add.bind(TWEEN);\r\nvar remove = TWEEN.remove.bind(TWEEN);\r\nvar update = TWEEN.update.bind(TWEEN);\r\nvar exports = {\r\n    Easing: Easing,\r\n    Group: Group,\r\n    Interpolation: Interpolation,\r\n    now: now$1,\r\n    Sequence: Sequence,\r\n    nextId: nextId,\r\n    Tween: Tween,\r\n    VERSION: VERSION,\r\n    getAll: getAll,\r\n    removeAll: removeAll,\r\n    add: add,\r\n    remove: remove,\r\n    update: update,\r\n};\r\n\r\nexport default exports;\r\nexport { Easing, Group, Interpolation, Sequence, Tween, VERSION, add, getAll, nextId, now$1 as now, remove, removeAll, update };","/** @module */\r\n\r\nimport { Tween } from '../../lib/tween.esm.js'\r\n\r\n/**\r\n */\r\n\r\n/**\r\n * Shows a circle at the parent object xy coordinates.\r\n * Animates the circle when picking up and dropping.\r\n * @param {(Candidate|CandidateDistribution|VoterCircle|SampleVoterCircle)} parent\r\n *  - something with x and y attributes.\r\n * @param {Number} r - radius of graphic\r\n * @param {String} color - color code\r\n * @param {Screen} screen - something with .ctx to draw to.\r\n * @constructor\r\n */\r\nexport default function CircleGraphic(parent, r, color, screen) {\r\n    const self = this\r\n\r\n    self.r = r\r\n    self.trueR = r\r\n\r\n    self.pickUp = function () {\r\n        self.tween = new Tween(self)\r\n        self.tween.to({ r: self.trueR * 2 }, 100)\r\n        self.tween.start()\r\n    }\r\n    self.drop = function () {\r\n        self.tween = new Tween(self)\r\n        self.tween.to({ r: self.trueR }, 100)\r\n        self.tween.start()\r\n    }\r\n\r\n    // Graphics component\r\n    self.render = function () {\r\n        const { fctx } = screen\r\n\r\n        fctx.save()\r\n\r\n        if (self.tween) {\r\n            self.tween.update()\r\n        }\r\n\r\n        // handle\r\n\r\n        if (parent.exists === 0) {\r\n            fctx.globalAlpha = 0.2\r\n        }\r\n        fctx.beginPath()\r\n        fctx.fillStyle = color\r\n        fctx.arc(parent.x, parent.y, self.r, 0, 2 * Math.PI)\r\n        fctx.fill()\r\n        fctx.stroke()\r\n\r\n        fctx.restore()\r\n    }\r\n}\r\n","import hideOnClickOutside from './hideOnClickOutside.js'\r\n\r\nexport default function tooltipForEntity(entity, screen, sim) {\r\n    // make a html box appear\r\n    const box = document.createElement('div')\r\n\r\n    const offset = 5 // margin plus border\r\n    box.style.position = 'absolute'\r\n    if (entity.x > screen.width * 0.5) {\r\n        box.style.right = `${screen.width - (entity.x + offset)}px`\r\n    } else {\r\n        box.style.left = `${entity.x + offset}px`\r\n    }\r\n    box.style.top = `${entity.y + offset}px`\r\n    // box.style.width = '10px'\r\n    // box.style.height = '10px'\r\n    box.innerText = '- Properties -'\r\n    box.style.border = '1px solid black'\r\n    box.style.padding = '4px'\r\n    box.style.background = 'white'\r\n    // screen.canvas.parentNode.appendChild(box)\r\n    // screen.canvas.parentNode.insertBefore(box, screen.canvas)\r\n    screen.tooltips.appendChild(box)\r\n\r\n    const hidebox = () => {\r\n        // box.style.display = 'none'\r\n        box.remove()\r\n    }\r\n\r\n    hideOnClickOutside(box, hidebox)\r\n\r\n    const items = {}\r\n\r\n    items.exists = new Item(\r\n        'checkbox',\r\n        'Exists',\r\n        'Exists: ',\r\n        (val) => entity.setE(val ? 1 : 0),\r\n        entity.exists === 1,\r\n    )\r\n    box.appendChild(items.exists.div)\r\n    if (sim.election.dimensions === 1) {\r\n        if (entity.w1) {\r\n            items.w1 = new Item(\r\n                'range',\r\n                'Width',\r\n                'Width: ',\r\n                (val) => entity.setW1(val),\r\n                entity.w1,\r\n            )\r\n            box.appendChild(items.w1.div)\r\n        }\r\n        if (entity.densityProfile1) {\r\n            items.densityProfile1 = new Item(\r\n                'select',\r\n                'Density Profile',\r\n                'Density Profile: ',\r\n                (val) => entity.setDensityProfile1(val),\r\n                entity.densityProfile1,\r\n                ['step', 'gaussian'],\r\n            )\r\n            box.appendChild(items.densityProfile1.div)\r\n        }\r\n    } else if (entity.w2) {\r\n        items.w2 = new Item(\r\n            'range',\r\n            'Width',\r\n            'Width: ',\r\n            (val) => entity.setW2(val),\r\n            entity.w2,\r\n        )\r\n        box.appendChild(items.w2.div)\r\n    }\r\n    if (entity.color) {\r\n        items.color = new Item(\r\n            'color',\r\n            'Color',\r\n            'Color: ',\r\n            (val) => entity.setColor(val),\r\n            entity.color,\r\n        )\r\n        box.appendChild(items.color.div)\r\n    }\r\n    items.showGhosts = new Item(\r\n        'checkbox',\r\n        'Show Ghosts',\r\n        'Show Ghosts: ',\r\n        (val) => sim.setShowNonExistingEntities(val),\r\n        sim.showGhosts,\r\n    )\r\n    box.appendChild(items.showGhosts.div)\r\n}\r\n\r\nfunction Item(type, name, text, onChange, defaultValue, choices) {\r\n    const self = this\r\n\r\n    self.div = document.createElement('div')\r\n\r\n    if (type === 'select') {\r\n        self.input = document.createElement('select')\r\n        for (let i = 0; i < choices.length; i++) {\r\n            const option = document.createElement('option')\r\n            option.value = choices[i]\r\n            option.innerText = choices[i]\r\n            self.input.appendChild(option)\r\n        }\r\n        self.input.value = defaultValue\r\n        self.input.addEventListener('input', () => onChange(self.input.value))\r\n    } else {\r\n        self.input = document.createElement('input')\r\n        self.input.type = type\r\n        self.input.id = name\r\n        self.input.name = name\r\n        if (type === 'checkbox') {\r\n            if (defaultValue) {\r\n                self.input.checked = true\r\n            }\r\n            self.input.addEventListener('change', () => onChange(self.input.checked))\r\n        } else if (type === 'range') {\r\n            self.input.min = 1\r\n            self.input.max = 300\r\n            self.input.value = defaultValue\r\n            self.input.step = 1\r\n            self.input.addEventListener('input', () => onChange(self.input.value))\r\n        } else if (type === 'color') {\r\n            self.input.value = defaultValue\r\n            self.input.addEventListener('input', () => onChange(self.input.value))\r\n        }\r\n    }\r\n    self.label = document.createElement('label')\r\n    self.label.for = name\r\n    self.label.innerText = text\r\n    self.label.style['margin-right'] = '4px'\r\n    self.div.appendChild(self.label)\r\n    self.div.appendChild(self.input)\r\n}\r\n","export default function hideOnClickOutside(element, hide) {\r\n    const isVisible = (elem) => !!elem\r\n        && !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length)\r\n\r\n    const outsideClickListener = (event) => {\r\n        if (!element.contains(event.target) && isVisible(element)) {\r\n            // or use: event.target.closest(selector) === null\r\n            hide()\r\n            // eslint-disable-next-line no-use-before-define\r\n            removeClickListener()\r\n        }\r\n    }\r\n\r\n    const removeClickListener = () => {\r\n        document.removeEventListener('mousedown', outsideClickListener)\r\n        document.removeEventListener('touchstart', outsideClickListener)\r\n    }\r\n\r\n    document.addEventListener('mousedown', outsideClickListener)\r\n    document.addEventListener('touchstart', outsideClickListener)\r\n}\r\n","/** @module */\r\n\r\nimport CircleGraphic from './CircleGraphic.js'\r\nimport tooltipForEntity from '../sim/tooltipForEntity.js'\r\n\r\n/**\r\n * VoterCircle class with Handle component to take care of dragging.\r\n * VoronoiGroup component takes care of drawing votes.\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w - width of circle of candidate positions.\r\n * @param {Screen} screen\r\n * @param {Registrar} voterRegistrar\r\n * @param {Commander} commander\r\n * @param {Changes} changes\r\n * @param {Boolean} doLoad - Should we add the voter without adding to the history?\r\n * @constructor\r\n */\r\nexport default function VoterCircle(\r\n    p2,\r\n    p1,\r\n    w2,\r\n    w1,\r\n    densityProfile1,\r\n    screen,\r\n    voterRegistrar,\r\n    commander,\r\n    changes,\r\n    doLoad,\r\n    voterCommander,\r\n    sim,\r\n) {\r\n    const self = this\r\n\r\n    // Get assigned a id by the voterRegistrar list manager\r\n\r\n    const id = voterRegistrar.new(self)\r\n\r\n    // Instantiate Variables\r\n\r\n    // use commands to instantiate variables\r\n    self.instantiate = () => {\r\n        // set current value because we need to be able to undo by returning to these values\r\n        // voterCommander.setESenderForList.setCurrentValue(id, 0)\r\n        // voterCommander.setXYSenderForList.setCurrentValue(id, { x, y })\r\n        // voterCommander.setWSenderForList.setCurrentValue(id, w2)\r\n\r\n        const commands = [\r\n            voterCommander.setESenderForList.command(id, 1, 0), // set alive flag\r\n            voterCommander.setP2SenderForList.command(id, p2, p2),\r\n            voterCommander.setP1SenderForList.command(id, p1, p1),\r\n            voterCommander.setW2SenderForList.command(id, w2, w2),\r\n            voterCommander.setW1SenderForList.command(id, w1, w1),\r\n            voterCommander\r\n                .setDensityProfile1SenderForList.command(id, densityProfile1, densityProfile1),\r\n        ]\r\n        // Either load the commands because we don't want to create an item of history\r\n        // Or do the commands because want to store an item in history, so that we can undo.\r\n        if (doLoad) {\r\n            commander.loadCommands(commands)\r\n        } else {\r\n            commander.doCommands(commands)\r\n        }\r\n    }\r\n\r\n    self.setEAction = (e) => {\r\n        self.exists = e\r\n        changes.add(['draggables'])\r\n    }\r\n    self.setE = (e) => {\r\n        const cur = voterCommander.setESenderForList.getCurrentValue(id)\r\n        voterCommander.setESenderForList.go(id, e, cur)\r\n    }\r\n\r\n    self.setP2Action = (p) => {\r\n        self.p2 = structuredClone(p)\r\n        if (sim.election.dimensions === 2) {\r\n            self.x = p.x\r\n            self.y = p.y\r\n        }\r\n        changes.add(['draggables'])\r\n    }\r\n    self.setP1Action = (p) => {\r\n        self.p1 = p\r\n        if (sim.election.dimensions === 1) {\r\n            self.x = p\r\n            self.y = 250\r\n        }\r\n        changes.add(['draggables'])\r\n    }\r\n    self.setXY = (p) => {\r\n        if (sim.election.dimensions === 1) {\r\n            const cur = voterCommander.setP1SenderForList.getCurrentValue(id)\r\n            voterCommander.setP1SenderForList.go(id, p.x, cur)\r\n        } else {\r\n            const cur = voterCommander.setP2SenderForList.getCurrentValue(id)\r\n            voterCommander.setP2SenderForList.go(id, p, cur)\r\n        }\r\n    }\r\n    /** Do this when entering a state because x and y change.\r\n     *  Maybe x and y should be in the SimVoter instead... just speculating. */\r\n    self.updateXY = () => {\r\n        if (sim.election.dimensions === 1) {\r\n            self.setP1Action(self.p1)\r\n        } else {\r\n            self.setP2Action(self.p2)\r\n        }\r\n    }\r\n\r\n    self.setW2Action = (newW) => {\r\n        self.w2 = newW\r\n        changes.add(['width'])\r\n    }\r\n    self.setW2 = (newW) => {\r\n        const cur = voterCommander.setW2SenderForList.getCurrentValue(id)\r\n        voterCommander.setW2SenderForList.go(id, newW, cur)\r\n    }\r\n\r\n    self.setW1Action = (newW) => {\r\n        self.w1 = newW\r\n        changes.add(['width'])\r\n    }\r\n    self.setW1 = (newW) => {\r\n        const cur = voterCommander.setW1SenderForList.getCurrentValue(id)\r\n        voterCommander.setW1SenderForList.go(id, newW, cur)\r\n    }\r\n\r\n    /** Density Profile can be \"gaussian\" or \"step\" */\r\n    self.setDensityProfile1Action = (newDensityProfile1) => {\r\n        self.densityProfile1 = newDensityProfile1\r\n        changes.add(['densityProfile'])\r\n    }\r\n    self.setDensityProfile1 = (newDensityProfile1) => {\r\n        const cur = voterCommander.setDensityProfile1SenderForList.getCurrentValue(id)\r\n        voterCommander.setDensityProfile1SenderForList.go(id, newDensityProfile1, cur)\r\n    }\r\n\r\n    self.instantiate()\r\n\r\n    // Done instantiating variables\r\n\r\n    // Click Handler\r\n\r\n    self.click = () => {\r\n        tooltipForEntity(self, screen, sim)\r\n    }\r\n\r\n    // Rendering\r\n\r\n    const circle = new CircleGraphic(self, 13, '#999', screen)\r\n    self.circle = circle\r\n\r\n    self.renderForeground = () => {\r\n        // handle\r\n        circle.render()\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Register senders with the commander for setting entity values.\r\n * This is here because we need an action that takes an id.\r\n * @param {Registrar} voterRegistrar\r\n * @param {Commander} commander\r\n * @param {SimAddVoters} simAddVoters\r\n * @constructor\r\n */\r\nexport default function VoterCircleCommander(voterRegistrar, commander, simAddVoters) {\r\n    const self = this\r\n\r\n    const prefix = 'voters'\r\n\r\n    self.setESenderForList = commander.addSenderForList({\r\n        action: (id, e) => {\r\n            self.setNumberVoters(id + 1)\r\n            const voter = voterRegistrar.get(id)\r\n            voter.setEAction(e)\r\n        },\r\n        name: `${prefix}-exists`,\r\n    })\r\n\r\n    self.setP2SenderForList = commander.addSenderForList({\r\n        action: (id, p) => {\r\n            self.setNumberVoters(id + 1)\r\n            const voter = voterRegistrar.get(id)\r\n            voter.setP2Action(p)\r\n        },\r\n        name: `${prefix}-shape2D-point`,\r\n        props: { isChain: true },\r\n    })\r\n\r\n    self.setP1SenderForList = commander.addSenderForList({\r\n        action: (id, p) => {\r\n            self.setNumberVoters(id + 1)\r\n            const voter = voterRegistrar.get(id)\r\n            voter.setP1Action(p)\r\n        },\r\n        name: `${prefix}-shape1D-x`,\r\n        props: { isChain: true },\r\n    })\r\n\r\n    self.setW2SenderForList = commander.addSenderForList({\r\n        action: (id, w) => {\r\n            self.setNumberVoters(id + 1)\r\n            const voter = voterRegistrar.get(id)\r\n            voter.setW2Action(w)\r\n        },\r\n        name: `${prefix}-shape2D-width`,\r\n        props: { isChain: true },\r\n    })\r\n\r\n    self.setW1SenderForList = commander.addSenderForList({\r\n        action: (id, w) => {\r\n            self.setNumberVoters(id + 1)\r\n            const voter = voterRegistrar.get(id)\r\n            voter.setW1Action(w)\r\n        },\r\n        name: `${prefix}-shape1D-width`,\r\n        props: { isChain: true },\r\n    })\r\n\r\n    self.setDensityProfile1SenderForList = commander.addSenderForList({\r\n        action: (id, dp1) => {\r\n            self.setNumberVoters(id + 1)\r\n            const voter = voterRegistrar.get(id)\r\n            voter.setDensityProfile1Action(dp1)\r\n        },\r\n        name: `${prefix}-shape1D-densityProfile`,\r\n    })\r\n\r\n    // This is kind of weird because this value is not a good measure of the number of entities.\r\n    // An undo will reduce the number stored with the command name,\r\n    // but not reduce the number of entities.\r\n    // So we disable undo.\r\n    self.setNumberVotersSender = commander.addSender({\r\n        action: (num) => simAddVoters.setNumberVotersAction(num),\r\n        currentValue: 0,\r\n        name: `${prefix}-setNumberAtLeast`,\r\n        props: { isFirstAction: true },\r\n    })\r\n    self.setNumberVoters = (num) => {\r\n        commander.loadCommands([self.setNumberVotersSender.command(num)])\r\n    }\r\n}\r\n","import createAddVoter from './createAddVoter.js'\r\nimport Registrar from './Registrar.js'\r\nimport VoterCircle from '../voters/VoterCircle.js'\r\nimport VoterCircleCommander from '../voters/VoterCircleCommander.js'\r\n\r\n/** A component of sim.js that deals with adding voters. */\r\nexport default function SimAddVoters(screen, layout, changes, commander, sims, sim) {\r\n    const self = this\r\n\r\n    createAddVoter(layout, self)\r\n\r\n    const voterRegistrar = new Registrar()\r\n    const voterCommander = new VoterCircleCommander(voterRegistrar, commander, self)\r\n\r\n    self.addVoterPressed = () => {\r\n        const num = voterRegistrar.num() + 1\r\n        voterCommander.setNumberVoters(num)\r\n    }\r\n    self.setNumberVotersAction = (num) => {\r\n        while (voterRegistrar.num() < num) {\r\n            self.addVoterCircle(50, 50, 50, 200, 200, 'gaussian', false)\r\n        }\r\n    }\r\n\r\n    self.addVoterCircle = (x, y, p1, w2, w1, densityProfile1, doLoad) => {\r\n        // eslint-disable-next-line max-len\r\n        const voterCircle = new VoterCircle({ x, y }, p1, w2, w1, densityProfile1, screen, voterRegistrar, commander, changes, doLoad, voterCommander, sim)\r\n\r\n        sims.one.addSimVoterCircle(voterCircle)\r\n        sims.oneDOne.addSimVoterCircle(voterCircle)\r\n        sims.geoOne.addSimVoterCircle(voterCircle)\r\n        sims.sample.addSimVoterCircle(voterCircle)\r\n\r\n        const num = voterRegistrar.num()\r\n        voterCommander.setNumberVoters(num)\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Add buttons to layout for undo and redo, and connect them to commander for functionality.\r\n * @param {Layout} layout\r\n * @param {SimAddVoters} simAddVoters\r\n */\r\nexport default function createAddVoter(layout, simAddVoters) {\r\n    const addVoterButton = document.createElement('button')\r\n\r\n    addVoterButton.innerText = 'Add Voter'\r\n    addVoterButton.className = 'button2'\r\n\r\n    addVoterButton.onclick = () => {\r\n        simAddVoters.addVoterPressed()\r\n    }\r\n\r\n    layout.newElement('addVoter', addVoterButton)\r\n}\r\n","/** @module */\r\n\r\nimport { Tween } from '../../lib/tween.esm.js'\r\n\r\n/**\r\n * Square is a graphic.\r\n * It displays itself on a parent object.\r\n * Its parent object stores its x and y.\r\n * It shows a square at the parent object xy coordinates.\r\n * It animates the square when picking up and dropping.\r\n * @param {Object} parent\r\n * @param {Number} parent.x\r\n * @param {Number} parent.y\r\n * @param {Number} w - width of square to draw.\r\n * @param {Number} h - height of square to draw.\r\n * @param {Screen} screen\r\n * @constructor\r\n */\r\nexport default function SquareGraphic(parent, w, h, screen) {\r\n    const self = this\r\n    self.w = w // display width, because we're going to make animations with it\r\n    self.h = h\r\n    self.trueW = w // true width, because we want to return to this width after animating.\r\n    self.trueH = h\r\n\r\n    self.pickUp = function () {\r\n        self.tweenSq = new Tween(self)\r\n        self.tweenSq.to({ w: self.trueW + 10, h: self.trueH + 10 }, 100)\r\n        self.tweenSq.start()\r\n    }\r\n    self.drop = function () {\r\n        self.tweenSq = new Tween(self)\r\n        self.tweenSq.to({ w: self.trueW, h: self.trueH }, 100)\r\n        self.tweenSq.start()\r\n    }\r\n\r\n    // Graphics component\r\n    self.render = function () {\r\n        const { fctx } = screen\r\n\r\n        fctx.save()\r\n\r\n        if (self.tweenSq) {\r\n            self.tweenSq.update()\r\n        }\r\n\r\n        if (parent.exists === 0) { fctx.globalAlpha = 0.2 }\r\n\r\n        fctx.beginPath()\r\n        fctx.fillStyle = parent.color\r\n        fctx.rect(\r\n            (parent.x - 0.5 * self.w) - 0.5,\r\n            (parent.y - 0.5 * self.h) - 0.5,\r\n            self.w + 1,\r\n            self.h + 1,\r\n        )\r\n        fctx.fill()\r\n        fctx.stroke()\r\n\r\n        fctx.restore()\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport SquareGraphic from './SquareGraphic.js'\r\nimport { drawStrokedColor, textPercent } from '../utilities/graphicsUtilities.js'\r\nimport tooltipForEntity from '../sim/tooltipForEntity.js'\r\n\r\n/**\r\n * Candidate class on top of handle.\r\n * Candidate adds candidate behavior on top of a draggable handle handle.\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} wHandle\r\n * @param {Number} hHandle\r\n * @param {String} color\r\n * @param {Screen} screen\r\n * @param {Registrar} candidateRegistrar\r\n * @param {Commander} commander\r\n * @param {Changes} changes\r\n * @param {Boolean} doLoad - Should we add the candidateDistribution without adding to the history?\r\n * @constructor\r\n */\r\nexport default function Candidate(\r\n    p2,\r\n    p1,\r\n    wHandle,\r\n    hHandle,\r\n    color,\r\n    screen,\r\n    candidateRegistrar,\r\n    commander,\r\n    changes,\r\n    doLoad,\r\n    candidateCommander,\r\n    sim,\r\n) {\r\n    const self = this\r\n\r\n    const id = candidateRegistrar.new(self)\r\n\r\n    // Instantiate Variables\r\n\r\n    // use commands to instantiate variables\r\n    self.instantiate = () => {\r\n        // set current value because we need to be able to undo by returning to these values\r\n        // candidateCommander.setESenderForList.setCurrentValue(id, 0)\r\n        // candidateCommander.setXYSenderForList.setCurrentValue(id, { x, y })\r\n\r\n        const commands = [\r\n            // candidateCommander.setNumberCandidatesSender.command(id + 1),\r\n            candidateCommander.setESenderForList.command(id, 1, 0), // set alive flag\r\n            candidateCommander.setP2SenderForList.command(id, p2, p2),\r\n            candidateCommander.setP1SenderForList.command(id, p1, p1),\r\n            candidateCommander.setColorSenderForList.command(id, color, color), // set alive flag\r\n        ]\r\n        // Either load the commands because we don't want to create an item of history\r\n        // Or do the commands because want to store an item in history, so that we can undo.\r\n        if (doLoad) {\r\n            commander.loadCommands(commands)\r\n        } else {\r\n            commander.doCommands(commands)\r\n        }\r\n    }\r\n    self.setEAction = (e) => {\r\n        self.exists = e\r\n        changes.add(['draggables'])\r\n    }\r\n    self.setE = (e) => {\r\n        const cur = candidateCommander.setESenderForList.getCurrentValue(id)\r\n        candidateCommander.setESenderForList.go(id, e, cur)\r\n    }\r\n\r\n    self.setP2Action = (p) => {\r\n        self.p2 = structuredClone(p)\r\n        if (sim.election.dimensions === 2) {\r\n            self.x = p.x\r\n            self.y = p.y\r\n        }\r\n        changes.add(['draggables'])\r\n    }\r\n    self.setP1Action = (p) => {\r\n        self.p1 = p\r\n        if (sim.election.dimensions === 1) {\r\n            self.x = p\r\n            self.y = 250\r\n        }\r\n        changes.add(['draggables'])\r\n    }\r\n    self.setXY = (p) => {\r\n        if (sim.election.dimensions === 1) {\r\n            const cur = candidateCommander.setP1SenderForList.getCurrentValue(id)\r\n            candidateCommander.setP1SenderForList.go(id, p.x, cur)\r\n        } else {\r\n            const cur = candidateCommander.setP2SenderForList.getCurrentValue(id)\r\n            candidateCommander.setP2SenderForList.go(id, p, cur)\r\n        }\r\n    }\r\n    /** Do this when entering a state because x and y change.\r\n     *  Maybe x and y should be in the SimCandidate instead... just speculating. */\r\n    self.updateXY = () => {\r\n        if (sim.election.dimensions === 1) {\r\n            self.setP1Action(self.p1)\r\n        } else {\r\n            self.setP2Action(self.p2)\r\n        }\r\n    }\r\n\r\n    self.setColorAction = (newColor) => {\r\n        self.color = newColor\r\n        changes.add(['color'])\r\n    }\r\n    self.setColor = (e) => {\r\n        const cur = candidateCommander.setColorSenderForList.getCurrentValue(id)\r\n        candidateCommander.setColorSenderForList.go(id, e, cur)\r\n    }\r\n\r\n    self.instantiate()\r\n\r\n    // Click Handler\r\n\r\n    self.click = () => {\r\n        tooltipForEntity(self, screen, sim)\r\n    }\r\n\r\n    // Rendering\r\n\r\n    const square = new SquareGraphic(self, wHandle, hHandle, screen)\r\n    self.square = square\r\n\r\n    self.fraction = 0\r\n    self.setFraction = function (fraction) {\r\n        self.fraction = fraction\r\n    }\r\n\r\n    self.setWins = (wins) => {\r\n        self.wins = wins\r\n    }\r\n\r\n    self.renderForeground = function () {\r\n        square.render()\r\n\r\n        // show minimal graphics when rendering as a ghost.\r\n        if (self.exists === 0) return\r\n\r\n        drawStrokedColor(textPercent(self.fraction), self.x, self.y - square.h * 0.5 - 2, 20, 2, '#222', 1, screen.fctx)\r\n\r\n        if (self.wins !== undefined) {\r\n            drawStrokedColor(self.wins, self.x, self.y + square.h * 0.5 + 20 + 2, 20, 2, '#222', 1, screen.fctx)\r\n        }\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Register senders with the commander for setting entity values.\r\n * This is here because we need an action that takes an id.\r\n * @param {Registrar} candidateRegistrar\r\n * @param {Commander} commander\r\n * @param {Sim} sim\r\n * @constructor\r\n */\r\nexport default function CandidateCommander(candidateRegistrar, commander, sim) {\r\n    const self = this\r\n\r\n    const prefix = 'candidates'\r\n\r\n    self.setESenderForList = commander.addSenderForList({\r\n        action: (id, e) => {\r\n            self.setNumberCandidates(id + 1)\r\n            const candidate = candidateRegistrar.get(id)\r\n            candidate.setEAction(e)\r\n        },\r\n        name: `${prefix}-exists`,\r\n    })\r\n\r\n    self.setP2SenderForList = commander.addSenderForList({\r\n        action: (id, p) => {\r\n            self.setNumberCandidates(id + 1)\r\n            const candidate = candidateRegistrar.get(id)\r\n            candidate.setP2Action(p)\r\n        },\r\n        name: `${prefix}-shape2D-point`,\r\n        props: { isChain: true },\r\n    })\r\n\r\n    self.setP1SenderForList = commander.addSenderForList({\r\n        action: (id, p) => {\r\n            self.setNumberCandidates(id + 1)\r\n            const candidate = candidateRegistrar.get(id)\r\n            candidate.setP1Action(p)\r\n        },\r\n        name: `${prefix}-shape1D-x`,\r\n        props: { isChain: true },\r\n    })\r\n\r\n    self.setColorSenderForList = commander.addSenderForList({\r\n        action: (id, e) => {\r\n            self.setNumberCandidates(id + 1)\r\n            const candidate = candidateRegistrar.get(id)\r\n            candidate.setColorAction(e)\r\n        },\r\n        name: `${prefix}-color`,\r\n    })\r\n\r\n    // This is kind of weird because this value is not a good measure of the number of entities.\r\n    // An undo will reduce the number stored with the command name,\r\n    // but not reduce the number of entities.\r\n    // So we disable undo.\r\n    // Well, actually we can just loadCommands in order to avoid undo.\r\n    self.setNumberCandidatesSender = commander.addSender({\r\n        action: (num) => {\r\n            sim.setNumberCandidatesAction(num)\r\n        },\r\n        currentValue: 0,\r\n        name: `${prefix}-setNumberAtLeast`,\r\n        props: { isFirstAction: true },\r\n    })\r\n    self.setNumberCandidates = (num) => {\r\n        commander.loadCommands([self.setNumberCandidatesSender.command(num)])\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Add button to layout for adding a candidate\r\n * @param {Layout} layout\r\n * @param {Sim} sim\r\n */\r\nexport default function CreateAddCandidate(layout, sim) {\r\n    const self = this\r\n\r\n    const addCandidateButton = document.createElement('button')\r\n\r\n    addCandidateButton.className = 'button2'\r\n    addCandidateButton.innerText = 'Add Candidate'\r\n\r\n    addCandidateButton.onclick = () => {\r\n        sim.addCandidatePressed()\r\n    }\r\n\r\n    layout.newElement('addCandidate', addCandidateButton)\r\n\r\n    self.show = () => {\r\n        addCandidateButton.hidden = false\r\n    }\r\n    self.hide = () => {\r\n        addCandidateButton.hidden = true\r\n    }\r\n}\r\n","import Candidate from '../candidates/Candidate.js'\r\nimport CandidateCommander from '../candidates/CandidateCommander.js'\r\nimport { standardizeColor } from '../utilities/jsHelpers.js'\r\nimport CreateAddCandidate from './CreateAddCandidate.js'\r\nimport Registrar from './Registrar.js'\r\n\r\n/** A component of sim.js that deals with adding candidates. */\r\nexport default function SimAddCandidates(screen, layout, changes, commander, sims, sim) {\r\n    const self = this\r\n    self.canButton = new CreateAddCandidate(layout, self)\r\n    const candidateRegistrar = new Registrar()\r\n    const candidateCommander = new CandidateCommander(candidateRegistrar, commander, self)\r\n\r\n    self.addCandidatePressed = () => {\r\n        // really, we want to make a command to set numCandidates to at least an amount\r\n        const num = candidateRegistrar.num() + 1\r\n        candidateCommander.setNumberCandidates(num)\r\n    }\r\n    self.setNumberCandidatesAction = (num) => {\r\n        while (candidateRegistrar.num() < num) {\r\n            const color = standardizeColor('yellow')\r\n            self.addCandidate(50, 50, 50, color, false)\r\n        }\r\n    }\r\n\r\n    self.addCandidate = (x, y, p1, c, doLoad) => {\r\n        // eslint-disable-next-line no-new, max-len\r\n        const candidate = new Candidate({ x, y }, p1, 21, 21, c, screen, candidateRegistrar, commander, changes, doLoad, candidateCommander, sim)\r\n        sims.one.addSimCandidate(candidate)\r\n        sims.oneDOne.addSimCandidate(candidate)\r\n        sims.geoOne.addSimCandidate(candidate)\r\n\r\n        const num = candidateRegistrar.num()\r\n        candidateCommander.setNumberCandidates(num)\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport tooltipForEntity from '../sim/tooltipForEntity.js'\r\nimport SquareGraphic from './SquareGraphic.js'\r\n\r\n/**\r\n * This represents a spatial distribution of candidates.\r\n * A draggable handle handle provides draggable behavior.\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w2\r\n * @param {Screen} screen\r\n * @param {Registrar} candidateDnRegistrar\r\n * @param {Commander} commander\r\n * @param {Changes} changes\r\n * @param {Boolean} doLoad - Should we add the candidateDistribution without adding to the history?\r\n * @constructor\r\n */\r\nexport default function CandidateDistribution(\r\n    p2,\r\n    p1,\r\n    w2,\r\n    screen,\r\n    candidateDnRegistrar,\r\n    commander,\r\n    changes,\r\n    doLoad,\r\n    candidateDnCommander,\r\n    sim,\r\n) {\r\n    const self = this\r\n\r\n    const id = candidateDnRegistrar.new(self)\r\n\r\n    // Instantiate Variables\r\n\r\n    // use commands to instantiate variables\r\n    self.instantiate = () => {\r\n        // candidateDnCommander.setESenderForList.setCurrentValue(id, 0)\r\n        // candidateDnCommander.setXYSenderForList.setCurrentValue(id, { x, y })\r\n        // candidateDnCommander.setWSenderForList.setCurrentValue(id, w2)\r\n        const commands = [\r\n            candidateDnCommander.setESenderForList.command(id, 1, 0), // set alive flag\r\n            candidateDnCommander.setP2SenderForList.command(id, p2, p2),\r\n            candidateDnCommander.setP1SenderForList.command(id, p1, p1),\r\n            candidateDnCommander.setW2SenderForList.command(id, w2, w2),\r\n        ]\r\n        // Either load the commands because we don't want to create an item of history\r\n        // Or do the commands because want to store an item in history, so that we can undo.\r\n        if (doLoad) {\r\n            commander.loadCommands(commands)\r\n        } else {\r\n            commander.doCommands(commands)\r\n        }\r\n    }\r\n\r\n    self.setEAction = (e) => {\r\n        self.exists = e\r\n        changes.add(['draggables'])\r\n    }\r\n    self.setE = (e) => {\r\n        const cur = candidateDnCommander.setESenderForList.getCurrentValue(id)\r\n        candidateDnCommander.setESenderForList.go(id, e, cur)\r\n    }\r\n\r\n    self.setP2Action = (p) => {\r\n        self.p2 = structuredClone(p)\r\n        if (sim.election.dimensions === 2) {\r\n            self.x = p.x\r\n            self.y = p.y\r\n        }\r\n        changes.add(['draggables'])\r\n    }\r\n    self.setP1Action = (p) => {\r\n        self.p1 = p\r\n        if (sim.election.dimensions === 1) {\r\n            self.x = p\r\n            self.y = 150\r\n        }\r\n        changes.add(['draggables'])\r\n    }\r\n    self.setXY = (p) => {\r\n        if (sim.election.dimensions === 1) {\r\n            const cur = candidateDnCommander.setP1SenderForList.getCurrentValue(id)\r\n            candidateDnCommander.setP1SenderForList.go(id, p.x, cur)\r\n        } else {\r\n            const cur = candidateDnCommander.setP2SenderForList.getCurrentValue(id)\r\n            candidateDnCommander.setP2SenderForList.go(id, p, cur)\r\n        }\r\n    }\r\n    /** Do this when entering a state because x and y change.\r\n     *  Maybe x and y should be in the SimCandidateDn instead... just speculating. */\r\n    self.updateXY = () => {\r\n        if (sim.election.dimensions === 1) {\r\n            self.setP1Action(self.p1)\r\n        } else {\r\n            self.setP2Action(self.p2)\r\n        }\r\n    }\r\n\r\n    self.setW2Action = (newW) => {\r\n        self.w2 = newW\r\n        changes.add(['width'])\r\n    }\r\n    self.setW2 = (newW) => {\r\n        const cur = candidateDnCommander.setW2SenderForList.getCurrentValue(id)\r\n        candidateDnCommander.setW2SenderForList.go(id, newW, cur)\r\n    }\r\n\r\n    self.instantiate()\r\n\r\n    // Click Handler\r\n\r\n    self.click = () => {\r\n        tooltipForEntity(self, screen, sim)\r\n    }\r\n\r\n    // Rendering\r\n\r\n    self.color = '#ccc'\r\n\r\n    const square = new SquareGraphic(self, 21, 21, screen) // square is for rendering\r\n    self.square = square\r\n\r\n    self.render = function () {\r\n        const { ctx } = screen\r\n\r\n        ctx.beginPath()\r\n        // ctx.fillStyle = \"grey\"\r\n        ctx.arc(self.x, self.y, self.w2 * 0.5, 0, 2 * Math.PI)\r\n        // ctx.fill()\r\n        ctx.stroke()\r\n    }\r\n    self.renderForeground = () => {\r\n        square.render()\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Register senders with the commander for setting entity values.\r\n * This is here because we need an action that takes an id.\r\n * @param {Registrar} candidateDnRegistrar\r\n * @param {Commander} commander\r\n * @param {Sim} sim\r\n * @constructor\r\n */\r\nexport default function CandidateDnCommander(candidateDnRegistrar, commander, sim) {\r\n    const self = this\r\n\r\n    const prefix = 'candidateDns'\r\n\r\n    self.setESenderForList = commander.addSenderForList({\r\n        action: (id, e) => {\r\n            self.setNumberCandidateDns(id + 1)\r\n            const candidateDn = candidateDnRegistrar.get(id)\r\n            candidateDn.setEAction(e)\r\n        },\r\n        name: `${prefix}-exists`,\r\n    })\r\n\r\n    self.setP2SenderForList = commander.addSenderForList({\r\n        action: (id, p) => {\r\n            self.setNumberCandidateDns(id + 1)\r\n            const candidateDn = candidateDnRegistrar.get(id)\r\n            candidateDn.setP2Action(p)\r\n        },\r\n        name: `${prefix}-shape2D-point`,\r\n        props: { isChain: true },\r\n    })\r\n\r\n    self.setP1SenderForList = commander.addSenderForList({\r\n        action: (id, p) => {\r\n            self.setNumberCandidateDns(id + 1)\r\n            const candidateDn = candidateDnRegistrar.get(id)\r\n            candidateDn.setP1Action(p)\r\n        },\r\n        name: `${prefix}-shape1D-x`,\r\n        props: { isChain: true },\r\n    })\r\n\r\n    self.setW2SenderForList = commander.addSenderForList({\r\n        action: (id, w2) => {\r\n            self.setNumberCandidateDns(id + 1)\r\n            const candidateDn = candidateDnRegistrar.get(id)\r\n            candidateDn.setW2Action(w2)\r\n        },\r\n        name: `${prefix}-shape2D-width`,\r\n        props: { isChain: true },\r\n    })\r\n\r\n    // This is kind of weird because this value is not a good measure of the number of entities.\r\n    // An undo will reduce the number stored with the command name,\r\n    // but not reduce the number of entities.\r\n    // So we disable undo.\r\n    self.setNumberCandidateDnsSender = commander.addSender({\r\n        action: (num) => {\r\n            sim.setNumberCandidateDnsAction(num)\r\n        },\r\n        currentValue: 0,\r\n        name: `${prefix}-setNumberAtLeast`,\r\n        props: { isFirstAction: true },\r\n    })\r\n    self.setNumberCandidateDns = (num) => {\r\n        commander.loadCommands([self.setNumberCandidateDnsSender.command(num)])\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Add button to layout for adding a candidate\r\n * @param {Layout} layout\r\n * @param {Commander} commander\r\n */\r\nexport default function CreateAddCandidateDistribution(layout, sim) {\r\n    const self = this\r\n    const addCandidateDistributionButton = document.createElement('button')\r\n\r\n    addCandidateDistributionButton.className = 'button2'\r\n    addCandidateDistributionButton.innerText = 'Add Candidate Distribution'\r\n\r\n    addCandidateDistributionButton.onclick = () => {\r\n        sim.addCandidateDistributionPressed()\r\n    }\r\n\r\n    layout.newElement('addCandidateDistribution', addCandidateDistributionButton)\r\n\r\n    self.show = () => {\r\n        addCandidateDistributionButton.hidden = false\r\n    }\r\n    self.hide = () => {\r\n        addCandidateDistributionButton.hidden = true\r\n    }\r\n}\r\n","import CandidateDistribution from '../candidates/CandidateDistribution.js'\r\nimport CandidateDnCommander from '../candidates/CandidateDnCommander.js'\r\nimport CreateAddCandidateDistribution from './CreateAddCandidateDistribution.js'\r\nimport Registrar from './Registrar.js'\r\n\r\n/** A component of sim.js that deals with adding candidate distributions. */\r\nexport default function SimAddCandidateDns(screen, layout, changes, commander, sims, sim) {\r\n    const self = this\r\n\r\n    self.canDnButton = new CreateAddCandidateDistribution(layout, self)\r\n    const candidateDnRegistrar = new Registrar()\r\n    const candidateDnCommander = new CandidateDnCommander(candidateDnRegistrar, commander, self)\r\n\r\n    self.addCandidateDistributionPressed = () => {\r\n        const num = candidateDnRegistrar.num() + 1\r\n        candidateDnCommander.setNumberCandidateDns(num)\r\n    }\r\n    self.setNumberCandidateDnsAction = (num) => {\r\n        while (candidateDnRegistrar.num() < num) {\r\n            self.addCandidateDistribution(50, 50, 50, 200, false)\r\n        }\r\n    }\r\n\r\n    self.addCandidateDistribution = (x, y, p1, w2, doLoad) => {\r\n        // eslint-disable-next-line no-new, max-len\r\n        const candidateDistribution = new CandidateDistribution({ x, y }, p1, w2, screen, candidateDnRegistrar, commander, changes, doLoad, candidateDnCommander, sim)\r\n        sims.sample.addSimCandidateDistribution(candidateDistribution)\r\n\r\n        const num = candidateDnRegistrar.num()\r\n        candidateDnCommander.setNumberCandidateDns(num)\r\n    }\r\n}\r\n","/** @module */\r\n\r\n// d3-voronoi\r\n// d3-select\r\n// d3-range\r\n\r\nimport { Delaunay } from '../../lib/d3-delaunay.esm.js'\r\n// import { Delaunay } from 'd3-delaunay'\r\n// import { Delaunay } from 'https://cdn.skypack.dev/d3-delaunay@6'\r\n// https://github.com/d3/d3-delaunay\r\n\r\n/**\r\n * Draw Voronoi cells to show votes.\r\n * OneDVoronoi is a component of OneDVoterBlock.\r\n * @param {VoterGroup} voterGroup\r\n * @param {Election} election\r\n * @param {Screen} screen\r\n * @constructor\r\n */\r\nexport default function OneDVoronoi(voterGroup, screen) {\r\n    const self = this\r\n\r\n    let cans\r\n    let voronoi\r\n\r\n    self.update = function (candidates) {\r\n        cans = candidates.getCandidates()\r\n        const points = cans.map((e) => [e.x, e.y])\r\n        const delaunay = Delaunay.from(points)\r\n        voronoi = delaunay.voronoi([0, 0, screen.width, screen.height])\r\n    }\r\n\r\n    self.render = function () {\r\n        const { ctx } = screen\r\n        const { x, w1, densityProfile1 } = voterGroup\r\n        const h = 100\r\n\r\n        ctx.save()\r\n\r\n        // clip the voronoi diagram\r\n\r\n        // http://jsfiddle.net/jimrhoskins/dDUC3/1/\r\n        // https://dustinpfister.github.io/2019/10/08/canvas-clip/\r\n\r\n        ctx.beginPath()\r\n        doPath()\r\n        // ctx.closePath()\r\n        ctx.clip()\r\n\r\n        const n = cans.length\r\n        for (let i = 0; i < n; i++) {\r\n            ctx.beginPath()\r\n            voronoi.renderCell(i, ctx)\r\n            ctx.fillStyle = cans[i].color\r\n            ctx.fill()\r\n            ctx.stroke()\r\n        }\r\n\r\n        ctx.beginPath()\r\n        doPath()\r\n        ctx.stroke()\r\n\r\n        ctx.restore()\r\n\r\n        function doPath() {\r\n            if (densityProfile1 === 'gaussian') {\r\n                gaussianPath()\r\n            } else {\r\n                rectanglePath()\r\n            }\r\n        }\r\n        function gaussianPath() {\r\n            const sigma = w1 / Math.sqrt(2 * Math.PI) // w = sigma * sqrt(2*pi)\r\n            const amp = h\r\n            const bottom = 150 + h * 0.5\r\n            // start bottom left\r\n            ctx.moveTo(0, bottom)\r\n            const pa = []\r\n            for (let i = 0; i <= screen.width; i += 1) {\r\n                const xp = 0.5 * ((i - x) / sigma) ** 2\r\n                const y = bottom - amp * Math.exp(-xp)\r\n                pa.push(y)\r\n                ctx.lineTo(i, y)\r\n            }\r\n            // end bottom right\r\n            ctx.lineTo(screen.width, bottom)\r\n            ctx.lineTo(0, bottom)\r\n            // ctx.closePath()\r\n        }\r\n        function rectanglePath() {\r\n            ctx.rect(x - w1 * 0.5, 150 - h * 0.5, w1, h)\r\n        }\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport OneDVoronoi from './OneDVoronoi.js'\r\nimport SimVoter from './SimVoter.js'\r\n\r\n/**\r\n * Adds functionality for showing votes.\r\n * OneDVoterBlock is a subclass of SimVoter.\r\n * @param {VoterCircle} voterCircle\r\n * @param {DraggableManager} dragm\r\n * @param {Screen} screen\r\n * @constructor\r\n */\r\nexport default function OneDVoterBlock(voterCircle, dragm, screen) {\r\n    const self = this\r\n    SimVoter.call(self, voterCircle, dragm)\r\n\r\n    const oneDVoronoiBlock = new OneDVoronoi(voterCircle, screen)\r\n\r\n    self.update = function (candidates) {\r\n        oneDVoronoiBlock.update(candidates)\r\n    }\r\n\r\n    // Graphics component\r\n    self.render = function () {\r\n        // circle\r\n        oneDVoronoiBlock.render()\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport SimCandidate from '../../candidates/SimCandidate.js'\r\nimport SimCandidateList from '../../candidates/SimCandidateList.js'\r\nimport SimVoterList from '../../voters/SimVoterList.js'\r\nimport SimBase from './SimBase.js'\r\nimport OneDVoterBlock from '../../voters/OneDVoterBlock.js'\r\n\r\n/**\r\n * Simulate one election with\r\n *   candidates in defined positions, and\r\n *   voters in a distribution that will be summed over.\r\n * Plan:\r\n * * SimOneDOne is a subclass of SimBase.\r\n * * OneDVoterBlock is a subclass of SimVoter.\r\n * * OneDVoronoi is a component of OneDVoterBlock.\r\n * @param {Screen} screen\r\n * @param {Menu} menu\r\n * @param {Changes} changes\r\n * @param {Election} election\r\n * @param {Sim} sim\r\n * @constructor\r\n */\r\nexport default function SimOneDOne(screen, menu, changes, oneElection, sim) {\r\n    const self = this\r\n\r\n    SimBase.call(self, screen, changes, sim)\r\n\r\n    const oneVoters = new SimVoterList(sim)\r\n\r\n    const simCandidateList = new SimCandidateList(sim)\r\n\r\n    self.addSimCandidate = (candidate) => {\r\n        simCandidateList.newCandidate(new SimCandidate(candidate, self.dragm))\r\n    }\r\n\r\n    self.addSimVoterCircle = (voterCircle) => {\r\n        oneVoters.newVoterGroup(new OneDVoterBlock(voterCircle, self.dragm, screen))\r\n    }\r\n\r\n    const superEnter = self.enter\r\n    self.enter = () => {\r\n        superEnter()\r\n        sim.simAddCandidates.canButton.show()\r\n        sim.election.setDimensions(1)\r\n        oneVoters.updateXY()\r\n        simCandidateList.updateXY()\r\n    }\r\n\r\n    self.exit = () => {\r\n        sim.simAddCandidates.canButton.hide()\r\n    }\r\n\r\n    self.update = () => {\r\n        if (changes.checkNone()) return\r\n        // clear changes, reset to []\r\n        changes.clear()\r\n        oneElection.updateTallies(oneVoters, simCandidateList)\r\n        oneVoters.update(simCandidateList)\r\n        screen.clear()\r\n        self.render()\r\n    }\r\n\r\n    self.render = () => {\r\n        oneVoters.render()\r\n    }\r\n    self.renderForeground = () => {\r\n        // sampleElections.renderForeground()\r\n        oneVoters.renderForeground()\r\n        simCandidateList.renderForeground()\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport SimOne from './states/SimOne.js'\r\nimport SimSample from './states/SimSample.js'\r\nimport SimGeoOne from './states/SimGeoOne.js'\r\nimport SimAddVoters from './SimAddVoters.js'\r\nimport SimAddCandidates from './SimAddCandidates.js'\r\nimport SimAddCandidateDns from './SimAddCandidateDns.js'\r\nimport addSimControlsLabel from './addSimControlsLabel.js'\r\nimport SimOneDOne from './states/SimOneDOne.js'\r\n\r\n/**\r\n * Simulation is the main task we're trying to accomplish in this program.\r\n * There are multiple states that the sim can be in.\r\n * Each state simulates something different.\r\n * Each state has initialization, update, and render procedures.\r\n * This is a state machine.\r\n * @param {Screen} screen\r\n * @param {Menu} menu\r\n * @param {Changes} changes\r\n * @param {OneElection} oneElection\r\n * @param {SampleElections} sampleElections\r\n * @param {GeoElection} geoElection\r\n * @param {Commander} commander\r\n *\r\n * @constructor\r\n */\r\nexport default function Sim(\r\n    screen,\r\n    menu,\r\n    changes,\r\n    election,\r\n    oneElection,\r\n    sampleElections,\r\n    geoElection,\r\n    commander,\r\n    layout,\r\n) {\r\n    const self = this\r\n\r\n    // Components //\r\n\r\n    self.election = election\r\n\r\n    // States //\r\n\r\n    const sims = {\r\n        one: new SimOne(screen, menu, changes, oneElection, self),\r\n        oneDOne: new SimOneDOne(screen, menu, changes, oneElection, self),\r\n        // eslint-disable-next-line max-len\r\n        sample: new SimSample(screen, menu, changes, sampleElections, self),\r\n        geoOne: new SimGeoOne(screen, menu, changes, geoElection, self),\r\n    }\r\n\r\n    // Entities //\r\n\r\n    self.simAddVoters = new SimAddVoters(screen, layout, changes, commander, sims, self)\r\n    self.simAddCandidates = new SimAddCandidates(screen, layout, changes, commander, sims, self)\r\n    self.simAddCandidateDns = new SimAddCandidateDns(screen, layout, changes, commander, sims, self)\r\n\r\n    // Default Entities //\r\n\r\n    self.simAddCandidates.addCandidate(50, 100, 50, '#e05020', true)\r\n    self.simAddCandidates.addCandidate(100, 50, 100, '#50e020', true)\r\n    self.simAddCandidates.addCandidate(300 - 100, 300 - 50, 200, '#2050e0', true)\r\n    self.simAddCandidateDns.addCandidateDistribution(150, 150, 150, 200, true)\r\n    self.simAddVoters.addVoterCircle(50, 150, 50, 200, 200, 'gaussian', true)\r\n    self.simAddVoters.addVoterCircle(250, 150, 250, 200, 200, 'gaussian', true)\r\n\r\n    // State Machine //\r\n\r\n    self.state = 'one' // default\r\n    // self.typeExit = self.state\r\n    changes.add(['simType'])\r\n\r\n    self.update = () => {\r\n        // state change\r\n        if (changes.check(['simType'])) {\r\n            // exit states\r\n            Object.keys(sims).forEach((k) => sims[k].exit())\r\n            // enter state\r\n            sims[self.state].enter()\r\n        }\r\n\r\n        // state update\r\n        sims[self.state].update()\r\n    }\r\n    self.renderForeground = () => { sims[self.state].renderForeground() }\r\n    self.render = () => { sims[self.state].render() }\r\n\r\n    self.setShowNonExistingEntities = (a) => {\r\n        self.showGhosts = a\r\n        changes.add(['showGhosts'])\r\n    }\r\n\r\n    // Buttons //\r\n\r\n    addSimControlsLabel(layout)\r\n\r\n    // -- Menu -- //\r\n\r\n    // add a menu item to switch between types of sims\r\n    // a list of simulation types\r\n    self.typeList = [\r\n        { name: 'One Election', value: 'one', state: '' },\r\n        { name: '1D One Election', value: 'oneDOne', state: '' },\r\n        { name: 'Sample Elections', value: 'sample', state: '' },\r\n        { name: 'Geo Election', value: 'geoOne', state: '' },\r\n    ]\r\n    menu.addMenuItem(\r\n        self,\r\n        {\r\n            label: 'Simulation:',\r\n            prop: 'state',\r\n            setProp: (p) => { self.state = p },\r\n            options: self.typeList,\r\n            change: ['simType'],\r\n        },\r\n    )\r\n}\r\n","/** Add a label for the sim controls */\r\nexport default function addSimControlsLabel(layout) {\r\n    const label = document.createElement('div')\r\n    label.setAttribute('class', 'button-group-label')\r\n    label.innerText = 'Sim Controls:'\r\n    layout.newElement('simControlsLabel', label)\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Simulate winners from many sampled elections.\r\n * Candidates are sampled from a distribution.\r\n * Winners are drawn as points.\r\n * The simulation is dynamic. More simulations are performed at each frame.\r\n * @param {Screen} screen\r\n * @param {Menu} menu\r\n * @param {Election} election\r\n * @constructor\r\n */\r\nexport default function SampleElections(screen, menu, election) {\r\n    const self = this\r\n\r\n    self.points = []\r\n    self.newPoints = []\r\n\r\n    self.startSim = function () {\r\n        self.points = []\r\n        clearBuffer()\r\n    }\r\n\r\n    self.addSim = function (sampleVoters, sampleCandidates) {\r\n        // add more points\r\n\r\n        if (sampleVoters.getVoterGroups().length === 0) return 1\r\n        if (sampleCandidates.getCandidateDistributions().length === 0) return 1\r\n\r\n        if (self.points.length > 5000) return 1\r\n        // this limit right now is about graphics rendering.\r\n        // todo: render to a buffer\r\n\r\n        // number of sample elections\r\n        const ns = 20\r\n\r\n        const voterGroups = sampleVoters.getVoterGroups()\r\n\r\n        for (let i = 0; i < ns; i++) {\r\n            // choose a number of candidates\r\n            let nk\r\n            if (election.method.checkElectionType() === 'singleWinner') {\r\n                nk = 5\r\n            } else if (election.method.checkElectionType() === 'allocation') {\r\n                nk = 10\r\n            }\r\n            const canList = []\r\n            for (let k = 0; k < nk; k++) {\r\n                // sample a point from the distribution of candidates\r\n                const point = sampleCandidates.sampler.samplePoint()\r\n\r\n                // make a candidate\r\n                canList.push({ p2: point })\r\n            }\r\n\r\n            // find winner position\r\n            const results = election.runElection(voterGroups, canList)\r\n\r\n            if (election.method.checkElectionType() === 'singleWinner') {\r\n                const { winner } = results\r\n\r\n                // record point\r\n                const winPoint = winner.p2\r\n                self.points.push(winPoint)\r\n                self.newPoints.push(winPoint)\r\n            } else {\r\n                const { allocation } = results\r\n\r\n                const jitterSize = 10\r\n                canList.forEach(\r\n                    (can, k) => {\r\n                        const numPoints = allocation[k]\r\n                        for (let m = 0; m < numPoints; m++) {\r\n                            let winPoint\r\n                            if (m === 0) {\r\n                                // record point\r\n                                winPoint = can.p2\r\n                            } else {\r\n                                // add jitter\r\n                                winPoint = {\r\n                                    x: can.p2.x + (Math.random() - 0.5) * jitterSize,\r\n                                    y: can.p2.y + (Math.random() - 0.5) * jitterSize,\r\n                                }\r\n                            }\r\n                            // record point\r\n                            self.points.push(winPoint)\r\n                            self.newPoints.push(winPoint)\r\n                        }\r\n                    },\r\n                )\r\n            }\r\n        }\r\n        renderToBuffer()\r\n        return 0\r\n    }\r\n\r\n    // buffer canvas\r\n    const canvas2 = document.createElement('canvas')\r\n    canvas2.width = screen.canvas.width\r\n    canvas2.height = screen.canvas.height\r\n    const context2 = canvas2.getContext('2d')\r\n\r\n    function clearBuffer() {\r\n        context2.clearRect(0, 0, canvas2.width, canvas2.height)\r\n    }\r\n\r\n    function renderToBuffer() {\r\n        const ctx = context2\r\n        renderPoints(ctx, self.newPoints)\r\n        self.newPoints = []\r\n    }\r\n\r\n    self.render = function () {\r\n        if (screen.noBuffers) {\r\n            self.noBufferRender()\r\n        } else {\r\n            self.bufferRender()\r\n        }\r\n    }\r\n\r\n    self.bufferRender = function () {\r\n        const { ctx } = screen\r\n        ctx.drawImage(canvas2, 0, 0)\r\n    }\r\n\r\n    // use this if we want to export to an SVG\r\n    self.noBufferRender = function () {\r\n        const { ctx } = screen\r\n        renderPoints(ctx, self.points)\r\n    }\r\n\r\n    function renderPoints(ctx, points) {\r\n        ctx.fillStyle = 'grey'\r\n        const n = points.length\r\n        for (let i = 0; i < n; i++) {\r\n            const p = points[i]\r\n            // dot\r\n            ctx.beginPath()\r\n            ctx.arc(p.x, p.y, 3, 0, 2 * Math.PI)\r\n            ctx.fill()\r\n        }\r\n    }\r\n}\r\n","\r\n// https://codepen.io/darsain/pen/XpgMGp\r\n\r\nconst r = Math.round\r\n\r\nexport function toRGBA(d) {\r\n    const l = d.length\r\n    const rgba = Array(4).fill()\r\n    if (d.slice(0, 3).toLowerCase() === 'rgb') {\r\n        d = d.replace(' ', '').split(',')\r\n        rgba[0] = parseInt(d[0].slice(d[3].toLowerCase() === 'a' ? 5 : 4), 10)\r\n        rgba[1] = parseInt(d[1], 10)\r\n        rgba[2] = parseInt(d[2], 10)\r\n        rgba[3] = d[3] ? parseFloat(d[3]) : -1\r\n    } else {\r\n        if (l < 6) d = parseInt(String(d[1]) + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? String(d[4]) + d[4] : ''), 16)\r\n        else d = parseInt(d.slice(1), 16)\r\n        rgba[0] = (d >> 16) & 255\r\n        rgba[1] = (d >> 8) & 255\r\n        rgba[2] = d & 255\r\n        rgba[3] = l === 9 || l === 5 ? r((((d >> 24) & 255) / 255) * 10000) / 10000 : -1\r\n    }\r\n    return rgba\r\n}\r\n\r\nexport function blend(from, to, p = 0.5) {\r\n    from = from.trim()\r\n    to = to.trim()\r\n    const b = p < 0\r\n    p = b ? p * -1 : p\r\n    const f = toRGBA(from)\r\n    const t = toRGBA(to)\r\n\r\n    if (to[0] === 'r') {\r\n        return `rgb${to[3] === 'a' ? 'a(' : '('\r\n        }${r(((t[0] - f[0]) * p) + f[0])},${\r\n            r(((t[1] - f[1]) * p) + f[1])},${\r\n            r(((t[2] - f[2]) * p) + f[2])\r\n        }${f[3] < 0 && t[3] < 0 ? '' : `,${\r\n            f[3] > -1 && t[3] > -1\r\n                ? r((((t[3] - f[3]) * p) + f[3]) * 10000) / 10000\r\n                : t[3] < 0 ? f[3] : t[3]}`})`\r\n    }\r\n\r\n    return `#${(0x100000000 + ((\r\n        f[3] > -1 && t[3] > -1\r\n            ? r((((t[3] - f[3]) * p) + f[3]) * 255)\r\n            : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255\r\n    ) * 0x1000000)\r\n    + (r(((t[0] - f[0]) * p) + f[0]) * 0x10000)\r\n        + (r(((t[1] - f[1]) * p) + f[1]) * 0x100)\r\n        + r(((t[2] - f[2]) * p) + f[2])\r\n    ).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3)}`\r\n}\r\n","/** @module */\r\n\r\n// import { normal } from 'color-blend'\r\n\r\nimport { blend, toRGBA } from '../../lib/colorBlendScript.js'\r\n\r\n/**\r\n * Blend colors in given proportions.\r\n * @param {Number[]} f - proportions of colors, as fraction of 1.\r\n * @param {String[]} colors -\r\n * @returns {String} - Color\r\n */\r\nexport default function colorBlend(f, colors) { // f fractions\r\n    let fracSum = f[0]\r\n    let colorB = colors[0]\r\n    for (let i = 1; i < f.length; i++) {\r\n        const fraction = frac(f[i], fracSum)\r\n        colorB = blend(colorB, colors[i], fraction)\r\n        fracSum += f[i]\r\n    }\r\n    return colorB\r\n}\r\n\r\nexport function colorBlend3(f, colors) { // f fractions\r\n    const fraction01 = frac(f[1], f[0])\r\n    const color01 = blend(colors[0], colors[1], fraction01)\r\n    const fraction012 = frac(f[2], f[1] + f[0])\r\n    const color012 = blend(color01, colors[2], fraction012)\r\n    return color012\r\n}\r\n\r\nfunction frac(thing, other) {\r\n    return thing / (thing + other)\r\n}\r\n\r\nexport { toRGBA }\r\n","/** @module */\r\n\r\nimport colorBlend, { toRGBA } from './colorBlend.js'\r\n\r\n/**\r\n * An election with many districts.\r\n * Voters are from many groups.\r\n * Voter groups are centered around a point.\r\n * The point is moved by simplex noise to create distinct districts.\r\n * All the voter groups share the same voter basis.\r\n * @param {Menu} menu\r\n * @param {Election} election\r\n * @constructor\r\n */\r\nexport default function GeoElection(screen, menu, election) {\r\n    const self = this\r\n\r\n    self.updateVotes = (geoVoters, candidates) => {\r\n        if (geoVoters.getSimVoterGroups().length === 0) return\r\n        if (candidates.getCandidates().length === 0) return\r\n        self.updateStatewideTallies(geoVoters, candidates)\r\n        self.updateNoiseImage(geoVoters, candidates)\r\n        self.runDistrictElections(geoVoters, candidates)\r\n        self.updateWinColors(candidates)\r\n        self.updateColorBlendGeoMap(candidates)\r\n        self.updateWins(candidates)\r\n    }\r\n\r\n    /** Show tallies over all the districts\r\n     * Find statewide support for candidates (parties).\r\n     */\r\n    self.updateStatewideTallies = function (geoVoters, candidates) {\r\n        const canList = candidates.getCandidates()\r\n        const { allVoterGroups } = geoVoters\r\n        const electionResults = election.runElection(allVoterGroups, canList)\r\n        const { tallyFractions } = electionResults.votes\r\n        candidates.setCandidateFractions(tallyFractions)\r\n    }\r\n\r\n    /** Visualize voter demographics according to votes for candidates within a voterGroup.\r\n     * Hold mini-elections within a voterGroup.\r\n     */\r\n    self.updateNoiseImage = function (geoVoters, candidates) {\r\n        // visualize simplex noise\r\n        // self.geoVoters.noiseImage.load(sn)\r\n\r\n        // visualize noise with election data\r\n        const canList = candidates.getCandidates()\r\n        const { voterGroupsByTract } = geoVoters\r\n\r\n        const resultsByTract = voterGroupsByTract.map(\r\n            (row) => row.map(\r\n                (voterGroups) => election.runElection(voterGroups, canList),\r\n            ),\r\n        )\r\n\r\n        // get color\r\n        const colorSet = canList.map((can) => can.color)\r\n        const allColors = resultsByTract.map(\r\n            (row) => row.map(\r\n                (results) => {\r\n                    const { tallyFractions } = results.votes\r\n                    const color = toRGBA(colorBlend(tallyFractions, colorSet))\r\n                    return color\r\n                },\r\n            ),\r\n        )\r\n\r\n        geoVoters.noiseImage.loadColors(allColors)\r\n    }\r\n\r\n    /** Run separate elections in each district. */\r\n    self.runDistrictElections = (geoVoters, candidates) => {\r\n        // Loop through districts.\r\n        // Find who won.\r\n\r\n        const canList = candidates.getCandidates()\r\n        const { voterGroupsByDistrict } = geoVoters\r\n\r\n        self.resultsByDistrict = voterGroupsByDistrict.map(\r\n            (voterGroups) => election.runElection(voterGroups, canList),\r\n        )\r\n    }\r\n    self.updateWinColors = (candidates) => {\r\n        // calculate color for win map\r\n        if (election.method.checkElectionType() === 'singleWinner') {\r\n            self.winnerColors = self.resultsByDistrict.map((results) => results.winner.color)\r\n        } else {\r\n            const canList = candidates.getCandidates()\r\n            const colorSet = canList.map((can) => can.color)\r\n            self.winnerColors = self.resultsByDistrict.map(\r\n                (results) => {\r\n                    const { allocation } = results\r\n                    const sum = allocation.reduce((p, c) => p + c)\r\n                    const fractions = allocation.map((x) => x / sum)\r\n                    const color = colorBlend(fractions, colorSet)\r\n                    return color\r\n                },\r\n            )\r\n        }\r\n    }\r\n\r\n    // Show wins across all districts for each candidate\r\n    self.updateWins = function (candidates) {\r\n        // make a histogram\r\n        const canList = candidates.getCandidates()\r\n        const numCandidates = canList.length\r\n        const histogram = Array(numCandidates).fill(0)\r\n        if (election.method.checkElectionType() === 'singleWinner') {\r\n            const iWinners = self.resultsByDistrict.map((results) => results.iWinner)\r\n            iWinners.forEach((iWinner) => {\r\n                histogram[iWinner] += 1\r\n            })\r\n        } else {\r\n            self.resultsByDistrict.forEach(\r\n                (results) => {\r\n                    const { allocation } = results\r\n                    for (let i = 0; i < numCandidates; i++) {\r\n                        histogram[i] += allocation[i]\r\n                    }\r\n                },\r\n            )\r\n        }\r\n        candidates.setCandidateWins(histogram)\r\n    }\r\n\r\n    /** Update color for each district, based on votes for each candidate.\r\n     * Blend candidate colors in proportion to their votes.\r\n     */\r\n    self.updateColorBlendGeoMap = (candidates) => {\r\n        self.blendColors = self.resultsByDistrict.map((results) => {\r\n            const { tallyFractions } = results.votes\r\n            const canList = candidates.getCandidates()\r\n            const colorSet = canList.map((can) => can.color)\r\n            const color = colorBlend(tallyFractions, colorSet)\r\n            return color\r\n        })\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Layout keeps an internal ordered list of div names.\r\n * It creates a parent div to fill with these divs.\r\n * New divs are added according to the order of the names.\r\n * If the new div isn't in the list, then it is added at the end of the parent div.\r\n * @param {String[]} - Names in an ordered list for the layout.\r\n * @constructor\r\n */\r\nexport default function Layout(order) {\r\n    const self = this\r\n\r\n    const divsByName = {}\r\n    const extraDivs = []\r\n\r\n    /**\r\n     * Adds a new div with a name that should be in Layout's internal ordered list.\r\n     * @param {String} name\r\n     * @param {HTMLElement} div\r\n     */\r\n    self.newElement = (name, div) => {\r\n        if (order.includes(name)) {\r\n            divsByName[name] = div\r\n        } else {\r\n            extraDivs.push(div)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * When we're done adding new divs, we return a parent div.\r\n     * @returns The parent div containing all other divs in order.\r\n     */\r\n    self.makeComponent = () => {\r\n        const parent = document.createElement('div')\r\n        order.forEach((name) => {\r\n            const div = divsByName[name]\r\n            if (div !== undefined) {\r\n                parent.appendChild(div)\r\n            }\r\n        })\r\n        extraDivs.forEach((div) => {\r\n            parent.appendChild(div)\r\n        })\r\n        return parent\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * A simple election.\r\n * Voters are in shaped distributions.\r\n * @param {Screen} screen\r\n * @param {Menu} menu\r\n * @param {Election} election\r\n * @constructor\r\n */\r\nexport default function OneElection(screen, menu, election) {\r\n    const self = this\r\n\r\n    self.updateTallies = function (oneVoters, candidates) {\r\n        // only update the tallies for each candidate so they can be shown\r\n\r\n        // Voters cast votes for candidates.\r\n        // There is also a separate graphical representation in VoronoiGroup.js\r\n\r\n        if (oneVoters.getVoterGroups().length === 0) return\r\n        if (candidates.getCandidates().length === 0) return\r\n        const votes = election.castVotes(oneVoters, candidates)\r\n        candidates.setCandidateFractions(votes.tallyFractions)\r\n    }\r\n}\r\n","/**\r\n * Keep a\r\n * @param {Commander} commander  */\r\nexport default function CommandStore(commander) {\r\n    const self = this\r\n\r\n    // A list of actions we can execute (for sender)\r\n    const actions = []\r\n\r\n    /**\r\n     * A menu item or other object can add an action that it wants to execute with a value.\r\n     * The action can be performed by calling commander.do(command),\r\n     * where command has a name and value.\r\n     * @param {String} name - The name of the action.\r\n     * @param {Function} action - The action function itself, which is called with a value.\r\n     */\r\n    self.addSender = (args) => {\r\n        const {\r\n            name, action, props,\r\n        } = args\r\n\r\n        actions[name] = action\r\n        const command = (value) => ({ name, value, props })\r\n        const go = (value) => commander.do(command(value))\r\n        const sender = { command, go }\r\n        return sender\r\n    }\r\n\r\n    /**\r\n     * Make a sender with a command and a way to do the command.\r\n     * This type of sender deals with lists.\r\n     *\r\n     * Say we want to change a value for the nth candidate.\r\n     * And say the nth candidate doesn't exist.\r\n     * Then we have to use an action which acts on the list of candidates,\r\n     * rather than the candidate itself.\r\n     *\r\n     * @param {Object} args\r\n     * @returns {Object} - methods command(id,value) and go(id,value)\r\n     */\r\n    self.addSenderForList = (args) => {\r\n        const {\r\n            name, action, props,\r\n        } = args\r\n\r\n        actions[name] = action\r\n        const command = (id, value, currentValue) => ({\r\n            name, id, value, props, currentValue,\r\n        })\r\n        const go = (id, value, currentValue) => commander.do(command(id, value, currentValue))\r\n        const sender = { command, go }\r\n        return sender\r\n    }\r\n\r\n    /**\r\n     * Actually execute the action.\r\n     * @param {Object} command -\r\n     */\r\n    self.execute = (command) => {\r\n        const { name, id, value } = command\r\n        const action = actions[name]\r\n        if (id !== undefined) {\r\n            action(id, value)\r\n        } else {\r\n            action(value)\r\n        }\r\n    }\r\n}\r\n","/** Handle the Config */\r\nexport default function ConfigKeeper(commander) {\r\n    const self = this\r\n\r\n    // The list of all mementos\r\n    const config = {}\r\n\r\n    const firstActions = []\r\n\r\n    /**\r\n     * A menu item or other object can add an action that it wants to execute with a value.\r\n     * The action can be performed by calling commander.do(command),\r\n     * where command has a name and value.\r\n     * @param {String} name - The name of the action.\r\n     * @param {Function} action - The action function itself, which is called with a value.\r\n     */\r\n    self.addSender = (args) => {\r\n        const { name, currentValue, props } = args\r\n        if (props !== undefined && props.isFirstAction) {\r\n            firstActions[name] = true\r\n        }\r\n        config[name] = currentValue\r\n    }\r\n\r\n    /**\r\n     * Make a sender with a command and a way to do the command.\r\n     * This type of sender deals with lists.\r\n     *\r\n     * Say we want to change a value for the nth candidate.\r\n     * And say the nth candidate doesn't exist.\r\n     * Then we have to use an action which acts on the list of candidates,\r\n     * rather than the candidate itself.\r\n     *\r\n     * @param {Object} args\r\n     * @returns {Function} - a method to get the current value at an id.\r\n     */\r\n    self.addSenderForList = (args) => {\r\n        const { name, props } = args\r\n        if (props !== undefined && props.isFirstAction) {\r\n            firstActions[name] = true\r\n        }\r\n        config[name] = []\r\n\r\n        const getCurrentValue = (id) => config[name][id]\r\n        return getCurrentValue\r\n    }\r\n\r\n    /**\r\n     * Update the config when executing a command.\r\n     * @param {Object} command -\r\n     */\r\n    self.execute = (command) => {\r\n        const { name, id, value } = command\r\n        if (id !== undefined) {\r\n            config[name][id] = value\r\n        } else {\r\n            config[name] = value\r\n        }\r\n    }\r\n\r\n    self.makeUndo = (command) => {\r\n        const { name, id, props } = command // command is {name, value, props}\r\n\r\n        // Store the current value so we can undo the command.\r\n        let currentValue\r\n        if (id === undefined) {\r\n            currentValue = config[name]\r\n        } else {\r\n            currentValue = config[name][id]\r\n            if (currentValue === undefined) {\r\n                currentValue = command.currentValue\r\n            }\r\n        }\r\n\r\n        // Store how to undo the command.\r\n        const undoCommand = {\r\n            name, id, value: currentValue, props,\r\n        }\r\n\r\n        return undoCommand\r\n    }\r\n\r\n    self.passLoadConfig = (newConfig) => {\r\n        // newConfig is a list of commands to execute.\r\n        self.loadConfigPriority(newConfig, 'high')\r\n        self.loadConfigPriority(newConfig, 'low')\r\n    }\r\n\r\n    self.loadConfigPriority = (newConfig, priority) => {\r\n        // newConfig is a list of commands to execute.\r\n        const names = Object.keys(newConfig)\r\n        names.forEach((name) => {\r\n            // Decide whether to process commands, based on their priority.\r\n            const isHigh = firstActions[name] !== undefined\r\n            if (priority === 'low' && isHigh) {\r\n                return\r\n            }\r\n            if (priority === 'high' && !isHigh) {\r\n                return\r\n            }\r\n\r\n            // if we have a list, then create commands for each item in the list\r\n            const valueArray = newConfig[name]\r\n            if (valueArray instanceof Array) {\r\n                valueArray.forEach((value, id) => {\r\n                    // const subValue = newConfig[name][id]\r\n                    const command = { name, id, value }\r\n                    commander.execute(command)\r\n                })\r\n            } else {\r\n                const value = valueArray\r\n                const command = { name, value }\r\n                commander.execute(command)\r\n            }\r\n        })\r\n    }\r\n\r\n    self.passLoadCommands = (commands) => {\r\n        // execute commands without adding to history\r\n        commands.forEach((command) => {\r\n            commander.execute(command)\r\n        })\r\n    }\r\n\r\n    self.getConfig = () => structuredClone(config)\r\n}\r\n","export default function History(commander) {\r\n    const self = this\r\n\r\n    // Keep commands and undos in history\r\n    const history = []\r\n    let head = -1 // Head is where we are in history, where our head is at.\r\n\r\n    self.clearHistory = () => {\r\n        history.splice(0, history.length)\r\n        head = -1\r\n    }\r\n\r\n    /**\r\n     * We want to do a command. We need to keep track of what we do so we can undo it.\r\n     * @param {Object} command\r\n     * @param {String} command.name\r\n     * @param {(String|Number|Boolean)} command.value\r\n     * @param {Object} command.props - a catchall for easier coding\r\n     */\r\n    self.passDo = (command) => {\r\n        const undoCommand = commander.makeUndo(command)\r\n\r\n        // remove future redos\r\n        // example: head:-1 means history will be cleared splice(0,length)\r\n        history.splice(head + 1, history.length - (head + 1))\r\n\r\n        // Actually preform the command.\r\n        commander.execute(command)\r\n\r\n        // Add command to history\r\n        history.push([{ command, undoCommand }])\r\n        head += 1\r\n    }\r\n\r\n    /**\r\n     * Do a set of commands together, so they have one history item.\r\n     * @param {Object[]} commands - a list of command objects\r\n     */\r\n    self.passDoCommands = (commands) => {\r\n        // remove future redos\r\n        // example: head:-1 means history will be cleared splice(0,length)\r\n        history.splice(head + 1, history.length - (head + 1))\r\n\r\n        const historyItem = []\r\n        commands.forEach((command) => {\r\n        // todo: make into one undo item\r\n\r\n            const undoCommand = commander.makeUndo(command)\r\n\r\n            // Store in one history item\r\n            historyItem.push({ command, undoCommand })\r\n\r\n            // Actually preform the command.\r\n            commander.execute(command)\r\n        })\r\n\r\n        // Add command to history\r\n        history.push(historyItem)\r\n        head += 1\r\n    }\r\n\r\n    // control the duration of the setXY undos with a timeout. Here's a default timeout.\r\n    const chainDuration = 30\r\n    let chainTimer = setTimeout(() => null, chainDuration)\r\n\r\n    self.undo = () => {\r\n        if (head === -1) return // There is no history\r\n\r\n        const last = history[head]\r\n        last.forEach((pair) => { commander.execute(pair.undoCommand) })\r\n\r\n        head -= 1 // Now we're in the past.\r\n\r\n        // If we're in a setXY chain, then continue with another undo after a pause.\r\n        const { undoCommand } = last[0]\r\n        if (undoCommand.props === undefined) return\r\n        if (undoCommand.props.isChain !== true) return\r\n        if (head === -1) return\r\n        const penUltimate = history[head][0]\r\n        if (penUltimate.undoCommand.name === undoCommand.name) {\r\n            // todo: make this only work for repeated setXY commands\r\n            // set timer and callback\r\n            clearTimeout(chainTimer)\r\n            chainTimer = setTimeout(self.undo, chainDuration)\r\n        }\r\n    }\r\n\r\n    self.redo = () => {\r\n        if (head === history.length - 1) return // Nothing to do\r\n\r\n        const next = history[head + 1]\r\n        next.forEach((pair) => commander.execute(pair.command))\r\n\r\n        head += 1 // Now we're in the future.\r\n\r\n        // If we're in a setXY chain, then continue with another redo after a pause.\r\n        const { command } = next[0]\r\n        if (command.props === undefined) return\r\n        if (command.props.isChain !== true) return\r\n        if (head === history.length - 1) return\r\n        const nextnext = history[head + 1][0]\r\n        if (nextnext.command.name === command.name) {\r\n            // todo: make this only work for repeated setXY commands\r\n            // set timer and callback\r\n            clearTimeout(chainTimer)\r\n            chainTimer = setTimeout(self.redo, chainDuration)\r\n        }\r\n    }\r\n}\r\n","/** @module */\r\n\r\nimport CommandStore from './CommandStore.js'\r\nimport ConfigKeeper from './ConfigKeeper.js'\r\nimport History from './History.js'\r\n\r\n/**\r\n * Both the command pattern and the memento pattern are used here.\r\n * Commands are performed to make changes to the mementos.\r\n *\r\n * Memento Pattern:\r\n *  Caretaker: ConfigKeeper class. It keeps config as a list of mementos.\r\n *  Originator: sender returned by CommandStore.addSender, used by menuItem, Candidate, Voter, etc\r\n *  Mementos: Config is a list of mementos. It's not a strict pattern.\r\n *  Also, the way we are storing commands is like storing mementos of a commands (not strictly).\r\n *\r\n * Command Pattern:\r\n * * Client: a CandidateCommander, VoterCommander, MenuItem, etc\r\n * * Command: Here, a command is a memento of a way to make a command.\r\n *     CommandStore stores lists of ways to make commands.\r\n *     mostly with a name and an action.\r\n *     Also, History stores a list of commands.\r\n *  Sender: A sender is returned by CommandStore.addSender.\r\n *  Receiver: a property of a Candidate, Voter, MenuItem, etc.\r\n *  For example, Candidate.setXY calls CandidateCommander.setXYSenderForList.go(id, value),\r\n *    which then calls Candidate.setXYAction to set Candidate.x and Candidate.y\r\n *\r\n * This isn't exactly either pattern.\r\n * Instead of commands with execute functions,\r\n * we use CommandStore, a class that stores lists of ways to make commands, given parameters.\r\n * Instead of mementos, the lists of ways to make commands act as mementos.\r\n *\r\n * Initially, the three component classes here were part of one larger class,\r\n * but hopefully it is easier to read code that is shorter and sticks to one context.\r\n * This class is similar to the mediator in the mediator pattern.\r\n *\r\n * References:\r\n * * [Command Pattern on refactoring.guru](https://refactoring.guru/design-patterns/command)\r\n * * [Memento Pattern on refactoring.guru](https://refactoring.guru/design-patterns/memento)\r\n * * [Mediator Pattern on refactoring.guru](https://refactoring.guru/design-patterns/mediator)\r\n * @constructor\r\n */\r\nexport default function Commander(comMessenger) {\r\n    const self = this\r\n\r\n    const commandStore = new CommandStore(self)\r\n    const configKeeper = new ConfigKeeper(self)\r\n    const history = new History(self)\r\n    comMessenger.addCommander(self)\r\n\r\n    /**\r\n     * A menu item or other object can add an action that it wants to execute with a value.\r\n     * The action can be performed by calling commander.do(command),\r\n     * where command has a name and value.\r\n     * @param {Object} args - argument catchall\r\n     * @param {String} args.name - The name of the action.\r\n     * @param {Function} args.action - The action function itself, which is called with a value.\r\n     */\r\n\r\n    // make a sender with a command and a way to do the command\r\n    self.addSender = (args) => {\r\n        configKeeper.addSender(args)\r\n        const sender = commandStore.addSender(args)\r\n        return sender\r\n    }\r\n\r\n    /** Say we want to change a value for the nth candidate.\r\n     * And say the nth candidate doesn't exist.\r\n     * Then we have to use an action which acts on the list of candidates,\r\n     * rather than the candidate itself.\r\n     */\r\n\r\n    /**\r\n     * Make a sender with a command and a way to do the command.\r\n     * This type of sender deals with lists.\r\n     * @param {Object} args\r\n     * @returns {Object} - methods command(id,value) and go(id,value)\r\n     */\r\n    self.addSenderForList = (args) => {\r\n        const sender = commandStore.addSenderForList(args)\r\n        sender.getCurrentValue = configKeeper.addSenderForList(args)\r\n        return sender\r\n    }\r\n\r\n    /**\r\n     * Actually execute the action.\r\n     * @param {Object} command -\r\n     */\r\n    self.execute = (command) => {\r\n        configKeeper.execute(command)\r\n        commandStore.execute(command)\r\n    }\r\n\r\n    // ConfigKeeper functions\r\n\r\n    self.makeUndo = configKeeper.makeUndo\r\n    self.passLoadConfig = configKeeper.passLoadConfig\r\n    self.passLoadCommands = configKeeper.passLoadCommands\r\n    self.getConfig = configKeeper.getConfig\r\n\r\n    self.loadConfig = (newConfig) => {\r\n        // the broadcast will call passLoadConfig\r\n        comMessenger.broadcastLoadConfig(newConfig, self)\r\n    }\r\n\r\n    self.loadCommands = (commands) => {\r\n        // the broadcast will call passLoadComands\r\n        comMessenger.broadCastLoadCommands(commands, self)\r\n    }\r\n\r\n    // History functions\r\n\r\n    /**\r\n     * Put a commandMessenger in the middle,\r\n     * between the command being asked for and the command being done.\r\n     * @param {Object} command - a command to do. See passDo.\r\n     */\r\n    self.do = (command) => {\r\n        // the broadcast will call passDo\r\n        comMessenger.broadcastDo(command, self)\r\n    }\r\n\r\n    self.doCommands = (commands) => {\r\n        // the broadcast will call passDoCommands\r\n        comMessenger.broadcastDoCommands(commands, self)\r\n    }\r\n\r\n    self.passDo = history.passDo\r\n    self.passDoCommands = history.passDoCommands\r\n    self.undo = history.undo\r\n    self.redo = history.redo\r\n    self.clearHistory = history.clearHistory\r\n}\r\n","/** @module */\r\n\r\nimport { orderedJsonStringify } from '../utilities/jsHelpers.js'\r\n\r\n/**\r\n * Add buttons for saving the configuration to a textbox.\r\n * @param {Layout} layout\r\n * @param {Commander} commander\r\n */\r\nexport default function addSaveConfigToText(layout, commander) {\r\n    const button = document.createElement('button')\r\n\r\n    button.className = 'button2'\r\n\r\n    button.innerText = 'Save Config To Text'\r\n\r\n    const text = document.createElement('textarea')\r\n\r\n    button.onclick = () => {\r\n        const config = commander.getConfig()\r\n        text.value = orderedJsonStringify(config)\r\n    }\r\n\r\n    const clearDiv = document.createElement('div')\r\n\r\n    const div = document.createElement('div')\r\n    div.appendChild(button)\r\n    div.appendChild(clearDiv)\r\n    div.appendChild(text)\r\n\r\n    layout.newElement('saveConfigToText', div)\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Add buttons for saving the configuration to a link.\r\n * @param {Layout} layout\r\n * @param {Commander} commander\r\n */\r\nexport default function addSaveConfigToLink(layout, commander, sandboxURL) {\r\n    const button = document.createElement('button')\r\n    button.className = 'button2'\r\n    button.innerText = 'Save Link'\r\n\r\n    const button2 = document.createElement('button')\r\n    button2.className = 'button2'\r\n    button2.innerText = 'Copy Link to Clipboard'\r\n\r\n    const text = document.createElement('textarea')\r\n\r\n    button.onclick = () => {\r\n        const link = getLink()\r\n        text.value = link\r\n    }\r\n    button2.onclick = () => {\r\n        const link = getLink()\r\n        navigator.clipboard.writeText(link)\r\n    }\r\n    function getLink() {\r\n        const config = commander.getConfig()\r\n        const encodedConfig = encodeURIComponent(JSON.stringify(config))\r\n        const currentUrlFolder = getFolder()\r\n\r\n        const link = `${currentUrlFolder}/${sandboxURL}?a=${encodedConfig}`\r\n        return link\r\n    }\r\n    function getFolder() {\r\n        const sp = document.location.href.split('/')\r\n        const sl = sp.slice(0, sp.length - 1)\r\n        const folder = sl.join('/')\r\n        return folder\r\n    }\r\n\r\n    const clearDiv = document.createElement('div')\r\n\r\n    const div = document.createElement('div')\r\n    div.appendChild(button)\r\n    div.appendChild(button2)\r\n    div.appendChild(clearDiv)\r\n    div.appendChild(text)\r\n\r\n    layout.newElement('saveConfigToLink', div)\r\n}\r\n","/** @module */\r\n\r\nimport Changes from './Changes.js'\r\nimport Screen from './Screen.js'\r\nimport addSVGOutput from './addSVGOutput.js'\r\nimport Menu from '../menu/Menu.js'\r\nimport Election from '../election/Election.js'\r\nimport Sim from '../sim/Sim.js'\r\nimport SampleElections from '../election/SampleElections.js'\r\nimport GeoElection from '../election/GeoElection.js'\r\nimport Layout from './Layout.js'\r\nimport OneElection from '../election/OneElection.js'\r\nimport Commander from '../command/Commander.js'\r\nimport addUndo from '../command/addUndo.js'\r\nimport addSaveConfigToText from '../command/addSaveConfigToText.js'\r\nimport addLoadConfigText from '../command/loadConfigText.js'\r\nimport addSaveConfigToLink from '../command/addSaveConfigToLink.js'\r\n\r\n/**\r\n * Set up a user interface to run a simulation.\r\n * @param {Object} config - An object containing commands. A command is a {name,value} pair.\r\n */\r\nexport default function sandbox(config, comMessenger, sandboxURL) {\r\n    // manage dependent calculations because we only want to do calculations if we need to\r\n    const changes = new Changes()\r\n\r\n    const layout = new Layout([\r\n        'menu',\r\n        'simControlsLabel',\r\n        'addVoter',\r\n        'addCandidate',\r\n        'addCandidateDistribution',\r\n        'undo',\r\n        'redo',\r\n        'clearDiv',\r\n        'screen',\r\n        'tooltips',\r\n        'foreground',\r\n        'geoMaps',\r\n        'saveConfigToLink',\r\n        'saveConfigToText',\r\n        'loadConfigText',\r\n        'svgUIDiv',\r\n    ])\r\n\r\n    const commander = new Commander(comMessenger)\r\n\r\n    const menu = new Menu(changes, layout, commander)\r\n\r\n    addUndo(layout, commander)\r\n\r\n    addSaveConfigToLink(layout, commander, sandboxURL)\r\n\r\n    addSaveConfigToText(layout, commander)\r\n\r\n    addLoadConfigText(layout, commander)\r\n\r\n    const screen = new Screen(300, 300, layout)\r\n\r\n    addSVGOutput(screen, draw, layout)\r\n\r\n    const election = new Election(menu)\r\n\r\n    const oneElection = new OneElection(screen, menu, election)\r\n\r\n    const sampleElections = new SampleElections(screen, menu, election)\r\n\r\n    const geoElection = new GeoElection(screen, menu, election)\r\n\r\n    // eslint-disable-next-line max-len\r\n    const sim = new Sim(screen, menu, changes, election, oneElection, sampleElections, geoElection, commander, layout)\r\n\r\n    commander.loadConfig(config)\r\n    commander.clearHistory()\r\n\r\n    const div = layout.makeComponent()\r\n\r\n    window.requestAnimationFrame(gameLoop)\r\n\r\n    return div\r\n\r\n    function gameLoop() {\r\n        update()\r\n        drawForeground()\r\n        window.requestAnimationFrame(gameLoop)\r\n    }\r\n\r\n    function update() {\r\n        sim.update()\r\n    }\r\n\r\n    function drawForeground() {\r\n        screen.clearForeground()\r\n        sim.renderForeground()\r\n    }\r\n\r\n    function draw() {\r\n        screen.clear()\r\n        sim.render()\r\n        sim.renderForeground()\r\n    }\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Add buttons to layout for undo and redo, and connect them to commander for functionality.\r\n * @param {Layout} layout\r\n * @param {Commander} commander\r\n */\r\nexport default function addUndo(layout, commander) {\r\n    const undoButton = document.createElement('button')\r\n    const redoButton = document.createElement('button')\r\n\r\n    undoButton.className = 'button2'\r\n    redoButton.className = 'button2'\r\n\r\n    undoButton.innerText = 'Undo'\r\n    redoButton.innerText = 'Redo'\r\n\r\n    undoButton.onclick = commander.undo\r\n    redoButton.onclick = commander.redo\r\n\r\n    layout.newElement('undo', undoButton)\r\n    layout.newElement('redo', redoButton)\r\n}\r\n","/** @module */\r\n\r\n/**\r\n * Add buttons to layout for undo and redo, and connect them to commander for functionality.\r\n * @param {Layout} layout\r\n * @param {Commander} commander\r\n */\r\nexport default function addLoadConfigText(layout, commander) {\r\n    const button = document.createElement('button')\r\n\r\n    button.className = 'button2'\r\n\r\n    button.innerText = 'Load Config Text'\r\n\r\n    const text = document.createElement('textarea')\r\n\r\n    button.onclick = () => {\r\n        if (text.value === '') return\r\n        const config = JSON.parse(text.value)\r\n        commander.loadConfig(config)\r\n    }\r\n\r\n    const clearDiv = document.createElement('div')\r\n\r\n    const div = document.createElement('div')\r\n    div.appendChild(button)\r\n    div.appendChild(clearDiv)\r\n    div.appendChild(text)\r\n\r\n    layout.newElement('loadConfigText', div)\r\n}\r\n","/** @module */\r\n\r\nimport checkURL from '../command/checkURL.js'\r\nimport ComMessenger from '../command/ComMessenger.js'\r\nimport sandbox from './sandbox.js'\r\n\r\n/** Find all the divs of class \"sandbox\".\r\n * Add the sandbox as a neighbor under the same parent. */\r\nconst targets = Array.from(document.getElementsByClassName('sandbox'))\r\ntargets.forEach((target) => {\r\n    const hasConfig = target.dataset.config !== undefined\r\n    const targetConfig = (hasConfig) ? JSON.parse(target.dataset.config) : {}\r\n    const cu = checkURL()\r\n    const config = (cu.yes) ? cu.config : targetConfig\r\n\r\n    const hasSandboxURL = target.dataset.sandboxurl !== undefined\r\n    const sandboxURL = hasSandboxURL ? target.dataset.sandboxurl : ''\r\n\r\n    const comMessenger = new ComMessenger()\r\n    const div = sandbox(config, comMessenger, sandboxURL)\r\n    const parent = target.parentNode\r\n    parent.appendChild(div)\r\n})\r\n","/** @module */\r\n\r\n/**\r\n * Check if the URL is giving a configuration.\r\n * @returns {Object} - Property yes means we have a config to use from the URL.\r\n */\r\nexport default function checkURL() {\r\n    const urlParams = new URLSearchParams(window.location.search)\r\n\r\n    const yes = urlParams.has('a')\r\n\r\n    const config = yes ? JSON.parse(urlParams.get('a')) : {}\r\n\r\n    return { yes, config }\r\n}\r\n"],"names":["protect","commanders","linked","this","setLinked","value","addCommander","commander","push","broadcastDo","command","originCommander","forEach","com","passDo","broadcastDoCommands","commands","passDoCommands","broadcastLoadConfig","newConfig","passLoadConfig","broadCastLoadCommands","passLoadCommands","self","changes","add","changeList","c","check","n","includes","checkNone","length","clear","splice","handlers","start","move","end","touchmove","touchstart","touchend","set","eHandlers","Object","assign","w","h","layout","width","height","canvas","document","createElement","setAttribute","ctx","getContext","tooltips","foreground","fctx","geoMaps","gctx","clearDiv","newElement","noBuffers","pixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","$705ca8a2f34171f8$var$getPixelRatio","style","h3","Math","round","scale","clearRect","clearForeground","setCtx","setFCtx","setGCtx","setNoBuffers","showGeoMaps","display","hideGeoMaps","eventHandlers","$506b705d01454b72$export$2e2bcd8739ae039","onmousedown","e","onmousemove","onmouseup","addEventListener","current","$1241477ff5cc3c1e$var$STYLES","$1241477ff5cc3c1e$export$3b0a2f84a08ecd6c","$1241477ff5cc3c1e$var$CanvasGradient","$1241477ff5cc3c1e$var$CanvasPattern","$1241477ff5cc3c1e$var$namedEntities","$1241477ff5cc3c1e$var$format","str","args","i","keys","replace","RegExp","$1241477ff5cc3c1e$var$randomString","holder","randomstring","Error","chars","floor","random","$1241477ff5cc3c1e$var$getDominantBaseline","textBaseline","mapping","alphabetic","hanging","top","bottom","middle","items","radix","entity","base10","lookup","split","parseInt","$1241477ff5cc3c1e$var$createNamedToNumberedLookup","strokeStyle","svgAttr","svg","apply","fillStyle","lineCap","lineJoin","miterLimit","lineWidth","shadowColor","shadowOffsetX","shadowOffsetY","textAlign","lineDash","gradientNode","__root","__ctx","prototype","addColorStop","offset","color","matches","stop","__createElement","indexOf","exec","r","g","b","appendChild","pattern","o","defaultOptions","enableMirroring","arguments","options","undefined","__document","__canvas","__setDefaultStyles","__stack","__getStyleState","__groupStack","createElementNS","setAttributeNS","__ids","__defs","__currentElement","elementName","properties","resetFill","key","element","__applyStyleState","styleState","__applyStyleToCurrentElement","type","__currentElementsToStyle","currentStyleGroup","children","node","id","childNodes","getAttribute","currentElement","attr","opacity","globalAlpha","__closestGroupOrSvg","nodeName","parentNode","getSerializedSvg","fixNamedEntities","regexp","serialized","XMLSerializer","serializeToString","test","getSvg","save","group","parent","restore","pop","state","__addTransform","t","__applyCurrentDefaultPath","transform","x","y","rotate","angle","degrees","PI","cx","translate","a","d","f","beginPath","path","__currentDefaultPath","__currentPosition","console","error","__addPathCommand","moveTo","closePath","lineTo","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","quadraticCurveTo","cpx","cpy","$1241477ff5cc3c1e$var$normalize","vector","len","sqrt","screen","draw","svgUIDiv","button","className","innerText","onclick","old","oldF","svgCtx","svgHideButton","hidden","svgDiv","innerHTML","downloadLink","url","encodeURIComponent","href","outputSVG","oldG","svgGCtx","gSvg","gSvgDiv","gDownloadLink","gUrl","outputGSVG","download","margin","buttonConfig","onChoose","config","name","nameIsHTML","dom","fixMargin","max","marginRight","realname","onClick","turnOff","isOn","turnOn","config1","data","makeData","buttonConfigs","doMakeData","labelName","label","labelIsHTML","isCheckbox","isCheckboxBool","justButton","buttonHidden","buttonDOMByValue","init","buttons","buttonsByName","labelDOM","conf","$d019958dda7398e8$export$2e2bcd8739ae039","onToggle","i1","selected","updateNames","data2","redraw","configureHidden","buttonName","entries","buttonData","setTimeout","highlight","propName","propValue","ibu","bu","ibu1","theButton","filter","object","prop","setProp","change","list","sender","go","action","select","addSender","currentValue","configure","choose","$4088c71a26df2b7b$export$2e2bcd8739ae039","$ced2438c3869b330$var$buttonWidth","numButtons","divMenu","addMenuItem","choice","menuItem","$ced2438c3869b330$export$2e2bcd8739ae039","cans","lines","Array","k","c1","c2","$7b2626bce2a28c1d$var$equidistantLine","$7b2626bce2a28c1d$var$findLines","sumArea","voterGroup","area","lineSet","$7b2626bce2a28c1d$var$sumCircle","dx","dy","circle","sum","x1","y1","diff2","half","high","low","line","ay","A","ax","Infinity","y2","min","$51d4c6038662af31$export$d02631cccf789723","$51d4c6038662af31$var$sortObjByKey","isArray","map","sort","reduce","v","$51d4c6038662af31$export$e94e7ee3b047a94d","mean","sd","ERF_A","x2","down","ratio","expofun","exp","radical","sign","$51d4c6038662af31$var$erf","$51d4c6038662af31$export$7f57f51729968d3b","sColor","remove","intervals","iSorted","midpoints","i2","lower","upper","$b2d68b3e7dd10139$var$findIntervals","densityProfile1","$b2d68b3e7dd10139$var$sumGaussian","$b2d68b3e7dd10139$var$sumBlock","block","interval","lower2","upper2","lower3","upper3","center","sigma","arcTo","radius","x0","y0","unit_vec_p1_p0","unit_vec_p1_p2","cos","theta","acos","abs","unit_vec_p1_origin","len_p1_origin","sin","x3","y3","unit_vec_origin_start_tangent","unit_vec_origin_end_tangent","getAngle","startAngle","endAngle","arc","stroke","fill","rect","fillRect","strokeRect","__clearCanvas","rootGroup","removeChild","createLinearGradient","grad","gradientUnits","createRadialGradient","r0","r1","cy","fx","fy","__parseFont","fontPart","font","size","family","weight","decoration","__fontHref","__wrapTextLink","__applyText","text","textElement","left","right","createTextNode","fillText","strokeText","measureText","pluralityBallot","candidates","voterGroups","dimensions","summer","$b2d68b3e7dd10139$export$2e2bcd8739ae039","$7b2626bce2a28c1d$export$2e2bcd8739ae039","tally","index","total","p","votes","tallyFractions","nk","huntingtonHill","electionMethodOptions","seats","threshold","populations","nparties","minPopulation","divisorPattern","_","lastSignpost","flat","menu","run","electionResults","checkElectionType","methodResults","$ee120a7268fdcb91$export$2e2bcd8739ae039","electionMethod","allocation","iWinner","electionMethodList","electionMethodListByFunctionName","setElectionMethod","method","$b860c4c21bb814d1$export$2e2bcd8739ae039","setDimensions","mapVoters","vg","p1","w1","p2","w2","mapCans","canList","can","runElection","voterGeom","canGeom","$a0cd9654243cb66c$export$2e2bcd8739ae039","castVotes","voters","getVoterGroups","getCandidates","$e5cd87510cb0735f$var$splitter","$e5cd87510cb0735f$var$sum","elen","flen","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","$e5cd87510cb0735f$var$vec","Float64Array","$e5cd87510cb0735f$var$B","$e5cd87510cb0735f$var$C1","$e5cd87510cb0735f$var$C2","$e5cd87510cb0735f$var$D","$e5cd87510cb0735f$var$u","$e5cd87510cb0735f$var$orient2d","bx","by","detleft","detright","det","detsum","acxtail","acytail","bcxtail","bcytail","ahi","alo","bhi","blo","_i","_j","_0","s1","s0","t1","t0","u3","acx","bcx","acy","bcy","$e5cd87510cb0735f$var$estimate","errbound","C1len","C2len","Dlen","$e5cd87510cb0735f$var$orient2dadapt","$e5cd87510cb0735f$var$EPSILON","pow","$e5cd87510cb0735f$var$EDGE_STACK","Uint32Array","$e5cd87510cb0735f$var$Delaunator","points","getX","$e5cd87510cb0735f$var$defaultGetX","getY","$e5cd87510cb0735f$var$defaultGetY","coords","maxTriangles","_triangles","_halfedges","Int32Array","_hashSize","ceil","_hullPrev","_hullNext","_hullTri","_hullHash","_ids","_dists","update","hullPrev","hullNext","hullTri","hullHash","minX","minY","maxX","maxY","i0","minDist","i3","$e5cd87510cb0735f$var$dist","i0x","i0y","i4","i1x","i1y","minRadius","i5","$e5cd87510cb0735f$var$circumradius","i2x","i2y","$e5cd87510cb0735f$var$quicksort","hull","j","i8","d0","subarray","triangles","halfedges","ex","ey","bl","cl","$e5cd87510cb0735f$var$circumcenter","_cx","_cy","i6","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","q","_legalize","i7","$e5cd87510cb0735f$var$pseudoAngle","ar","a0","al","$e5cd87510cb0735f$var$inCircle","p0","pr","pl","hbl","_link","br","b0","px","py","bp","cp","ids","dists","temp","tempDist","$e5cd87510cb0735f$var$swap","arr","tmp","$e5cd87510cb0735f$var$epsilon","$e5cd87510cb0735f$var$Path","_x0","_y0","_x1","_y1","slice","$e5cd87510cb0735f$export$20f0351992a349","constructor","delaunay","xmin","ymin","xmax","ymax","_circumcenters","vectors","_init","circumcenters","t2","t3","ab","i9","buffer","inedges","ti","tj","xi","yi","xj","yj","_renderSegment","h0","h1","i10","_project","_clip","i11","cell","cellPolygon","polygon","$e5cd87510cb0735f$var$Polygon","renderCell","S","c0","_regioncode","_clipSegment","_step","ci","neighbors","cj","loop","ai","li","aj","lj","_cell","e0","V","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_edgecode","_edge","contains","vx0","vy0","vxn","vyn","from","unshift","i12","vx","vy","$e5cd87510cb0735f$var$tau","$e5cd87510cb0735f$var$pow","$e5cd87510cb0735f$var$pointX","$e5cd87510cb0735f$var$pointY","$e5cd87510cb0735f$var$jitter","static","that","$e5cd87510cb0735f$export$42fc3f3b24093a06","array","$e5cd87510cb0735f$var$flatArray","$e5cd87510cb0735f$var$flatIterable","_delaunator","$e5cd87510cb0735f$var$collinear","collinear","bounds","hypot","i13","hullIndex","_hullIndex","n1","l","dt","dc","render","renderHull","trianglePolygon","renderTriangle","voronoi","clip","voterCircle","dragm","voter","newCircleHandle","renderForeground","$be74229b9e6046ab$export$2e2bcd8739ae039","call","voronoiGroup","$549d032d5ec3640b$export$2e2bcd8739ae039","candidate","newSquareHandle","square","sim","simCans","newCandidate","simCan","getSimCandidates","exists","getCandidatesAll","setCandidateFractions","fractions","fraction","setFraction","setCandidateWins","winsByCandidate","win","setWins","updateXY","showGhosts","renderForegroundAll","renderForegroundExisting","numCandidates","simVoters","newVoterGroup","getSimVoterGroups","drag","draggables","isSquare","isCircle","event","mouse","offsetX","offsetY","extra","isTouch","nd","hitTest","iDragging","isDragging","offX","offY","pickUp","dataset","cursor","couldBeClick","structuredClone","startClickDetect","endClickDetect","drop","preventDefault","stopPropagation","setXY","xDist","startPos","yDist","moveClickDetect","passTouch","target","getBoundingClientRect","clientWidth","clientHeight","changedTouches","clientX","clientY","pass","m","$ddb4de2d334b0195$export$2e2bcd8739ae039","enter","exit","oneElection","$da9ab18c28e2e6aa$export$2e2bcd8739ae039","oneVoters","$25d368a5b3ca04c7$export$2e2bcd8739ae039","simCandidateList","$1d8389cb79293516$export$2e2bcd8739ae039","addSimCandidate","$0e6c44fc7a433117$export$2e2bcd8739ae039","addSimVoterCircle","$7b30254c18364dc7$export$2e2bcd8739ae039","superEnter","simAddCandidates","canButton","show","election","hide","updateTallies","candidateDistributions","cdf","areasProportion","cd","sumAreasProportion","pmf","$cba26d0191240401$var$getCDF","samplePoint","iDist","random1","findIndex","$cba26d0191240401$var$randomDistribution","X","Y","R","$cba26d0191240401$var$randomInsideCircle","$cba26d0191240401$var$samplePoint1","simCanDns","simCanDn","getSimCandidateDistributions","canDn","getCandidateDistributions","getCandidateDistributionsAll","startSampler","canDns","sampler","$cba26d0191240401$export$2e2bcd8739ae039","sampleElections","$4fa69ba06ea48962$export$2e2bcd8739ae039","addSimCandidateDistribution","$1c01ef12293a8615$export$2e2bcd8739ae039","sampleVoters","$cdeaa7e23b6b8c93$export$2e2bcd8739ae039","simAddCandidateDns","canDnButton","addSim","startSim","renderAt","newX","newY","renderCenterAt","$f556f940d09c9a1d$var$F2","$f556f940d09c9a1d$var$G2","$f556f940d09c9a1d$var$G3","$f556f940d09c9a1d$var$F4","$f556f940d09c9a1d$var$G4","$f556f940d09c9a1d$var$grad3","Float32Array","$f556f940d09c9a1d$var$grad4","randomOrSeed","$f556f940d09c9a1d$var$alea","$f556f940d09c9a1d$export$98cd52c6119fe283","perm","Uint8Array","permMod12","noise2D","n0","n2","s","j1","ii","jj","gi0","gi1","gi2","noise3D","z","n3","z0","k1","j2","k2","z1","z2","z3","kk","gi3","noise4D","n4","w0","rankx","ranky","rankz","rankw","l1","l2","j3","k3","l3","x4","y4","z4","w4","ll","w3","t4","gi4","nx","ny","sn","genNoise","noiseWidth","noiseHeight","xAmp","yAmp","simplexX","$f556f940d09c9a1d$export$7cef8d54b4fb09be","simplexY","$c913a56498196062$var$zeros","sumX","sumY","$c913a56498196062$var$range","ix","iy","noiseX","noiseY","meanX","meanY","$c913a56498196062$export$8cea35b328240292","offCtx","imageData","createImageData","putImageData","colors","renderWidth","renderHeight","imageSmoothingEnabled","drawImage","tolFraction","polygons","centroids","$b88c6a1775da370c$var$randomPoints","converged","tol","$b88c6a1775da370c$var$relax","$381ccf2757a64c6c$export$2e2bcd8739ae039","every","point","$b88c6a1775da370c$var$distance2","$11eb5e0ad93fc4ca$export$a2f18a0619b13ed4","textsize","lw","alpha","subject","closed","$e484bd409bc88322$var$polygonClosed","input","$e484bd409bc88322$var$lineOrient","$e484bd409bc88322$var$lineIntersect","bax","bay","dcx","dcy","$fbefcda9c3d500d6$var$makeSquare","make","polygonAreas","$a9cc2d0bc18368cd$export$2e2bcd8739ae039","totalArea","census","districtMaker","gx","gy","iDistrict","overlap","$e484bd409bc88322$export$2e2bcd8739ae039","JSON","parse","stringify","reverse","$fbefcda9c3d500d6$export$2e2bcd8739ae039","renderVoronoi","geoMapWidth","geoMapHeight","renderVoronoiGeneral","renderAreaText","renderVoronoiColors","textFunction","scaleX","scaleY","geoElection","$ea87173ebe7c496f$export$2e2bcd8739ae039","geoNoise","$c913a56498196062$export$2e2bcd8739ae039","noiseImage","$554f2c796a0f1bd5$export$2e2bcd8739ae039","simVoterGroups","updateDistricts","updateVoters","updateFullSet","updateVotersByDistrict","updateVotersByTract","vb","rowNoise","cellNoise","xNoise","yNoise","gf","row","smallCircle","renderTractVotes","renderDistrictWins","renderDistrictVotes","renderVoterBasisSet","winnerColors","blendColors","geoVoters","$b9c43796ba5f2294$export$2e2bcd8739ae039","$ab669385e2ccd59d$export$2e2bcd8739ae039","fillUndefined","updateVotes","entities","nextID","new","num","get","$478baf4512f7400e$var$cachedSetTimeout","$478baf4512f7400e$var$cachedClearTimeout","$478baf4512f7400e$var$process","$478baf4512f7400e$exports","$478baf4512f7400e$var$defaultSetTimout","$478baf4512f7400e$var$defaultClearTimeout","$478baf4512f7400e$var$runTimeout","fun","clearTimeout","$478baf4512f7400e$var$currentQueue","$478baf4512f7400e$var$queue","$478baf4512f7400e$var$draining","$478baf4512f7400e$var$queueIndex","$478baf4512f7400e$var$cleanUpNextTick","concat","$478baf4512f7400e$var$drainQueue","timeout","marker","$478baf4512f7400e$var$runClearTimeout","$478baf4512f7400e$var$Item","$478baf4512f7400e$var$noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$48c47b1a48ae3b30$export$cea96571ebbff9dd","None","amount","In","Out","InOut","Bounce","hrtime","time","performance","now","bind","Date","getTime","$48c47b1a48ae3b30$export$eb2fcfdbd7ba97d4","_tweens","_tweensAddedDuringUpdate","getAll","_this","tweenId","removeAll","tween","getId","preserve","$48c47b1a48ae3b30$export$461939dd4422153","tweenIds","autoStart","$48c47b1a48ae3b30$export$b0cc4f9860136880","Linear","fn","Utils","pw","bn","Bernstein","CatmullRom","fc","Factorial","p3","v0","v1","$48c47b1a48ae3b30$export$edde1bcb1b2b310e","nextId","_nextId","$48c47b1a48ae3b30$export$208a41d6b4e37b97","_object","_group","$48c47b1a48ae3b30$var$mainGroup","_isPaused","_pauseStart","_valuesStart","_valuesEnd","_valuesStartRepeat","_duration","_initialRepeat","_repeat","_yoyo","_isPlaying","_reversed","_delayTime","_startTime","_easingFunction","_interpolationFunction","_chainedTweens","_onStartCallbackFired","_id","_isChainStopped","_goToEnd","isPlaying","isPaused","to","duration","create","property","_swapEndStartRepeatValues","parseFloat","_setupProperties","startValue","startValueIsArray","propType","isInterpolationList","endValues","_handleRelativeValue","stopChainedTweens","_onStopCallback","pause","resume","numChainedTweens","delay","repeat","times","repeatDelay","_repeatDelayTime","yoyo","easing","easingFunction","interpolation","interpolationFunction","chain","tweens","onStart","callback","_onStartCallback","onUpdate","_onUpdateCallback","onRepeat","_onRepeatCallback","onComplete","_onCompleteCallback","onStop","endTime","elapsed","_updateProperties","startIsArray","endIsArray","charAt","endValue","trueR","box","position","border","padding","background","outsideClickListener","elem","offsetWidth","offsetHeight","getClientRects","removeClickListener","removeEventListener","$c21ab639a72e841e$export$2e2bcd8739ae039","$28f3275ccaf46ef0$var$Item","val","setE","div","setW1","setDensityProfile1","setW2","setColor","setShowNonExistingEntities","onChange","defaultValue","choices","option","checked","step","for","voterRegistrar","doLoad","voterCommander","instantiate","setESenderForList","setP2SenderForList","setP1SenderForList","setW2SenderForList","setW1SenderForList","setDensityProfile1SenderForList","loadCommands","doCommands","setEAction","cur","getCurrentValue","setP2Action","setP1Action","setW2Action","newW","setW1Action","setDensityProfile1Action","newDensityProfile1","click","$28f3275ccaf46ef0$export$2e2bcd8739ae039","$6096d1144969c10b$export$2e2bcd8739ae039","simAddVoters","addSenderForList","setNumberVoters","props","isChain","dp1","setNumberVotersSender","setNumberVotersAction","isFirstAction","sims","addVoterButton","addVoterPressed","$693b7a83070062a3$export$2e2bcd8739ae039","$93bf61687e0acd03$export$2e2bcd8739ae039","$b926216e6e1f6793$export$2e2bcd8739ae039","addVoterCircle","$6bff24280984d4c1$export$2e2bcd8739ae039","one","oneDOne","geoOne","sample","trueW","trueH","tweenSq","wHandle","hHandle","candidateRegistrar","candidateCommander","setColorSenderForList","setColorAction","newColor","$16cfe2bdd82d8091$export$2e2bcd8739ae039","wins","toFixed","prefix","setNumberCandidates","setNumberCandidatesSender","setNumberCandidatesAction","addCandidateButton","addCandidatePressed","$00ae681389b5eb5e$export$2e2bcd8739ae039","$7cad4102d954b952$export$2e2bcd8739ae039","addCandidate","$857f7aab49c32763$export$2e2bcd8739ae039","candidateDnRegistrar","candidateDnCommander","setNumberCandidateDns","setNumberCandidateDnsSender","setNumberCandidateDnsAction","addCandidateDistributionButton","addCandidateDistributionPressed","$6a09cd00f49a6d90$export$2e2bcd8739ae039","$c4318fed8ddd96e4$export$2e2bcd8739ae039","addCandidateDistribution","candidateDistribution","$6d216d0a2ec1877e$export$2e2bcd8739ae039","doPath","amp","pa","gaussianPath","oneDVoronoiBlock","$e08749258a5586e0$export$2e2bcd8739ae039","$cd1af455528ffeba$export$2e2bcd8739ae039","$fb1d46f883a07efa$export$2e2bcd8739ae039","$63f3628811261519$export$2e2bcd8739ae039","$2a17d13d0aa17349$export$2e2bcd8739ae039","$813812d418de76d3$export$2e2bcd8739ae039","$ea636b672fc282de$export$2e2bcd8739ae039","$61b0508734532caf$export$2e2bcd8739ae039","$33a27ccd45a94318$export$2e2bcd8739ae039","$f086f5d770a501ff$export$2e2bcd8739ae039","typeList","newPoints","context2","canvas2","sampleCandidates","results","winner","winPoint","jitterSize","numPoints","renderPoints","noBufferRender","bufferRender","$c77b28194f78f735$var$r","$c77b28194f78f735$export$8da5152a7cb9deca","rgba","toLowerCase","String","$c77b28194f78f735$export$fdb28526eb2966c3","trim","toString","fracSum","colorB","$ef353fcd6eb81187$var$frac","thing","other","updateStatewideTallies","updateNoiseImage","runDistrictElections","updateWinColors","updateColorBlendGeoMap","updateWins","allVoterGroups","voterGroupsByTract","resultsByTract","allColors","$ef353fcd6eb81187$export$2e2bcd8739ae039","colorSet","loadColors","voterGroupsByDistrict","resultsByDistrict","histogram","order","divsByName","extraDivs","makeComponent","actions","do","firstActions","makeUndo","loadConfigPriority","priority","isHigh","valueArray","execute","history","head","clearHistory","undoCommand","historyItem","undo","last","pair","chainTimer","redo","next","comMessenger","commandStore","$6130f44f768a268d$export$2e2bcd8739ae039","configKeeper","$6332fa552f960b2e$export$2e2bcd8739ae039","$28203dcb19e526a2$export$2e2bcd8739ae039","getConfig","loadConfig","obj","sandboxURL","button2","getLink","encodedConfig","sp","location","sl","join","getFolder","link","navigator","clipboard","writeText","$5b0e6872a2899b94$export$2e2bcd8739ae039","$e0b757014bff90a3$export$2e2bcd8739ae039","$ab56d101b96b38ee$export$2e2bcd8739ae039","$391ef04f7f5158b8$export$2e2bcd8739ae039","undoButton","redoButton","$b18b7541dc28940b$export$2e2bcd8739ae039","$fe9b20ad1af12252$export$2e2bcd8739ae039","$1fe54c51b774a9e8$export$2e2bcd8739ae039","$8ddddc532219b614$export$2e2bcd8739ae039","$705ca8a2f34171f8$export$2e2bcd8739ae039","$cc1b5be8d2aed4c2$export$2e2bcd8739ae039","$1090428139f5fe20$export$2e2bcd8739ae039","$40306ad643699081$export$2e2bcd8739ae039","$0ec65aed8fc29256$export$2e2bcd8739ae039","$c074b4bed6c2b13f$export$2e2bcd8739ae039","$24bbb315554fbe91$export$2e2bcd8739ae039","requestAnimationFrame","gameLoop","getElementsByClassName","targetConfig","cu","urlParams","URLSearchParams","search","yes","has","$d5ff4bfd7950f485$export$2e2bcd8739ae039","sandboxurl","$c79d11f6216552bb$export$2e2bcd8739ae039","$474f7ac0806c1369$export$2e2bcd8739ae039"],"version":3,"file":"addSandboxes.js.map"}